/**
 * This class is generated by jOOQ
 */
package info.blogstack.persistence.jooq.tables.records;


import info.blogstack.persistence.jooq.tables.Post;
import info.blogstack.persistence.jooq.tables.interfaces.IPost;

import javax.annotation.Generated;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostRecord extends UpdatableRecordImpl<PostRecord> implements Record15<Long, DateTime, DateTime, DateTime, DateTime, String, String, String, String, byte[], Long, Long, Boolean, Boolean, Long>, IPost {

	private static final long serialVersionUID = 240367409;

	/**
	 * Setter for <code>BLOGSTACK.POST.ID</code>.
	 */
	@Override
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.ID</code>.
	 */
	@Override
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.CREATIONDATE</code>.
	 */
	@Override
	public void setCreationdate(DateTime value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.CREATIONDATE</code>.
	 */
	@Override
	public DateTime getCreationdate() {
		return (DateTime) getValue(1);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.UPDATEDATE</code>.
	 */
	@Override
	public void setUpdatedate(DateTime value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.UPDATEDATE</code>.
	 */
	@Override
	public DateTime getUpdatedate() {
		return (DateTime) getValue(2);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.PUBLISHDATE</code>.
	 */
	@Override
	public void setPublishdate(DateTime value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.PUBLISHDATE</code>.
	 */
	@Override
	public DateTime getPublishdate() {
		return (DateTime) getValue(3);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.DATE</code>.
	 */
	@Override
	public void setDate(DateTime value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.DATE</code>.
	 */
	@Override
	public DateTime getDate() {
		return (DateTime) getValue(4);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.URL</code>.
	 */
	@Override
	public void setUrl(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.URL</code>.
	 */
	@Override
	public String getUrl() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.HASH</code>.
	 */
	@Override
	public void setHash(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.HASH</code>.
	 */
	@Override
	public String getHash() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.TITLE</code>.
	 */
	@Override
	public void setTitle(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.TITLE</code>.
	 */
	@Override
	public String getTitle() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.AUTHOR</code>.
	 */
	@Override
	public void setAuthor(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.AUTHOR</code>.
	 */
	@Override
	public String getAuthor() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.CONTENTCOMPRESSED</code>.
	 */
	@Override
	public void setContentcompressed(byte[] value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.CONTENTCOMPRESSED</code>.
	 */
	@Override
	public byte[] getContentcompressed() {
		return (byte[]) getValue(9);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.INDEXATION_ID</code>.
	 */
	@Override
	public void setIndexationId(Long value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.INDEXATION_ID</code>.
	 */
	@Override
	public Long getIndexationId() {
		return (Long) getValue(10);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.SOURCE_ID</code>.
	 */
	@Override
	public void setSourceId(Long value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.SOURCE_ID</code>.
	 */
	@Override
	public Long getSourceId() {
		return (Long) getValue(11);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.VISIBLE</code>.
	 */
	@Override
	public void setVisible(Boolean value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.VISIBLE</code>.
	 */
	@Override
	public Boolean getVisible() {
		return (Boolean) getValue(12);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.SHARED</code>.
	 */
	@Override
	public void setShared(Boolean value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.SHARED</code>.
	 */
	@Override
	public Boolean getShared() {
		return (Boolean) getValue(13);
	}

	/**
	 * Setter for <code>BLOGSTACK.POST.NEWSLETTER_ID</code>.
	 */
	@Override
	public void setNewsletterId(Long value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POST.NEWSLETTER_ID</code>.
	 */
	@Override
	public Long getNewsletterId() {
		return (Long) getValue(14);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record15 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<Long, DateTime, DateTime, DateTime, DateTime, String, String, String, String, byte[], Long, Long, Boolean, Boolean, Long> fieldsRow() {
		return (Row15) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<Long, DateTime, DateTime, DateTime, DateTime, String, String, String, String, byte[], Long, Long, Boolean, Boolean, Long> valuesRow() {
		return (Row15) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Post.POST.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<DateTime> field2() {
		return Post.POST.CREATIONDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<DateTime> field3() {
		return Post.POST.UPDATEDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<DateTime> field4() {
		return Post.POST.PUBLISHDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<DateTime> field5() {
		return Post.POST.DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Post.POST.URL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Post.POST.HASH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Post.POST.TITLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Post.POST.AUTHOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field10() {
		return Post.POST.CONTENTCOMPRESSED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field11() {
		return Post.POST.INDEXATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field12() {
		return Post.POST.SOURCE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field13() {
		return Post.POST.VISIBLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field14() {
		return Post.POST.SHARED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field15() {
		return Post.POST.NEWSLETTER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTime value2() {
		return getCreationdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTime value3() {
		return getUpdatedate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTime value4() {
		return getPublishdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTime value5() {
		return getDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getUrl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getHash();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getAuthor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value10() {
		return getContentcompressed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value11() {
		return getIndexationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value12() {
		return getSourceId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value13() {
		return getVisible();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value14() {
		return getShared();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value15() {
		return getNewsletterId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value2(DateTime value) {
		setCreationdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value3(DateTime value) {
		setUpdatedate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value4(DateTime value) {
		setPublishdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value5(DateTime value) {
		setDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value6(String value) {
		setUrl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value7(String value) {
		setHash(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value8(String value) {
		setTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value9(String value) {
		setAuthor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value10(byte[] value) {
		setContentcompressed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value11(Long value) {
		setIndexationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value12(Long value) {
		setSourceId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value13(Boolean value) {
		setVisible(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value14(Boolean value) {
		setShared(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord value15(Long value) {
		setNewsletterId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostRecord values(Long value1, DateTime value2, DateTime value3, DateTime value4, DateTime value5, String value6, String value7, String value8, String value9, byte[] value10, Long value11, Long value12, Boolean value13, Boolean value14, Long value15) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPost from) {
		setId(from.getId());
		setCreationdate(from.getCreationdate());
		setUpdatedate(from.getUpdatedate());
		setPublishdate(from.getPublishdate());
		setDate(from.getDate());
		setUrl(from.getUrl());
		setHash(from.getHash());
		setTitle(from.getTitle());
		setAuthor(from.getAuthor());
		setContentcompressed(from.getContentcompressed());
		setIndexationId(from.getIndexationId());
		setSourceId(from.getSourceId());
		setVisible(from.getVisible());
		setShared(from.getShared());
		setNewsletterId(from.getNewsletterId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPost> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PostRecord
	 */
	public PostRecord() {
		super(Post.POST);
	}

	/**
	 * Create a detached, initialised PostRecord
	 */
	public PostRecord(Long id, DateTime creationdate, DateTime updatedate, DateTime publishdate, DateTime date, String url, String hash, String title, String author, byte[] contentcompressed, Long indexationId, Long sourceId, Boolean visible, Boolean shared, Long newsletterId) {
		super(Post.POST);

		setValue(0, id);
		setValue(1, creationdate);
		setValue(2, updatedate);
		setValue(3, publishdate);
		setValue(4, date);
		setValue(5, url);
		setValue(6, hash);
		setValue(7, title);
		setValue(8, author);
		setValue(9, contentcompressed);
		setValue(10, indexationId);
		setValue(11, sourceId);
		setValue(12, visible);
		setValue(13, shared);
		setValue(14, newsletterId);
	}
}
