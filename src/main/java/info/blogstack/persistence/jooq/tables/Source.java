/**
 * This class is generated by jOOQ
 */
package info.blogstack.persistence.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Source extends org.jooq.impl.TableImpl<info.blogstack.persistence.jooq.tables.records.SourceRecord> {

	private static final long serialVersionUID = -1364370354;

	/**
	 * The singleton instance of <code>BLOGSTACK.SOURCE</code>
	 */
	public static final info.blogstack.persistence.jooq.tables.Source SOURCE = new info.blogstack.persistence.jooq.tables.Source();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<info.blogstack.persistence.jooq.tables.records.SourceRecord> getRecordType() {
		return info.blogstack.persistence.jooq.tables.records.SourceRecord.class;
	}

	/**
	 * The column <code>BLOGSTACK.SOURCE.ID</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.CREATIONDATE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, org.joda.time.DateTime> CREATIONDATE = createField("CREATIONDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new info.blogstack.persistence.records.DateTimeConverter());

	/**
	 * The column <code>BLOGSTACK.SOURCE.UPDATEDATE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, org.joda.time.DateTime> UPDATEDATE = createField("UPDATEDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new info.blogstack.persistence.records.DateTimeConverter());

	/**
	 * The column <code>BLOGSTACK.SOURCE.NAME</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.ALIAS</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.String> ALIAS = createField("ALIAS", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.PAGEURL</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.String> PAGEURL = createField("PAGEURL", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.URL</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.String> URL = createField("URL", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.AUTHOR</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.String> AUTHOR = createField("AUTHOR", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.EMAIL</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.DISQUSSHORTNAME</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.String> DISQUSSHORTNAME = createField("DISQUSSHORTNAME", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.ADSENSE_ID</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.Long> ADSENSE_ID = createField("ADSENSE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.IMPORTSOURCE_ID</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.Long> IMPORTSOURCE_ID = createField("IMPORTSOURCE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>BLOGSTACK.SOURCE.ENABLED</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.Boolean> ENABLED = createField("ENABLED", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * Create a <code>BLOGSTACK.SOURCE</code> table reference
	 */
	public Source() {
		this("SOURCE", null);
	}

	/**
	 * Create an aliased <code>BLOGSTACK.SOURCE</code> table reference
	 */
	public Source(java.lang.String alias) {
		this(alias, info.blogstack.persistence.jooq.tables.Source.SOURCE);
	}

	private Source(java.lang.String alias, org.jooq.Table<info.blogstack.persistence.jooq.tables.records.SourceRecord> aliased) {
		this(alias, aliased, null);
	}

	private Source(java.lang.String alias, org.jooq.Table<info.blogstack.persistence.jooq.tables.records.SourceRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, info.blogstack.persistence.jooq.Blogstack.BLOGSTACK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.Long> getIdentity() {
		return info.blogstack.persistence.jooq.Keys.IDENTITY_SOURCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.SourceRecord> getPrimaryKey() {
		return info.blogstack.persistence.jooq.Keys.PK_SOURCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.SourceRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.SourceRecord>>asList(info.blogstack.persistence.jooq.Keys.PK_SOURCE, info.blogstack.persistence.jooq.Keys.CONSTRAINT_9, info.blogstack.persistence.jooq.Keys.CONSTRAINT_92);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.SourceRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.SourceRecord, ?>>asList(info.blogstack.persistence.jooq.Keys.SOURCE_ADSENSE_ID, info.blogstack.persistence.jooq.Keys.SOURCE_IMPORTSOURCE_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public info.blogstack.persistence.jooq.tables.Source as(java.lang.String alias) {
		return new info.blogstack.persistence.jooq.tables.Source(alias, this);
	}

	/**
	 * Rename this table
	 */
	public info.blogstack.persistence.jooq.tables.Source rename(java.lang.String name) {
		return new info.blogstack.persistence.jooq.tables.Source(name, null);
	}
}
