/**
 * This class is generated by jOOQ
 */
package info.blogstack.persistence.jooq.tables.records;


import info.blogstack.persistence.jooq.tables.PostsIndexations;
import info.blogstack.persistence.jooq.tables.interfaces.IPostsIndexations;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostsIndexationsRecord extends UpdatableRecordImpl<PostsIndexationsRecord> implements Record3<Long, Long, Long>, IPostsIndexations {

	private static final long serialVersionUID = -332004260;

	/**
	 * Setter for <code>BLOGSTACK.POSTS_INDEXATIONS.ID</code>.
	 */
	@Override
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POSTS_INDEXATIONS.ID</code>.
	 */
	@Override
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>BLOGSTACK.POSTS_INDEXATIONS.POST_ID</code>.
	 */
	@Override
	public void setPostId(Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POSTS_INDEXATIONS.POST_ID</code>.
	 */
	@Override
	public Long getPostId() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>BLOGSTACK.POSTS_INDEXATIONS.INDEXATION_ID</code>.
	 */
	@Override
	public void setIndexationId(Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.POSTS_INDEXATIONS.INDEXATION_ID</code>.
	 */
	@Override
	public Long getIndexationId() {
		return (Long) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Long, Long, Long> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Long, Long, Long> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return PostsIndexations.POSTS_INDEXATIONS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return PostsIndexations.POSTS_INDEXATIONS.POST_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field3() {
		return PostsIndexations.POSTS_INDEXATIONS.INDEXATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getPostId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value3() {
		return getIndexationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostsIndexationsRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostsIndexationsRecord value2(Long value) {
		setPostId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostsIndexationsRecord value3(Long value) {
		setIndexationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostsIndexationsRecord values(Long value1, Long value2, Long value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPostsIndexations from) {
		setId(from.getId());
		setPostId(from.getPostId());
		setIndexationId(from.getIndexationId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPostsIndexations> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PostsIndexationsRecord
	 */
	public PostsIndexationsRecord() {
		super(PostsIndexations.POSTS_INDEXATIONS);
	}

	/**
	 * Create a detached, initialised PostsIndexationsRecord
	 */
	public PostsIndexationsRecord(Long id, Long postId, Long indexationId) {
		super(PostsIndexations.POSTS_INDEXATIONS);

		setValue(0, id);
		setValue(1, postId);
		setValue(2, indexationId);
	}
}
