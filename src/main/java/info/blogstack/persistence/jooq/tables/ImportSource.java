/**
 * This class is generated by jOOQ
 */
package info.blogstack.persistence.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImportSource extends org.jooq.impl.TableImpl<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord> {

	private static final long serialVersionUID = -121570982;

	/**
	 * The singleton instance of <code>BLOGSTACK.IMPORT_SOURCE</code>
	 */
	public static final info.blogstack.persistence.jooq.tables.ImportSource IMPORT_SOURCE = new info.blogstack.persistence.jooq.tables.ImportSource();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord> getRecordType() {
		return info.blogstack.persistence.jooq.tables.records.ImportSourceRecord.class;
	}

	/**
	 * The column <code>BLOGSTACK.IMPORT_SOURCE.ID</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord, java.lang.Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>BLOGSTACK.IMPORT_SOURCE.CREATIONDATE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord, org.joda.time.DateTime> CREATIONDATE = createField("CREATIONDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new info.blogstack.persistence.records.DateTimeConverter());

	/**
	 * The column <code>BLOGSTACK.IMPORT_SOURCE.UPDATEDATE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord, org.joda.time.DateTime> UPDATEDATE = createField("UPDATEDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new info.blogstack.persistence.records.DateTimeConverter());

	/**
	 * Create a <code>BLOGSTACK.IMPORT_SOURCE</code> table reference
	 */
	public ImportSource() {
		this("IMPORT_SOURCE", null);
	}

	/**
	 * Create an aliased <code>BLOGSTACK.IMPORT_SOURCE</code> table reference
	 */
	public ImportSource(java.lang.String alias) {
		this(alias, info.blogstack.persistence.jooq.tables.ImportSource.IMPORT_SOURCE);
	}

	private ImportSource(java.lang.String alias, org.jooq.Table<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord> aliased) {
		this(alias, aliased, null);
	}

	private ImportSource(java.lang.String alias, org.jooq.Table<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, info.blogstack.persistence.jooq.Blogstack.BLOGSTACK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord, java.lang.Long> getIdentity() {
		return info.blogstack.persistence.jooq.Keys.IDENTITY_IMPORT_SOURCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord> getPrimaryKey() {
		return info.blogstack.persistence.jooq.Keys.PK_IMPORT_SOURCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord>>asList(info.blogstack.persistence.jooq.Keys.PK_IMPORT_SOURCE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public info.blogstack.persistence.jooq.tables.ImportSource as(java.lang.String alias) {
		return new info.blogstack.persistence.jooq.tables.ImportSource(alias, this);
	}

	/**
	 * Rename this table
	 */
	public info.blogstack.persistence.jooq.tables.ImportSource rename(java.lang.String name) {
		return new info.blogstack.persistence.jooq.tables.ImportSource(name, null);
	}
}
