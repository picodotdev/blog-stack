/**
 * This class is generated by jOOQ
 */
package info.blogstack.persistence.jooq.tables;


import info.blogstack.persistence.jooq.Blogstack;
import info.blogstack.persistence.jooq.Keys;
import info.blogstack.persistence.jooq.tables.records.PostsIndexationsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostsIndexations extends TableImpl<PostsIndexationsRecord> {

	private static final long serialVersionUID = -1626231334;

	/**
	 * The reference instance of <code>BLOGSTACK.POSTS_INDEXATIONS</code>
	 */
	public static final PostsIndexations POSTS_INDEXATIONS = new PostsIndexations();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PostsIndexationsRecord> getRecordType() {
		return PostsIndexationsRecord.class;
	}

	/**
	 * The column <code>BLOGSTACK.POSTS_INDEXATIONS.ID</code>.
	 */
	public final TableField<PostsIndexationsRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>BLOGSTACK.POSTS_INDEXATIONS.POST_ID</code>.
	 */
	public final TableField<PostsIndexationsRecord, Long> POST_ID = createField("POST_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>BLOGSTACK.POSTS_INDEXATIONS.INDEXATION_ID</code>.
	 */
	public final TableField<PostsIndexationsRecord, Long> INDEXATION_ID = createField("INDEXATION_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>BLOGSTACK.POSTS_INDEXATIONS</code> table reference
	 */
	public PostsIndexations() {
		this("POSTS_INDEXATIONS", null);
	}

	/**
	 * Create an aliased <code>BLOGSTACK.POSTS_INDEXATIONS</code> table reference
	 */
	public PostsIndexations(String alias) {
		this(alias, POSTS_INDEXATIONS);
	}

	private PostsIndexations(String alias, Table<PostsIndexationsRecord> aliased) {
		this(alias, aliased, null);
	}

	private PostsIndexations(String alias, Table<PostsIndexationsRecord> aliased, Field<?>[] parameters) {
		super(alias, Blogstack.BLOGSTACK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PostsIndexationsRecord, Long> getIdentity() {
		return Keys.IDENTITY_POSTS_INDEXATIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PostsIndexationsRecord> getPrimaryKey() {
		return Keys.PK_POSTS_INDEXATIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PostsIndexationsRecord>> getKeys() {
		return Arrays.<UniqueKey<PostsIndexationsRecord>>asList(Keys.PK_POSTS_INDEXATIONS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PostsIndexationsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PostsIndexationsRecord, ?>>asList(Keys.POSTS_INDEXATIONS_POST_ID, Keys.POSTS_INDEXATIONS_INDEXATION_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PostsIndexations as(String alias) {
		return new PostsIndexations(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PostsIndexations rename(String name) {
		return new PostsIndexations(name, null);
	}
}
