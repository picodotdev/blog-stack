/**
 * This class is generated by jOOQ
 */
package info.blogstack.persistence.jooq.tables.records;


import info.blogstack.persistence.jooq.tables.ImportSource;
import info.blogstack.persistence.jooq.tables.interfaces.IImportSource;

import javax.annotation.Generated;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImportSourceRecord extends UpdatableRecordImpl<ImportSourceRecord> implements Record3<Long, DateTime, DateTime>, IImportSource {

	private static final long serialVersionUID = 83378140;

	/**
	 * Setter for <code>BLOGSTACK.IMPORT_SOURCE.ID</code>.
	 */
	@Override
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.IMPORT_SOURCE.ID</code>.
	 */
	@Override
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>BLOGSTACK.IMPORT_SOURCE.CREATIONDATE</code>.
	 */
	@Override
	public void setCreationdate(DateTime value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.IMPORT_SOURCE.CREATIONDATE</code>.
	 */
	@Override
	public DateTime getCreationdate() {
		return (DateTime) getValue(1);
	}

	/**
	 * Setter for <code>BLOGSTACK.IMPORT_SOURCE.UPDATEDATE</code>.
	 */
	@Override
	public void setUpdatedate(DateTime value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>BLOGSTACK.IMPORT_SOURCE.UPDATEDATE</code>.
	 */
	@Override
	public DateTime getUpdatedate() {
		return (DateTime) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Long, DateTime, DateTime> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Long, DateTime, DateTime> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return ImportSource.IMPORT_SOURCE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<DateTime> field2() {
		return ImportSource.IMPORT_SOURCE.CREATIONDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<DateTime> field3() {
		return ImportSource.IMPORT_SOURCE.UPDATEDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTime value2() {
		return getCreationdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTime value3() {
		return getUpdatedate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImportSourceRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImportSourceRecord value2(DateTime value) {
		setCreationdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImportSourceRecord value3(DateTime value) {
		setUpdatedate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImportSourceRecord values(Long value1, DateTime value2, DateTime value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IImportSource from) {
		setId(from.getId());
		setCreationdate(from.getCreationdate());
		setUpdatedate(from.getUpdatedate());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IImportSource> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ImportSourceRecord
	 */
	public ImportSourceRecord() {
		super(ImportSource.IMPORT_SOURCE);
	}

	/**
	 * Create a detached, initialised ImportSourceRecord
	 */
	public ImportSourceRecord(Long id, DateTime creationdate, DateTime updatedate) {
		super(ImportSource.IMPORT_SOURCE);

		setValue(0, id);
		setValue(1, creationdate);
		setValue(2, updatedate);
	}
}
