/**
 * This class is generated by jOOQ
 */
package info.blogstack.persistence.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Post extends org.jooq.impl.TableImpl<info.blogstack.persistence.jooq.tables.records.PostRecord> {

	private static final long serialVersionUID = -1662732609;

	/**
	 * The reference instance of <code>BLOGSTACK.POST</code>
	 */
	public static final info.blogstack.persistence.jooq.tables.Post POST = new info.blogstack.persistence.jooq.tables.Post();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<info.blogstack.persistence.jooq.tables.records.PostRecord> getRecordType() {
		return info.blogstack.persistence.jooq.tables.records.PostRecord.class;
	}

	/**
	 * The column <code>BLOGSTACK.POST.ID</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>BLOGSTACK.POST.CREATIONDATE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, org.joda.time.DateTime> CREATIONDATE = createField("CREATIONDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new info.blogstack.persistence.records.DateTimeConverter());

	/**
	 * The column <code>BLOGSTACK.POST.UPDATEDATE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, org.joda.time.DateTime> UPDATEDATE = createField("UPDATEDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new info.blogstack.persistence.records.DateTimeConverter());

	/**
	 * The column <code>BLOGSTACK.POST.PUBLISHDATE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, org.joda.time.DateTime> PUBLISHDATE = createField("PUBLISHDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new info.blogstack.persistence.records.DateTimeConverter());

	/**
	 * The column <code>BLOGSTACK.POST.DATE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, org.joda.time.DateTime> DATE = createField("DATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new info.blogstack.persistence.records.DateTimeConverter());

	/**
	 * The column <code>BLOGSTACK.POST.URL</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.String> URL = createField("URL", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

	/**
	 * The column <code>BLOGSTACK.POST.HASH</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.String> HASH = createField("HASH", org.jooq.impl.SQLDataType.VARCHAR.length(24), this, "");

	/**
	 * The column <code>BLOGSTACK.POST.TITLE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>BLOGSTACK.POST.AUTHOR</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.String> AUTHOR = createField("AUTHOR", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>BLOGSTACK.POST.CONTENTCOMPRESSED</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, byte[]> CONTENTCOMPRESSED = createField("CONTENTCOMPRESSED", org.jooq.impl.SQLDataType.BLOB.length(2147483647), this, "");

	/**
	 * The column <code>BLOGSTACK.POST.INDEXATION_ID</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.Long> INDEXATION_ID = createField("INDEXATION_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>BLOGSTACK.POST.SOURCE_ID</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.Long> SOURCE_ID = createField("SOURCE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>BLOGSTACK.POST.VISIBLE</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.Boolean> VISIBLE = createField("VISIBLE", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>BLOGSTACK.POST.SHARED</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.Boolean> SHARED = createField("SHARED", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>BLOGSTACK.POST.NEWSLETTER_ID</code>.
	 */
	public final org.jooq.TableField<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.Long> NEWSLETTER_ID = createField("NEWSLETTER_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>BLOGSTACK.POST</code> table reference
	 */
	public Post() {
		this("POST", null);
	}

	/**
	 * Create an aliased <code>BLOGSTACK.POST</code> table reference
	 */
	public Post(java.lang.String alias) {
		this(alias, info.blogstack.persistence.jooq.tables.Post.POST);
	}

	private Post(java.lang.String alias, org.jooq.Table<info.blogstack.persistence.jooq.tables.records.PostRecord> aliased) {
		this(alias, aliased, null);
	}

	private Post(java.lang.String alias, org.jooq.Table<info.blogstack.persistence.jooq.tables.records.PostRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, info.blogstack.persistence.jooq.Blogstack.BLOGSTACK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.Long> getIdentity() {
		return info.blogstack.persistence.jooq.Keys.IDENTITY_POST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostRecord> getPrimaryKey() {
		return info.blogstack.persistence.jooq.Keys.PK_POST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostRecord>>asList(info.blogstack.persistence.jooq.Keys.PK_POST, info.blogstack.persistence.jooq.Keys.CONSTRAINT_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostRecord, ?>>asList(info.blogstack.persistence.jooq.Keys.POST_INDEXATION_ID, info.blogstack.persistence.jooq.Keys.POST_SOURCE_ID, info.blogstack.persistence.jooq.Keys.POST_NEWSLETTER_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public info.blogstack.persistence.jooq.tables.Post as(java.lang.String alias) {
		return new info.blogstack.persistence.jooq.tables.Post(alias, this);
	}

	/**
	 * Rename this table
	 */
	public info.blogstack.persistence.jooq.tables.Post rename(java.lang.String name) {
		return new info.blogstack.persistence.jooq.tables.Post(name, null);
	}
}
