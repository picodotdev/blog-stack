/**
 * This class is generated by jOOQ
 */
package info.blogstack.persistence.jooq;

/**
 * A class modelling foreign key relationships between tables of the <code>BLOGSTACK</code> 
 * schema
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.IndexationRecord, java.lang.Long> IDENTITY_INDEXATION = Identities0.IDENTITY_INDEXATION;
	public static final org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.AdsenseRecord, java.lang.Long> IDENTITY_ADSENSE = Identities0.IDENTITY_ADSENSE;
	public static final org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord, java.lang.Long> IDENTITY_IMPORT_SOURCE = Identities0.IDENTITY_IMPORT_SOURCE;
	public static final org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.Long> IDENTITY_POST = Identities0.IDENTITY_POST;
	public static final org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.LabelRecord, java.lang.Long> IDENTITY_LABEL = Identities0.IDENTITY_LABEL;
	public static final org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.PostsIndexationsRecord, java.lang.Long> IDENTITY_POSTS_INDEXATIONS = Identities0.IDENTITY_POSTS_INDEXATIONS;
	public static final org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.PostsLabelsRecord, java.lang.Long> IDENTITY_POSTS_LABELS = Identities0.IDENTITY_POSTS_LABELS;
	public static final org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.Long> IDENTITY_SOURCE = Identities0.IDENTITY_SOURCE;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.IndexationRecord> PK_INDEXATION = UniqueKeys0.PK_INDEXATION;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.AdsenseRecord> PK_ADSENSE = UniqueKeys0.PK_ADSENSE;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord> PK_IMPORT_SOURCE = UniqueKeys0.PK_IMPORT_SOURCE;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostRecord> PK_POST = UniqueKeys0.PK_POST;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostRecord> CONSTRAINT_2 = UniqueKeys0.CONSTRAINT_2;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.LabelRecord> PK_LABEL = UniqueKeys0.PK_LABEL;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostsIndexationsRecord> PK_POSTS_INDEXATIONS = UniqueKeys0.PK_POSTS_INDEXATIONS;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostsLabelsRecord> PK_POSTS_LABELS = UniqueKeys0.PK_POSTS_LABELS;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.SourceRecord> PK_SOURCE = UniqueKeys0.PK_SOURCE;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.SourceRecord> CONSTRAINT_9 = UniqueKeys0.CONSTRAINT_9;
	public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.SourceRecord> CONSTRAINT_92 = UniqueKeys0.CONSTRAINT_92;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostRecord, info.blogstack.persistence.jooq.tables.records.IndexationRecord> POST_INDEXATION_ID = ForeignKeys0.POST_INDEXATION_ID;
	public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostRecord, info.blogstack.persistence.jooq.tables.records.SourceRecord> POST_SOURCE_ID = ForeignKeys0.POST_SOURCE_ID;
	public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostsIndexationsRecord, info.blogstack.persistence.jooq.tables.records.PostRecord> POSTS_INDEXATIONS_POST_ID = ForeignKeys0.POSTS_INDEXATIONS_POST_ID;
	public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostsIndexationsRecord, info.blogstack.persistence.jooq.tables.records.IndexationRecord> POSTS_INDEXATIONS_INDEXATION_ID = ForeignKeys0.POSTS_INDEXATIONS_INDEXATION_ID;
	public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostsLabelsRecord, info.blogstack.persistence.jooq.tables.records.PostRecord> POSTS_LABELS_POST_ID = ForeignKeys0.POSTS_LABELS_POST_ID;
	public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostsLabelsRecord, info.blogstack.persistence.jooq.tables.records.LabelRecord> POSTS_LABELS_LABEL_ID = ForeignKeys0.POSTS_LABELS_LABEL_ID;
	public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.SourceRecord, info.blogstack.persistence.jooq.tables.records.AdsenseRecord> SOURCE_ADSENSE_ID = ForeignKeys0.SOURCE_ADSENSE_ID;
	public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.SourceRecord, info.blogstack.persistence.jooq.tables.records.ImportSourceRecord> SOURCE_IMPORTSOURCE_ID = ForeignKeys0.SOURCE_IMPORTSOURCE_ID;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.IndexationRecord, java.lang.Long> IDENTITY_INDEXATION = createIdentity(info.blogstack.persistence.jooq.tables.Indexation.INDEXATION, info.blogstack.persistence.jooq.tables.Indexation.INDEXATION.ID);
		public static org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.AdsenseRecord, java.lang.Long> IDENTITY_ADSENSE = createIdentity(info.blogstack.persistence.jooq.tables.Adsense.ADSENSE, info.blogstack.persistence.jooq.tables.Adsense.ADSENSE.ID);
		public static org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord, java.lang.Long> IDENTITY_IMPORT_SOURCE = createIdentity(info.blogstack.persistence.jooq.tables.ImportSource.IMPORT_SOURCE, info.blogstack.persistence.jooq.tables.ImportSource.IMPORT_SOURCE.ID);
		public static org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.PostRecord, java.lang.Long> IDENTITY_POST = createIdentity(info.blogstack.persistence.jooq.tables.Post.POST, info.blogstack.persistence.jooq.tables.Post.POST.ID);
		public static org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.LabelRecord, java.lang.Long> IDENTITY_LABEL = createIdentity(info.blogstack.persistence.jooq.tables.Label.LABEL, info.blogstack.persistence.jooq.tables.Label.LABEL.ID);
		public static org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.PostsIndexationsRecord, java.lang.Long> IDENTITY_POSTS_INDEXATIONS = createIdentity(info.blogstack.persistence.jooq.tables.PostsIndexations.POSTS_INDEXATIONS, info.blogstack.persistence.jooq.tables.PostsIndexations.POSTS_INDEXATIONS.ID);
		public static org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.PostsLabelsRecord, java.lang.Long> IDENTITY_POSTS_LABELS = createIdentity(info.blogstack.persistence.jooq.tables.PostsLabels.POSTS_LABELS, info.blogstack.persistence.jooq.tables.PostsLabels.POSTS_LABELS.ID);
		public static org.jooq.Identity<info.blogstack.persistence.jooq.tables.records.SourceRecord, java.lang.Long> IDENTITY_SOURCE = createIdentity(info.blogstack.persistence.jooq.tables.Source.SOURCE, info.blogstack.persistence.jooq.tables.Source.SOURCE.ID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.IndexationRecord> PK_INDEXATION = createUniqueKey(info.blogstack.persistence.jooq.tables.Indexation.INDEXATION, info.blogstack.persistence.jooq.tables.Indexation.INDEXATION.ID);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.AdsenseRecord> PK_ADSENSE = createUniqueKey(info.blogstack.persistence.jooq.tables.Adsense.ADSENSE, info.blogstack.persistence.jooq.tables.Adsense.ADSENSE.ID);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.ImportSourceRecord> PK_IMPORT_SOURCE = createUniqueKey(info.blogstack.persistence.jooq.tables.ImportSource.IMPORT_SOURCE, info.blogstack.persistence.jooq.tables.ImportSource.IMPORT_SOURCE.ID);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostRecord> PK_POST = createUniqueKey(info.blogstack.persistence.jooq.tables.Post.POST, info.blogstack.persistence.jooq.tables.Post.POST.ID);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostRecord> CONSTRAINT_2 = createUniqueKey(info.blogstack.persistence.jooq.tables.Post.POST, info.blogstack.persistence.jooq.tables.Post.POST.URL);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.LabelRecord> PK_LABEL = createUniqueKey(info.blogstack.persistence.jooq.tables.Label.LABEL, info.blogstack.persistence.jooq.tables.Label.LABEL.ID);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostsIndexationsRecord> PK_POSTS_INDEXATIONS = createUniqueKey(info.blogstack.persistence.jooq.tables.PostsIndexations.POSTS_INDEXATIONS, info.blogstack.persistence.jooq.tables.PostsIndexations.POSTS_INDEXATIONS.ID);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.PostsLabelsRecord> PK_POSTS_LABELS = createUniqueKey(info.blogstack.persistence.jooq.tables.PostsLabels.POSTS_LABELS, info.blogstack.persistence.jooq.tables.PostsLabels.POSTS_LABELS.ID);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.SourceRecord> PK_SOURCE = createUniqueKey(info.blogstack.persistence.jooq.tables.Source.SOURCE, info.blogstack.persistence.jooq.tables.Source.SOURCE.ID);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.SourceRecord> CONSTRAINT_9 = createUniqueKey(info.blogstack.persistence.jooq.tables.Source.SOURCE, info.blogstack.persistence.jooq.tables.Source.SOURCE.PAGEURL);
		public static final org.jooq.UniqueKey<info.blogstack.persistence.jooq.tables.records.SourceRecord> CONSTRAINT_92 = createUniqueKey(info.blogstack.persistence.jooq.tables.Source.SOURCE, info.blogstack.persistence.jooq.tables.Source.SOURCE.URL);
	}

	private static class ForeignKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostRecord, info.blogstack.persistence.jooq.tables.records.IndexationRecord> POST_INDEXATION_ID = createForeignKey(info.blogstack.persistence.jooq.Keys.PK_INDEXATION, info.blogstack.persistence.jooq.tables.Post.POST, info.blogstack.persistence.jooq.tables.Post.POST.INDEXATION_ID);
		public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostRecord, info.blogstack.persistence.jooq.tables.records.SourceRecord> POST_SOURCE_ID = createForeignKey(info.blogstack.persistence.jooq.Keys.PK_SOURCE, info.blogstack.persistence.jooq.tables.Post.POST, info.blogstack.persistence.jooq.tables.Post.POST.SOURCE_ID);
		public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostsIndexationsRecord, info.blogstack.persistence.jooq.tables.records.PostRecord> POSTS_INDEXATIONS_POST_ID = createForeignKey(info.blogstack.persistence.jooq.Keys.PK_POST, info.blogstack.persistence.jooq.tables.PostsIndexations.POSTS_INDEXATIONS, info.blogstack.persistence.jooq.tables.PostsIndexations.POSTS_INDEXATIONS.POST_ID);
		public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostsIndexationsRecord, info.blogstack.persistence.jooq.tables.records.IndexationRecord> POSTS_INDEXATIONS_INDEXATION_ID = createForeignKey(info.blogstack.persistence.jooq.Keys.PK_INDEXATION, info.blogstack.persistence.jooq.tables.PostsIndexations.POSTS_INDEXATIONS, info.blogstack.persistence.jooq.tables.PostsIndexations.POSTS_INDEXATIONS.INDEXATION_ID);
		public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostsLabelsRecord, info.blogstack.persistence.jooq.tables.records.PostRecord> POSTS_LABELS_POST_ID = createForeignKey(info.blogstack.persistence.jooq.Keys.PK_POST, info.blogstack.persistence.jooq.tables.PostsLabels.POSTS_LABELS, info.blogstack.persistence.jooq.tables.PostsLabels.POSTS_LABELS.POST_ID);
		public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.PostsLabelsRecord, info.blogstack.persistence.jooq.tables.records.LabelRecord> POSTS_LABELS_LABEL_ID = createForeignKey(info.blogstack.persistence.jooq.Keys.PK_LABEL, info.blogstack.persistence.jooq.tables.PostsLabels.POSTS_LABELS, info.blogstack.persistence.jooq.tables.PostsLabels.POSTS_LABELS.LABEL_ID);
		public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.SourceRecord, info.blogstack.persistence.jooq.tables.records.AdsenseRecord> SOURCE_ADSENSE_ID = createForeignKey(info.blogstack.persistence.jooq.Keys.PK_ADSENSE, info.blogstack.persistence.jooq.tables.Source.SOURCE, info.blogstack.persistence.jooq.tables.Source.SOURCE.ADSENSE_ID);
		public static final org.jooq.ForeignKey<info.blogstack.persistence.jooq.tables.records.SourceRecord, info.blogstack.persistence.jooq.tables.records.ImportSourceRecord> SOURCE_IMPORTSOURCE_ID = createForeignKey(info.blogstack.persistence.jooq.Keys.PK_IMPORT_SOURCE, info.blogstack.persistence.jooq.tables.Source.SOURCE, info.blogstack.persistence.jooq.tables.Source.SOURCE.IMPORTSOURCE_ID);
	}
}
