<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-03-03T20:02:22Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-03-03T20:02:22Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>TDD y automatización con Javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/03/tdd-y-automatizacion-con-javascript" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2015-03-03T19:14:41Z</updated>
    <published>2015-03-03T19:14:41Z</published>
    <content type="html">&lt;p&gt;  Dejé en Github un pequeño artículo con código sobre cómo hacer TDD con javascript usando Qunit y cómo automatizar todo el proceso hasta llegar al deploy continuo usando Travis. Aquí el link. Nos leemos.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/03/tdd-y-automatizacion-con-javascript"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2015-03-03T19:14:41Z</dc:date>
  </entry>
  <entry>
    <title>¿Por qué elegir openSUSE?</title>
    <link rel="alternate" href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/03/por-que-elegir-opensuse" />
    <category term="opinion" />
    <category term="opensuse" />
    <category term="comunidad" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2015-03-03T19:10:12Z</updated>
    <published>2015-03-03T19:10:12Z</published>
    <content type="html">&lt;p&gt;Distribuciones de GNU/Linux hay muchas, y quizás ya eres usuario de alguna de ellas. Simplemente lee el artículo con algunas de las razones para elegir openSUSE frente a otras opciones. En este extenso artículo se señalan cuatro razones argumentadas, para elegir openSUSE frente a otras distribuciones de GNU/Linux. El artículo está escrito en inglés por Richard Brown, el actual presidente del consejo de openSUSE, y colaborador con la comunidad desde hace muchos años. Al que tuve el placer de conocer cuando estuve en el hackathon de openSUSE en las oficinas de SUSE en Nuremberg. Puedes leer el artículo original en inglés en su blog, en el siguiente enlace. Gracias a Richard Brown por permitirme traducirlo. Si quieres compartir la traducción no dejes de citar el original y esta traducción, comparte[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/03/por-que-elegir-opensuse"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2015-03-03T19:10:12Z</dc:date>
  </entry>
  <entry>
    <title>Java y  fluid interface</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2015/03/java-y-fluid-interface" />
    <category term="java-basico" />
    <category term="java-conceptos" />
    <category term="java" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2015-03-03T12:39:00Z</updated>
    <published>2015-03-03T12:39:00Z</published>
    <content type="html">&lt;p&gt;Trabajamos todos los días con Java y uno de las cosas que uno echa de menos a veces es que existan más interfaces fluidas a nivel del lenguaje. ¿Qué es una fluid interface? . Son interfaces o clases que cuando invocamos a un método concreto nos devuelve el mismo objeto modificado . De tal forma que podemos volver a solicitar otro método del mismo objeto y  encadenar más operaciones.   Fluid interfaces y StringBuilder Una de las clases más habituales a la hora de usar programación fluida es StringBuffer vamos a ver un ejemplo sencillo. 
package com.arquitecturajava;

public class Principal {

 public static void main(String[] args) {

 StringBuilder cadena = new StringBuilder("?hola");
 cadena.delete(0, 1).append(" que tal?").insert(4, " amigo ");
 System.out.println("Mensaje: " + cadena);

[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2015/03/java-y-fluid-interface"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2015-03-03T12:39:00Z</dc:date>
  </entry>
  <entry>
    <title>5 funciones espectaculares de Krunner</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/03/5-funciones-espectaculares-de-krunner" />
    <category term="como" />
    <category term="krunner" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-03-03T12:18:12Z</updated>
    <published>2015-03-03T12:18:12Z</published>
    <content type="html">&lt;p&gt;      Alt + F2» es una de las combinaciones de teclado más utilizadas en mi día a día con el escritorio Plasma. Esta mágica combinación ejecuta Krunner, una aplicación del sistema que facilita la ejecución de las más diversas tareas. Aunque la que solemos utilizar diariamente es la simple ejecución de aplicaciones hoy os presento 5 funciones espectaculares de Krunner. 5 funciones espectaculares de Krunner Para activar las funciones espectaculares que vamos a explicar hoy siempre invocares a Krunner con «Alt + F2». Una vez ejectutado ya podremos escribir en el pequeño campo que se suele abrir en la parte superior de la pantalla. Para cancelar su uso basta pulsar la tecla «Esc». La presente lista de funcionalidades son las básicas que suelen venir por defecto en la mayoría de distribuciones aunque[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/03/5-funciones-espectaculares-de-krunner"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-03-03T12:18:12Z</dc:date>
  </entry>
  <entry>
    <title>Iniciar Visual Studio siempre como administrador</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2015/03/iniciar-visual-studio-siempre-como-administrador" />
    <category term="trucos" />
    <category term="visualstudio" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2015-03-03T07:45:00Z</updated>
    <published>2015-03-03T07:45:00Z</published>
    <content type="html">&lt;p&gt;Hay muchas ocasiones en las que es conveniente, o incluso necesario, utilizar Visual Studio con privilegios de administrador del equipo. Aunque es bastante sencillo de conseguir (botón derecho &gt; ejecutar como administrador) es cierto que a veces es un poco molesto porque no siempre nos acordamos de hacerlo, y tenemos que cerrar Visual Studio y abrirlo de nuevo, o simplemente porque abrimos un proyecto haciendo doble clic sobre la solución. Seguro que la mayoría de vosotros tenéis ya alguna forma para simplificar o automatizar este procedimiento, pero como de vez en cuando me encuentro con alguno que sigue realizando esos pasos de forma manual, ahí va este post por si os es de utilidad. Lo que veremos a continuación es un truco rápido para conseguir que Visual Studio se abra siempre como administrador[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2015/03/iniciar-visual-studio-siempre-como-administrador"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2015-03-03T07:45:00Z</dc:date>
  </entry>
  <entry>
    <title>Trisquel GNU/Linux con KDE. Probando la libertad</title>
    <link rel="alternate" href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/03/trisquel-gnu-linux-con-kde-probando-la-libertad" />
    <category term="instalar" />
    <category term="software-libre" />
    <category term="distribuciones" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2015-03-02T11:33:35Z</updated>
    <published>2015-03-02T11:33:35Z</published>
    <content type="html">&lt;p&gt;Un repaso a Trisquel una distribución de GNU/Linux, con KDE como entorno de escritorio. Este es un artículo postergado durante muchos días. Un repaso a esta Trisquel gnu/Linux con el entorno de escritorio KDE. No soy “distrohopper” así que no esperéis una revisión en detalle. Simplemente un repaso. Trisquel gnu/linux es una de las pocas distribuciones de GNU/Linux que aconseja la Free Software Foundation (FSF), por ser una distribución totalmente libre, con repositorios libres, sin software privativo. Además es la distribución que en uno de sus PC’s utiliza Richard Stallman, qué mejor aval de software libre?? ;) Si quieres ver las distribuciones recomendadas por la FSF las puedes consultar en este enlace: https://www.gnu.org/distros/free-distros.es.html De todas ellas me decanté por Trisquel,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/03/trisquel-gnu-linux-con-kde-probando-la-libertad"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2015-03-02T11:33:35Z</dc:date>
  </entry>
  <entry>
    <title>Magento: Conocer qué página de CMS se está visualizando ahora mismo</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/03/magento-conocer-que-pagina-de-cms-se-esta-visualizando-ahora-mismo" />
    <category term="controlador" />
    <category term="principal" />
    <category term="identificador" />
    <category term="php" />
    <category term="pagina" />
    <category term="cms" />
    <category term="plantilla" />
    <category term="magento" />
    <category term="template" />
    <category term="home" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-03-02T10:14:42Z</updated>
    <published>2015-03-02T10:14:42Z</published>
    <content type="html">&lt;p&gt;Puede ser muy útil, sobre todo cuando estamos creando o modificando las plantillas principales de nuestro tema en Magento saber si la página actual se trata de una página de CMS. Esto lo podemos saber muy fácilmente con: 1 $route = Mage:app()-&gt;getRequest()-&gt;getRouteName(); La variable route tendrá el valor “cms” si se trata de una página CMS, o podrá obtener el valor de la ruta del controlador actual (dependiendo de si estamos en el carrito, página de categoría, producto, dentro de un plugin, etc). En el caso que sea una página CMS podremos preguntar también el identificador que se está visualizando con: 1 $ident = Mage::getSingleton('cms/page')-&gt;getIdentifier(); Dependiendo de la ruta donde estemos, podremos llamar a un método o a otro. Ahora, juntándolo todo: 1 2 if (Mage:app()-&gt;getRequest()-&gt;getRouteName()[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/03/magento-conocer-que-pagina-de-cms-se-esta-visualizando-ahora-mismo"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-03-02T10:14:42Z</dc:date>
  </entry>
</feed>

