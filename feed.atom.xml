<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-10-20T07:02:45Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-10-20T07:02:45Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Cacheo de porciones de vistas en MVC 6 / ASP.NET 5</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2015/10/cacheo-de-porciones-de-vistas-en-mvc-6-asp-net-5" />
    <category term="aspnet5" />
    <category term="aspnetmvc" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2015-10-20T07:00:02Z</updated>
    <published>2015-10-20T07:00:00Z</published>
    <content type="html">&lt;p&gt;Está claro que uno de los secretos para la creación de aplicaciones web de alto rendimiento es el uso apropiado del caché, y por esta razón todos los frameworks incorporan herramientas que hacen posible almacenar información que pueda ser reutilizadas para acelerar la respuesta de peticiones posteriores, como porciones de página o resultados de procesos costosos. En versiones anteriores a ASP.NET 5, siempre podíamos acceder a objeto Cache de ASP.NET, disponible en el contexto de la petición, o a los componentes presentes en System.Web.Caching y crear nuestras soluciones personalizadas, pero realmente MVC no aportaba más ayudas de serie que el filtro [OutputCache]. Su objetivo era cachear el resultado de acciones durante un tiempo determinado y reutilizarlo en peticiones siguientes, lo que era[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2015/10/cacheo-de-porciones-de-vistas-en-mvc-6-asp-net-5"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2015-10-20T07:00:00Z</dc:date>
  </entry>
  <entry>
    <title>19 años de KDE en un vídeo histórico</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/10/19-anos-de-kde-en-un-video-historico" />
    <category term="aniversario-kde" />
    <category term="kde" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-10-20T04:35:23Z</updated>
    <published>2015-10-20T04:35:23Z</published>
    <content type="html">&lt;p&gt;La semana pasada se celebró  aniversario del proyecto KDE, y aunque no se realizaron grandes celebraciones más allá de agradecer al proyecto todo aquello que se nos pasaba por la cabeza mediante el la etiqueta #ThankYouKDE alguien fue más allá y ha creado un recopilatorio de los 19 años de KDE en un vídeo histórico. ¿te lo vas a perder? 19 años de KDE en un vídeo histórico Recordemos que el 14 de octubre de 1996 se realizó el siguiente anuncio de Matthias Ettrich (con la ayuda de Matt McLeod) en la red: “New Project: Kool Desktop Environment (KDE)” De la mano de The Linux Homefront he descubierto un magnífico vídeo donde se repasan los 19 años de existencia del proyecto KDE. Básicamente se trata de una sucesión de pantallazos de los diferentes escritorios creados por la Comunidad KDE desde[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/10/19-anos-de-kde-en-un-video-historico"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-10-20T04:35:23Z</dc:date>
  </entry>
  <entry>
    <title>OpenStack V – Configurando el Servicio de Imágenes, Glance</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/openstack-v-configurando-el-servicio-de-imagenes-glance" />
    <category term="openstack" />
    <category term="linux" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-19T18:00:05Z</updated>
    <published>2015-10-19T18:00:05Z</published>
    <content type="html">&lt;p&gt;El Servicio de imágenes de OpenStack es central para Infraestructura como Servicio (IaaS). Acepta las solicitudes API para imágenes de Disco, servidores, o metadata de usuarios finales o componentes de OpenStack Compute. Soporta además el almacenamiento de imágenes de Discos o servidores en diversos repositorios. Un número de procesos periódicos corren en el servicio de Imágenes de OpenStack para soportar el Caching, servicios de replicación que aseguran la consistencia y la disponibilidad en el cluster. Otros procesos incluyen auditores, actualizadores, entre otro. El Servicio de Imágenes esta compuesto por: glance-api : Acepta las llamadas API para el Descubrimiento, recuperación y almacenamiento de imágenes glance-registry : Almacena, procesa y recupera los metadatos de las imágenes. Base[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/openstack-v-configurando-el-servicio-de-imagenes-glance"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-19T18:00:05Z</dc:date>
  </entry>
  <entry>
    <title>Cómo crear clases factoría sin usar if-else</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/10/como-crear-clases-factoria-sin-usar-if-else" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-10-19T17:00:00Z</updated>
    <published>2015-10-18T10:00:00Z</published>
    <content type="html">&lt;p&gt;En el artículo cómo crear clases factoría sin usar if-else se comentan varias formas para conseguirlo. Las soluciones que se proponen son usar: Reflection: sin embargo esta solución obliga a que el cliente de la factoría conozca el nombre completo de la clase a crear incluyendo el paquete en el que está y hace que la factoría no abstraiga al cliente de conocerlo que puede ser uno de sus objetivos. Además el parámetro es un String con lo que en los refactors el compilador no nos ayudará, el compilador es una de mis 10 razones para seguir usando Java. Map: en esta solución se asocia una clave (en String) con la clase que devuelve la factoría. Igualmente usar un String como clave es algo a evitar ya que es propenso a errores al no tener ayuda del compilador en los valores de los Strings si estas[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/10/como-crear-clases-factoria-sin-usar-if-else"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-10-18T10:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Pentesting con Metasploit – Conociendo Metasploit</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/pentesting-con-metasploit-conociendo-metasploit" />
    <category term="metasploit" />
    <category term="kali-linux" />
    <category term="ethical-hacking" />
    <category term="seguridad" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-19T16:00:37Z</updated>
    <published>2015-10-19T16:00:37Z</published>
    <content type="html">&lt;p&gt;Hace un tiempo había iniciado una serie de entradas que iba a dedicarlo a Metasploit, luego surgío una idea de la mano de SniferL4bs sobre crear cápsulas de seguridad en video. De la misma manera vi como una excelente idea, que al finalizar las entradas se creara un Ebook con toda la información . Precisamente por esto he decidido relanzar la serie de entradas sobre Pentesting con Metasploit, claro, continuando con las cápsulas de Seguridad. De esta manera tendremos la entrada y su correspondiente cápsula, y al final el Ebook como referencia. Así que iniciamos con la Primera Parte. El Framework de Metasploit es una herramienta de código libre utilizado para el desarrollo y ejecución de Exploits a un objetivo remoto. Lo que se destaca de esta herramienta es que tiene una de las base de datos[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/pentesting-con-metasploit-conociendo-metasploit"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-19T16:00:37Z</dc:date>
  </entry>
  <entry>
    <title>Contribuye con #openSUSE Leap 42.1 en un wikithon</title>
    <link rel="alternate" href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/10/contribuye-con-opensuse-leap-42-1-en-un-wikithon" />
    <category term="opensuse" />
    <category term="leap" />
    <category term="wiki" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2015-10-19T15:31:29Z</updated>
    <published>2015-10-19T15:31:29Z</published>
    <content type="html">&lt;p&gt;A falta de 15 días para que salga la versión final de la nueva openSUSE Leap 42.1 tu puedes ayudar ¿cómo? de una manera muy fácil! Un gran proyecto como este lanzamiento de openSUSE, además de ser bueno, hay que darlo a conocer ¿Cómo hacer eso? Ahí es cuando los miembros más activos de la comunidad que está detrás tienen que responder con sus aportes y ayudas. La wiki de openSUSE sigue siendo un buen lugar en el que ofrecer información a los nuevos que se acerquen a conocer más del proyecto de esta distribución de GNU/Linux. El proyecto es “un ser vivo” que cambia, evoluciona, crece y va dejando atrás cosas inservibles, y todos esos cambios, deben estar reflejados y actualizados al día. Una wiki actualizada da una sensación de proyecto profesional y activo, una wiki desactualizada, no da una[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/10/contribuye-con-opensuse-leap-42-1-en-un-wikithon"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2015-10-19T15:31:29Z</dc:date>
  </entry>
  <entry>
    <title>OpenStack – Configurando el Servicio de Identidad, Keystone</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/openstack-configurando-el-servicio-de-identidad-keystone" />
    <category term="openstack" />
    <category term="linux" />
    <category term="generales" />
    <category term="tools" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-19T14:00:53Z</updated>
    <published>2015-10-19T14:00:53Z</published>
    <content type="html">&lt;p&gt;Seguimos con la Serie dedicada a la implementación de OpenStack. Ahora vamos a ver como configuramos el servicio de Identidad de OpenStack conocido como Keystone. El Servicio de Identidad de OpenStack provee un punto centralizado para el manejo de Autenticación, Autorización y catálogo de servicios. Otros componentes o servicio de OpenStack usan el servicio de identidad como una API común unificada. Para que otros servicios se beneficien del servicio identidad, necesitan colaborar con el, ya que una vez un servicio recibe un request de un usuario, este revisa con el servicio de identidad si el usuario esta autorizado para hacer el request. El Servicio de Identidad es conformado por estos componentes: Servidor: Un servidor centralizado provee autenticación y autorización mediante una interfaz[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/openstack-configurando-el-servicio-de-identidad-keystone"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-19T14:00:53Z</dc:date>
  </entry>
</feed>

