<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-10-27T19:02:34Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-10-27T19:02:34Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Video podcast de Plasma Mobile</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/10/video-podcast-de-plasma-mobile" />
    <category term="kde-espana" />
    <category term="video" />
    <category term="kde" />
    <category term="podcast" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-10-27T17:55:45Z</updated>
    <published>2015-10-27T17:55:45Z</published>
    <content type="html">&lt;p&gt;Tras el largo parón estival, continuado con el primer mes de otoñal, vuelven a nosotros los vídeo podcast de la asociación sin ánimo de lucro KDE España. En esta ocasión empezamos la segunda temporada donde el primer programa será un Video podcast de Plasma Mobile, la apuesta de KDE para dispositivos móviles. ¿Te lo vas a perder?   Video podcast de Plasma Mobile El primer podcast de vídeo de la segunda temporada de KDE España se grabó hoy 26 de octubreo y el protagonista fue Plasma Mobile, un proyecto que fue presentado en Akademy-es 2015 de A Coruña y que promete a dar mucho que hablar en el futuro. Los participantes del śeptimo vídeo podcast fueron: Aleix Pol (@AleixPol), presidente de KDE España y vicepresidente de KDE e.V. Albert Astals (@tsdgeos) ex-presidente de KDE España (pero todavía[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/10/video-podcast-de-plasma-mobile"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-10-27T17:55:45Z</dc:date>
  </entry>
  <entry>
    <title>Múltiples esquemas o bases de datos con jOOQ y Spring en Java</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/10/multiples-esquemas-o-bases-de-datos-con-jooq-y-spring-en-java" />
    <category term="blog-stack" />
    <category term="programcion" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-10-27T17:00:00Z</updated>
    <published>2015-10-27T17:00:00Z</published>
    <content type="html">&lt;p&gt;Aún en las aplicaciones monolíticas que comparten una única base de datos tratamos de dividirla en varios servicios que manejen cierto nicho de información con la intención de que un cambio en una parte sea transparente para las otras partes. Cada servicio de la aplicación monolítica podría potencialmente convertirse en un microservicio y en este caso para que cada micoservicio tenga un ciclo de vida independiente compartir la base de datos es algo a evitar. Incluso en las aplicaciones monolíticas podemos querer guardar cada nicho de información en su propio esquema para evitar acoplamiento entre las diferentes partes o también como forma de tener varios servidores de bases de datos y escalar la aplicación en cierta forma. En estos casos necesitaremos que la aplicación acceda a varios esquemas[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/10/multiples-esquemas-o-bases-de-datos-con-jooq-y-spring-en-java"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-10-27T17:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Mobile-Security-Framework (MobSF) Framework para Mobile Pentesting</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/mobile-security-framework-mobsf-framework-para-mobile-pentesting" />
    <category term="mobsf" />
    <category term="ethical-hacking" />
    <category term="android" />
    <category term="seguridad" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-27T14:36:16Z</updated>
    <published>2015-10-27T14:36:16Z</published>
    <content type="html">&lt;p&gt;Mobile Security Framework (MobSF) es una aplicación para llevar a cabo tareas de análisis de Seguridad a aplicaciones Móviles (Android/IOS) con la capacidad de ejecutar análisis estáticos y dinámicos. El Análisis estático puede ejecutar revisión de código automatizado, Detectar permisos y configuraciones inseguras, detectar código inseguro como SSL Bypass, SSL overriding, Criptografía Débil, Código obfuscado, credenciales directamente  en el código,  Uso de API Peligroso, filtrado de información y almacenamiento inseguro. El Análisis Dinámico corre la aplicación en un máquina virtual y detecta las fallas durante la ejecución. Análisis posteriores son llevados a cabo con los paquetes de red capturados, tráfico HTTPS ya descifrado, Dumps de aplicaciones, logs, Reportes de Crash, información de[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/mobile-security-framework-mobsf-framework-para-mobile-pentesting"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-27T14:36:16Z</dc:date>
  </entry>
  <entry>
    <title>Filezilla un cliente FTP libre</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/10/filezilla-un-cliente-ftp-libre" />
    <category term="blog-stack" />
    <category term="linux" />
    <category term="ftps" />
    <category term="gnu" />
    <category term="filezilla" />
    <category term="ftp" />
    <category term="sftp" />
    <category term="linux-mint" />
    <category term="programas" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-10-27T10:11:39Z</updated>
    <published>2015-10-27T10:11:39Z</published>
    <content type="html">&lt;p&gt;Durante todos estos años he hablado de muchos programas y sistemas operativos. La consola de comandos o shell también ha ocupado un gran espacio en la web. Comentando con compañeros y amigos, quizás he... La entrada Filezilla un cliente FTP libre aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/10/filezilla-un-cliente-ftp-libre"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-10-27T10:11:39Z</dc:date>
  </entry>
  <entry>
    <title>¡A Seattle!</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2015/10/a-seattle" />
    <category term="viajes" />
    <category term="summit" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2015-10-27T08:00:02Z</updated>
    <published>2015-10-27T08:00:00Z</published>
    <content type="html">&lt;p&gt;Una de las muchas ventajas de ser reconocido como MVP es la posibilidad de asistir como invitado al macro evento que Microsoft organiza cada año en Bellevue y Redmond. Y mientras el cuerpo aguante y sigamos teniendo la fortuna de pertenecer a este grupo, no hay que perder la ocasión de volver a disfrutar de la experiencia. Aunque el sólo por el hecho de pasear por el Campus de Microsoft en Redmond ya merece la pena recorrer los cerca de 9.000 kilómetros que nos separan, el Summit es mucho más que eso. Son cientos de sesiones técnicas del más altísimo nivel para ponernos al día de lo que se cuece en la compañía, dar feedback de productos y tener acceso directo a los equipos que están trabajando en ellos. Son centenares de colegas de profesión y afición (bueno, algunos miles), de todos los países[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2015/10/a-seattle"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2015-10-27T08:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Productos y Proyectos y Viceversa</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2015/10/productos-y-proyectos-y-viceversa" />
    <category term="opinion" />
    <category term="software-development" />
    <category term="development" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2015-10-26T21:17:56Z</updated>
    <published>2015-10-26T21:17:56Z</published>
    <content type="html">&lt;p&gt;No hace falta ser muy listo para darse cuenta de que no todos los desarrollos son iguales y de que la forma de afrontar un nuevo desarrollo depende del tipo que desarrollo que sea. Un factor importante que acaba condicionando la forma de desarrollar es si estamos ante el desarrollo de un producto o el desarrollo de un proyecto. La frontera entre ambos escenarios puede ser difusa y no sólo depende de qué estamos desarrollando sino también de para qué y para quién lo estamos desarrollando. Por ejemplo, si una empresa se dedica a desarrollar un juego para móvil para comercializarlo ella misma, puede considerar que el juego es un producto. Sin embargo, si esa misma empresa desarrolla el juego por encargo para una cadena de hamburgueserías, aunque lo desarrollado es lo mismo (un juego para móvil),[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2015/10/productos-y-proyectos-y-viceversa"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2015-10-26T21:17:56Z</dc:date>
  </entry>
  <entry>
    <title>El patrón de diseño Observer y una forma de implementarlo en Java</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/10/el-patron-de-diseno-observer-y-una-forma-de-implementarlo-en-java" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-10-26T21:00:00Z</updated>
    <published>2015-10-24T10:00:00Z</published>
    <content type="html">&lt;p&gt;Otro de los patrones de diseño que en algún momento nos puede ser útil es el patrón Observer. Podemos usar este patrón si tenemos la necesidad de realizar acciones como consecuencia del cambio de estado o cierta circunstancia de un objeto. El patrón Observer nos permite mantener desacoplados el objeto que emite el evento y el objeto que recibe el evento e independizar al objeto observable del número de observadores que tenga. En Java este patrón podemos implementarlo usando una clase, la clase Observable, y una interfaz, la interfaz Observer proporcionadas en el propio JDK. La clase que queremos que reciba los eventos deberá implementar la interfaz Observer y el objeto que queremos que produzca los eventos debe extender o contener una propiedad de tipo Observable. La interfaz Observer contiene[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/10/el-patron-de-diseno-observer-y-una-forma-de-implementarlo-en-java"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-10-24T10:00:00Z</dc:date>
  </entry>
</feed>

