<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-09-04T21:02:07Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-09-04T21:02:07Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Lanzado Netrunner 14.2 LTS</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/09/lanzado-netrunner-14-2-lts" />
    <category term="netrunner-14-2" />
    <category term="distribuciones" />
    <category term="netrunner" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-09-04T20:07:32Z</updated>
    <published>2015-09-04T20:07:32Z</published>
    <content type="html">&lt;p&gt;El pasado 3 de septiembre fue lanzado Netrunner14.2, la última versión de la versión KDE 4 de la distribución de GNU/Linux desarrollada por Blue Systems , y que está orientada a facilitar la vida al usaurio final.   Lanzado Netrunner 14.2 LTS Este lanzamiento es la segunda actualización de la versión estable de Netrunner, es decir, su versión 14.2 LTS (Long Time Support)  que utiliza la tecnología KDE4 SC y, como no podía ser de otra forma, nos proporciona las últimas versiones de las aplicaciones KDE4 así como un buen número de errores resueltos. De esta forma, encontramos parches en  el  Kernel, que ha sido actualizado a 3.13.0-62, así como en aplicaciones como Firefox 40.0.3 y Thunderbird 31.6.0. incluyendo los parches para su integración en el escritorio Plasma.. Además, Netrunner 14.2[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/09/lanzado-netrunner-14-2-lts"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-09-04T20:07:32Z</dc:date>
  </entry>
  <entry>
    <title>Aplicación Java extensible con la clase ServiceLoader</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/09/aplicacion-java-extensible-con-la-clase-serviceloader" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-09-04T16:00:00Z</updated>
    <published>2015-09-04T16:00:00Z</published>
    <content type="html">&lt;p&gt;Java ofrece un mecanismo incluido en el propio JDK para hacer las aplicaciones extensibles o ampliables en un momento posterior al de desarrollo. La clase ServiceLoader permite obtener las implementaciones definidas en el classpath de una determinada interfaz. En este artículo explico esta clase y muestro un ejemplo sencillo de como usarla. Puede que al desarrollar una aplicación necesitamos que esta sea extensible, esto significa que en el momento de desarrollo no conocemos las implementaciones de un determinado servicio que se proporcionarán en un futuro. Un servicio no es más que la implementación de una determinada interfaz que definimos en el momento de desarrollo. Java con la clase ServiceLoader proporciona un mecanismo estándar e incorporado en el JDK para cargar servicios con alguna[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/09/aplicacion-java-extensible-con-la-clase-serviceloader"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-09-04T16:00:00Z</dc:date>
  </entry>
  <entry>
    <title>¿Qué es el Shadow DOM?</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2015/09/que-es-el-shadow-dom" />
    <category term="html5" />
    <category term="htmltips" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2015-09-04T14:14:36Z</updated>
    <published>2015-09-04T14:14:36Z</published>
    <content type="html">&lt;p&gt;Shadow DOM es una de las partes del standard de WebComponents que define el W3C. ¿Qué es exactamente y para que sirve el Shadow DOM?. Para entenderlo vamos a ver un bloque de código aparentemente sencillo. 

&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
p{
color:blue !important;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p id="host" style="color:red"&gt;hola que tal&lt;/p&gt;
&lt;p &gt;otro parrafo&lt;/p&gt;
&lt;input type="button" value="aceptar" id="boton"/&gt;
&lt;/body&gt;
&lt;/html&gt;

 El código contiene dos párrafos uno que incluye un estilo inline y el otro que no tiene ningún estilo. Ahora bien la hoja de estilo asigna  el color “blue” con !important , por lo tanto ambos párrafos se mostrarán azules.   Esto que aparentemente parece razonable genera muchos problemas ya que no permite aislar unas partes del documento y tratarlas de forma aislada como si fueran[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2015/09/que-es-el-shadow-dom"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2015-09-04T14:14:36Z</dc:date>
  </entry>
  <entry>
    <title>openSUSE Leap 42.1 segunda milestone ya disponible</title>
    <link rel="alternate" href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/09/opensuse-leap-42-1-segunda-milestone-ya-disponible" />
    <category term="opensuse" />
    <category term="milestone" />
    <category term="42-1" />
    <category term="leap" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2015-09-04T13:35:55Z</updated>
    <published>2015-09-04T13:35:55Z</published>
    <content type="html">&lt;p&gt;El calendario marcado para los lanzamientos se va cumpliendo, y hoy se lanza la segunda “milestone” de esta renovada nueva versión estable de openSUSE Leap. Desde hoy mismo ya está disponible la segunda milestone de openSUSE Leap 42.1. Aquí puedes leer el anuncio oficial, y desde este enlace puedes descargar la ISO para testear en tus equipos: https://software.opensuse.org/developer/en?release=developer Esta nueva versión de openSUSE será estable como una roca, y con software “de largo recorrido” es decir versiones de paquetes de software de soporte extendido. Pero la gente de openSUSE está tan segura de si misma, que dicen que esta milestone se puede usar en servidores que no sean críticos para la producción. Eso es apostar por la estabilidad ya desde las versiones de prueba! Esta nueva versión[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/09/opensuse-leap-42-1-segunda-milestone-ya-disponible"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2015-09-04T13:35:55Z</dc:date>
  </entry>
  <entry>
    <title>Novedades de C# 6: Interpolated String</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/novedades-de-c-6-interpolated-string" />
    <category term="c-6" />
    <category term="c" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2015-09-03T23:11:00Z</updated>
    <published>2015-09-03T23:11:00Z</published>
    <content type="html">&lt;p&gt;Vamos con otra de las novedades de C# 6, en este caso aquellos que hayan usado Ruby lo conocen bien, básicamente es la posibilidad de declarar un string y que el compilador detecte (por contexto) las variables y sus propiedades para reemplazar dentro del string, por ejemplo. Cómo se hacía antes? Antes hacíamos esto: var leonardo = new Usuario { Apellido = "Micheloni", Nombre = "Leonardo", ID = 123 };

Console.WriteLine("Hola mi nombre es {0}, {1}, y mi ID es {2}", leonardo.Nombre, leonardo.Apellido, leonardo.ID); Básicamente queremos mostrar el contenido de la variable “leonardo” y usarmos el clásico string.format, bien, eso tiene varios problemas: Es engorroso Es propenso a errroes No es claro Etc. Con String Interpolation podemos hacer esto: var leonardo = new Usuario { Apellido = "Micheloni",[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/novedades-de-c-6-interpolated-string"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2015-09-03T23:11:00Z</dc:date>
  </entry>
  <entry>
    <title>Lanzado Calligra 2.9.7</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/09/lanzado-calligra-2-9-7" />
    <category term="word" />
    <category term="author" />
    <category term="flow" />
    <category term="sheets" />
    <category term="software" />
    <category term="calligra" />
    <category term="kexi" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-09-03T17:39:04Z</updated>
    <published>2015-09-03T17:39:04Z</published>
    <content type="html">&lt;p&gt;Los desarrolladores siguen su marcha y han lanzado Calligra 2.9.7, la suite ofimática de la Comunidad KDE, que aunque sigue sin ser 100% funcional para el usuario final se va acercando a ello. Lanzado Calligra 2.9.7 Hoy 3 de septiembre ha sido lanzado Calligra 2.9.7, la nueva revisión de la Suite Ofimática de la Comunidad KDE, que según se puede leer en  Muy Linux (que esta vez se me ha adelantado en el anuncio) trae algunas novedades como: La resolución de diversas fugas de memoria que han sido corregidas La posibilidad que ofrece ahora para que los los usuarios establecezcan el  estilo del párrafo por defecto para una nota final o de pie La optimización del formateado de las celdas de una tabla Mejoras en gestión de la memoria La inclusión de iconos de 14 píxeles en la caja de herramientas.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/09/lanzado-calligra-2-9-7"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-09-03T17:39:04Z</dc:date>
  </entry>
  <entry>
    <title>El verano del camaleón (y VI): la experiencia openSUSE</title>
    <link rel="alternate" href="http://www.blogstack.info/post/lasombradelhelicoptero/2015/09/el-verano-del-camaleon-y-vi-la-experiencia-opensuse" />
    <category term="opensuse" />
    <category term="experiencias" />
    <author>
      <name>Enrique Bravo</name>
    </author>
    <updated>2015-09-03T14:01:37Z</updated>
    <published>2015-09-03T14:01:37Z</published>
    <content type="html">&lt;p&gt;Por mucho que nos pese, a unos más que a otros, el verano se empieza a terminar con la llegada de Septiembre. Las estaciones siempre son difusas, de algún modo, con límites no del todo definidos. Sabemos que, técnicamente hablando, aún quedan unas tres semanas de estío, mas la realidad es tozuda y se impone: caen las hojas, vuelven los niños al colegio, se retoman las actividades cotidianas, llegan los chaparrones. Es el final del verano, como ya cantaban Manolo y Ramón. Mi verano “linuxero” lo ha protagonizado openSUSE. A caballo entre alguna que otra revisión y la instalación y puesta a punto de esa máquina de robar información privada llamada Windows 10. No se la recomiendo, por cierto, ni a mi peor enemigo, así salga cien veces Ana Simón por la tele preguntándole a Cortana no sé qué de[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/lasombradelhelicoptero/2015/09/el-verano-del-camaleon-y-vi-la-experiencia-opensuse"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Enrique Bravo</dc:creator>
    <dc:date>2015-09-03T14:01:37Z</dc:date>
  </entry>
</feed>

