<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-11-12T10:02:48Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-11-12T10:02:48Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>jQuery Promise y AJAX</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2015/11/jquery-promise-y-ajax" />
    <category term="jquery" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2015-11-12T08:47:48Z</updated>
    <published>2015-11-12T08:47:48Z</published>
    <content type="html">&lt;p&gt;jQuery Promise es uno de los conceptos que cuesta más entender cuanto de trabajamos con Ajax. Sin embargo sino entendemos este concepto será muy difícil desarrollar aplicaciones Ajax que sean flexibles y reutilizables. Vamos a mostrar un ejemplo que nos ayude a entender mejor las cosas . Supongamos que disponemos de un servidor que nos […] La entrada jQuery Promise y AJAX aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2015/11/jquery-promise-y-ajax"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2015-11-12T08:47:48Z</dc:date>
  </entry>
  <entry>
    <title>KDE Aplicaciones 15.08.3 listo para su descarga</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/11/kde-aplicaciones-15-8-3-listo-para-su-descarga" />
    <category term="kde" />
    <category term="kde-aplicaciones-15-8" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-11-12T04:00:52Z</updated>
    <published>2015-11-12T04:00:52Z</published>
    <content type="html">&lt;p&gt;Ya tenemos KDE Aplicaciones 15.08.3 preparado para ser actualizado en nuestros equipos. La muestra mensual del equipo de listo para su descarga y que nos proporcionará una mejor experiencia de nuestros programas favoritos. KDE Aplicaciones 15.08.3 listo para su descarga El pasado 10 de noviembre, el mismo día que fue lanzado Plasma 5.4.3 y que repasamos en el blog, fue puesto a disposición de los usuarios KDE Aplicaciones 15.08.3, como parte de las actualizaciones mensuales que nos ofrecen los desarrolladores. Es bueno recordar que, como todos estos tipos de revisiones, KDE Aplicaciones 15.08.3 es 100% recomendado para todos los usuarios que tengan la versión anterior, ya que aunque no aporte novedades, si que proporciona un buen número de mejoras y traducciones más depuradas. De esta forma[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/11/kde-aplicaciones-15-8-3-listo-para-su-descarga"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-11-12T04:00:52Z</dc:date>
  </entry>
  <entry>
    <title>Grabar y compartir vídeo de la terminal con Asciinema</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/09/grabar-y-compartir-video-de-la-terminal-con-asciinema" />
    <category term="planeta-arch-linux" />
    <category term="blog-stack" />
    <category term="linux" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-11-11T17:00:00Z</updated>
    <published>2015-09-20T11:00:00Z</published>
    <content type="html">&lt;p&gt;Asciinema es una herramienta que nos permite grabar un vídeo de texto con la salida de la terminal. El vídeo de texto es mucho mejor que una foto estática de la salida en un determinado punto o un vídeo de imágenes del que no podemos seleccionar y copiar su texto. Si queremos compartir las acciones en una terminal y su salida tenemos varias opciones, la más simple es ejecutar el comando y copiar la salida en un archivo de texto, correo electrónico o artículo de una bitácora. Sin embargo, con esta opción solo tenemos el contenido final del comando y a veces en donde se usan varios comandos o que limpian la terminal (como por ejemplo con ssh) es difícil seguir en esa foto final la salida que se ha ido produciendo en la terminal. Otra opción es crear un vídeo tradicional de imágenes que podamos[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/09/grabar-y-compartir-video-de-la-terminal-con-asciinema"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-09-20T11:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Lanzado Plasma 5.4.3, la actualización de noviembre</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/11/lanzado-plasma-5-4-3-la-actualizacion-de-noviembre" />
    <category term="kde" />
    <category term="plasma-5-4" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-11-11T05:49:22Z</updated>
    <published>2015-11-11T05:49:22Z</published>
    <content type="html">&lt;p&gt;Ayer fue lanzado Plasma 5.4.3, la tercera revisión de la rama 5.4.x del escritorio más moderno que ofrece la Comunidad KDE. Con esta actualización Plasma 5.4 se sigue afinando, puliendo y mejorando un entorno que poco a poco se va ganando hueco en los ordenadores de los usuarios y entre las distribuciones GNU/Linux. Lanzado Plasma 5.4.3 A finales de verano fue lanzado Plasma 5.4, y cada mes ha ido saliendo una actualización del mismo que tiene como objetivo subsanar errores y mejora traducciones. La tercera de ellas apareció ayer 10 de noviembre y, como siempre que la Comunidad de desarrolladores de KDE anuncia una actualización de este tipo, recomienda encarecidamente a los usuarios de esta rama que se actualicen, ya que aunque no aporta novedades sustanciales si que nos proporciona mejoras[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/11/lanzado-plasma-5-4-3-la-actualizacion-de-noviembre"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-11-11T05:49:22Z</dc:date>
  </entry>
  <entry>
    <title>Java para tareas de «scripting»</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/11/java-para-tareas-de-scripting" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-11-10T18:01:00Z</updated>
    <published>2015-11-07T14:00:00Z</published>
    <content type="html">&lt;p&gt;Para programar pequeños scripts normalmente se suele emplear el intérprete de comandos en GNU/Linux bash o si es algo complejo un lenguaje interpretado como Python, Ruby o Groovy. Pero no pienses que Java no puede ser empleado para tareas de scripting, en este artículo muestro que problemas presentan los lenguajes interpretados o dinámicos, que ventajas tiene usar Java y finalmente como usarlo con la misma sencillez que un lenguaje interpretado para el nicho funcional de los scripts. Java puede emplearse para cualquier propósito desde aplicaciones web en la parte servidora, aplicaciones de escritorio como escribí en dos artículos introductorios sobre JavaFX, juegos con alta calidad gráfica incluso para dispositivos de capacidades más reducidas como IoT o embebidos y verdaderamente limitados.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/11/java-para-tareas-de-scripting"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-11-07T14:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Múltiples esquemas o bases de datos con jOOQ y Spring en Java</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/10/multiples-esquemas-o-bases-de-datos-con-jooq-y-spring-en-java" />
    <category term="blog-stack" />
    <category term="programcion" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-11-10T18:00:00Z</updated>
    <published>2015-10-27T17:00:00Z</published>
    <content type="html">&lt;p&gt;Aún en las aplicaciones monolíticas que comparten una única base de datos tratamos de dividirla en varios servicios que manejen cierto nicho de información con la intención de que un cambio en una parte sea transparente para las otras partes. Cada servicio de la aplicación monolítica podría potencialmente convertirse en un microservicio y en este caso para que cada micoservicio tenga un ciclo de vida independiente compartir la base de datos es algo a evitar. Incluso en las aplicaciones monolíticas podemos querer guardar cada nicho de información en su propio esquema para evitar acoplamiento entre las diferentes partes o también como forma de tener varios servidores de bases de datos y escalar la aplicación en cierta forma. En estos casos necesitaremos que la aplicación acceda a varios esquemas[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/10/multiples-esquemas-o-bases-de-datos-con-jooq-y-spring-en-java"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-10-27T17:00:00Z</dc:date>
  </entry>
  <entry>
    <title>El patrón de diseño Observer y una forma de implementarlo en Java</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/10/el-patron-de-diseno-observer-y-una-forma-de-implementarlo-en-java" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-11-10T18:00:00Z</updated>
    <published>2015-10-24T10:00:00Z</published>
    <content type="html">&lt;p&gt;Otro de los patrones de diseño que en algún momento nos puede ser útil es el patrón Observer. Podemos usar este patrón si tenemos la necesidad de realizar acciones como consecuencia del cambio de estado o cierta circunstancia de un objeto. El patrón Observer nos permite mantener desacoplados el objeto que emite el evento y el objeto que recibe el evento e independizar al objeto observable del número de observadores que tenga. En Java este patrón podemos implementarlo usando una clase, la clase Observable, y una interfaz, la interfaz Observer proporcionadas en el propio JDK. La clase que queremos que reciba los eventos deberá implementar la interfaz Observer y el objeto que queremos que produzca los eventos debe extender o contener una propiedad de tipo Observable. La interfaz Observer contiene[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/10/el-patron-de-diseno-observer-y-una-forma-de-implementarlo-en-java"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-10-24T10:00:00Z</dc:date>
  </entry>
</feed>

