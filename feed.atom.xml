<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2016-03-19T11:02:35Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2016-03-19T11:02:35Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Cómo ejecutar un proceso del sistema con Java</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2016/03/como-ejecutar-un-proceso-del-sistema-con-java" />
    <category term="blog-stack" />
    <category term="linux" />
    <category term="gnu" />
    <category term="java" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-03-19T10:00:00Z</updated>
    <published>2016-03-12T21:30:00Z</published>
    <content type="html">&lt;p&gt;Dada la popularidad de Java es difícil que no encontremos en el propio JDK o librería la funcionalidad que necesitamos y sino en algún comando del sistema de los muchos que tenemos a disposición en un sistema GNU/Linux. Esto nos da acceso a una gran cantidad de funcionalidades también desde los programas Java. Java de por sí incluye una amplia colección de clases con las funcionalidades principales que podamos necesitar, si no lo ofrece en la API es muy posible que haya una librería que lo proporcione. Pero en algún momento quizá se nos dé el caso que un comando del sistema devuelve la información o realiza la acción que necesitamos. Puede ser una un comando del sistema GNU/Linux, Windows o Mac OS X o un script en Java, Python, Ruby u otro lenguaje de programación. A través de las clase Process[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2016/03/como-ejecutar-un-proceso-del-sistema-con-java"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-03-12T21:30:00Z</dc:date>
  </entry>
  <entry>
    <title>Cómo firmar correos electrónicos con GPG y JavaMail</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2016/03/como-firmar-correos-electronicos-con-gpg-y-javamail" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="seguridad" />
    <category term="java" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-03-19T09:00:00Z</updated>
    <published>2016-03-19T09:00:00Z</published>
    <content type="html">&lt;p&gt;El correo electrónico es un medio muy utilizado para realizar ataques de phising, algunos son muy burdos pero seguramente algunos usuarios sin muchos conocimientos caen víctimas de ellos y aún los usuarios con conocimientos también pueden serlo si están bien realizados y muestran un correo electrónico exactamente igual que el que intentan suplantar. Los usuarios son las víctimas pero si los sitios web que envían los correos electrónicos legítimos los firmasen digitalmente sería una garantía más para proteger a sus usuarios, pudiendo detectar de otra forma el spam y phising. En este artículo muestro a modo de ejemplo como firmar un correo electrónico con GPG y JavaMail e igualmente podría utilizarse para cifrarlo, aunque usar DKIM sería lo más apropiado. Los sitios de comercio electrónico y[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2016/03/como-firmar-correos-electronicos-con-gpg-y-javamail"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-03-19T09:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Encontrar la diferencia entre la salida de dos comandos en nuestra terminal</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2016/03/encontrar-la-diferencia-entre-la-salida-de-dos-comandos-en-nuestra-terminal" />
    <category term="comandos" />
    <category term="mac" />
    <category term="temporales" />
    <category term="unix" />
    <category term="bash" />
    <category term="nombre" />
    <category term="diff" />
    <category term="salida" />
    <category term="diferencia" />
    <category term="linux" />
    <category term="llamadas" />
    <category term="archivos" />
    <category term="pipes" />
    <category term="ejecucion" />
    <category term="general" />
    <category term="terminal" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2016-03-18T09:49:03Z</updated>
    <published>2016-03-18T09:49:03Z</published>
    <content type="html">&lt;p&gt;Este es un pequeño truco que, en ocasiones me ha salvado un poco de tiempo. Un mini-post que tenía ganas de compartir por aquí y que hoy voy a empezar por el final. Es decir, poniendo el código: 1 $ diff &lt;(comando 1) &lt;(comando 2) Con esto, ejecutamos el comando 1, luego el comando 2 y se lo pasamos a diff en forma de pipe creada expresamente para la ocasión. Es decir, la salida del comando 1 se va almacenando en una pipe, y la salida del comando 2 se va almacenando en otra pipe. Dichas pipes, en Linux las podemos encontrar en /proc/[PID del proceso]/fd/ ¿Para qué me vale esto? Saber si dos directorios tienen los mismos archivos Por ejemplo, si tenemos dos directorios que tienen que tener un contenido parecido (los mismos archivos) y queremos saber si falta alguno, aunque podemos utilizar meld,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2016/03/encontrar-la-diferencia-entre-la-salida-de-dos-comandos-en-nuestra-terminal"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2016-03-18T09:49:03Z</dc:date>
  </entry>
  <entry>
    <title>Pack de iconos Oxygen Crystal Diamond para Plasma 5</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2016/03/pack-de-iconos-oxygen-crystal-diamond-para-plasma-5" />
    <category term="oxygen-crystal-diamond" />
    <category term="iconos" />
    <category term="diseno" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2016-03-18T09:10:10Z</updated>
    <published>2016-03-18T09:10:10Z</published>
    <content type="html">&lt;p&gt;Tenía que pasar. Hay gente nostálgica que todavía le gusta la estética de KDE 4 y ha portado el pack de iconos Oxygen Crystal Diamond a Plasma 5, lo cual me parece extraordinario por dos razones: porque el usuario debe tener libertad para personalizar su escritorio como quiera y porque eran temas de iconos de gran calidad. Pack de iconos Oxygen Crystal Diamond para Plasma 5 Muchos de los packs de iconos de KDE 4 tenían una calidad extraordinaria calidad, es por ello que no es ninguna mala idea portarlos al nuevo escritorio de la Comunidad KDE: Plasma 5. De esta forma, Nikola Yanev ha sido el encargado de realizar la gran tarea de recopilar el pak iconos Oxygen Crystal Diamond adaptarlos a Plasma 5 y crear un gran fichero zip para poder instalarlo fácilmente (como se explica en el siguiente[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2016/03/pack-de-iconos-oxygen-crystal-diamond-para-plasma-5"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2016-03-18T09:10:10Z</dc:date>
  </entry>
  <entry>
    <title>PCLinuxOS Full Monty: una navaja suiza</title>
    <link rel="alternate" href="http://www.blogstack.info/post/lasombradelhelicoptero/2016/03/pclinuxos-full-monty-una-navaja-suiza" />
    <category term="linux" />
    <category term="full-monty" />
    <category term="pclinuxos" />
    <category term="gnu-linux" />
    <category term="kde" />
    <category term="revision" />
    <category term="analisis" />
    <category term="pc-linux-os" />
    <author>
      <name>Enrique Bravo</name>
    </author>
    <updated>2016-03-17T16:07:09Z</updated>
    <published>2016-03-17T16:07:09Z</published>
    <content type="html">&lt;p&gt;Es posible que mucha gente no sepa que PCLinuxOS sigue viva. Yo mismo, sin ir más lejos, pensaba hasta hace unos días que el proyecto creado por Bill Reynolds (Texstar) allá por 2003 se había quedado estancado en una fase de no-desarrollo. Recuerdo haber leído acerca de la imposibilidad de este hombre, creo que por razones de salud, para continuar su trabajo. Desde entonces, hace un par de años o más, no he estado al tanto de las andanzas de la distro. Sin embargo, ese observatorio de popularidad tan discutible que supone Distrowatch la seguía – y sigue – manteniendo en los altares. Me preguntaba, de ahí este artículo, a qué se podía deber esto. Pues resulta que no solo sigue viva, sino que por sus singulares características conforma una distribución GNU/Linux especial: refugio de los “anti-systemd”[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/lasombradelhelicoptero/2016/03/pclinuxos-full-monty-una-navaja-suiza"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Enrique Bravo</dc:creator>
    <dc:date>2016-03-17T16:07:09Z</dc:date>
  </entry>
  <entry>
    <title>Java this vs this()</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2016/03/java-this-vs-this" />
    <category term="java-basico" />
    <category term="javacore" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2016-03-17T15:02:44Z</updated>
    <published>2016-03-17T15:02:44Z</published>
    <content type="html">&lt;p&gt;Java this vs this() es una pregunta habitual cuando comenzamos a trabajar con este lenguaje. ¿Para qué vale exactamente el operador this y en que situaciones la utilizamos?. Vamos a ver varios ejemplos de situaciones en las cuales se puede usar este operador. Este código compila pero no funciona correctamente ya que estamos igualando la […] La entrada Java this vs this() aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2016/03/java-this-vs-this"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2016-03-17T15:02:44Z</dc:date>
  </entry>
  <entry>
    <title>Docker en Debian Jessie</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2016/03/docker-en-debian-jessie" />
    <category term="blog-stack" />
    <category term="dockerhub" />
    <category term="linux" />
    <category term="sysadmin" />
    <category term="debian" />
    <category term="mariadb" />
    <category term="gnu" />
    <category term="debian-jessie" />
    <category term="docker" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2016-03-17T10:47:27Z</updated>
    <published>2016-03-17T10:47:27Z</published>
    <content type="html">&lt;p&gt;Por suerte la comunidad de usuarios de habla hispana, del mundo del software libre, es muy grande. Cada mañana leo sus estupendos artículos sobre las novedades del momento. Ayer mismo leí en la web... La entrada Docker en Debian Jessie aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2016/03/docker-en-debian-jessie"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2016-03-17T10:47:27Z</dc:date>
  </entry>
</feed>

