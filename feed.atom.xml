<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-12-21T11:02:29Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-12-21T11:02:29Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Windows: Ver uptime</title>
    <link rel="alternate" href="http://www.blogstack.info/post/sysadmit/2015/12/windows-ver-uptime" />
    <category term="windows-server" />
    <category term="windows-client" />
    <author>
      <name>noreply@blogger.com (SYSADMIT .com)</name>
    </author>
    <updated>2015-12-21T10:20:00Z</updated>
    <published>2015-12-21T10:20:00Z</published>
    <content type="html">&lt;p&gt;En sistemas Windows, para saber el tiempo que el sistema está online, no disponemos del comando uptime como en sistemas Linux, pero disponemos de varias alternativas: 1) Administrador de tareas (taskmgr.exe): Con el nuevo administrador de tareas introducido en Windows 8 y Windows Server 2012, encontraremos el apartado "Tiempo activo" en la vista CPU. En el administrador de tareas incluido en sistemas operativos anteriores, veremos en la pestaña "Rendimiento", el apartado "Tiempo de uso". El formato es el siguiente: Días:horas:minutos:segundos. Según los ejemplos mostrados en la captura anterior, vemos como un equipo tiene un uptime de 352 días, mientras que el segundo, tiene un update de 2 días. 2) systeminfo systeminfo es una herramienta de linea de comandos que nos permite obtener información[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/sysadmit/2015/12/windows-ver-uptime"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>noreply@blogger.com (SYSADMIT .com)</dc:creator>
    <dc:date>2015-12-21T10:20:00Z</dc:date>
  </entry>
  <entry>
    <title>Callbacks en C++11, ejemplos con argumentos por referencia y templates (III)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/12/callbacks-en-c-11-ejemplos-con-argumentos-por-referencia-y-templates-iii" />
    <category term="programacion" />
    <category term="referencia" />
    <category term="flexibilidad" />
    <category term="closuer" />
    <category term="llamada" />
    <category term="parametros" />
    <category term="argumento" />
    <category term="callback" />
    <category term="lamda" />
    <category term="valor" />
    <category term="facilidad" />
    <category term="usuario" />
    <category term="c-11" />
    <category term="anonima" />
    <category term="c" />
    <category term="general" />
    <category term="funcion" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-12-21T09:20:58Z</updated>
    <published>2015-12-21T09:20:58Z</published>
    <content type="html">&lt;p&gt;Volvemos a dar guerra con el tema que empezamos hace unas semanas, si no has seguido esta serie de posts te recomiendo echar un ojo a Callbacks en C++11 nuevas posibilidades para un software más potente y Callbacks en C++11, llamando a métodos con un objeto asociado. En ellos pongo muchos ejemplos de cómo asociar funciones o métodos a variables. Argumentos por referencia Es un tema que hemos dejado un poco de lado, pero sólo quiero hacer una pequeña puntualización. Y ya de paso, vemos que bind() no sólo vale para métodos con un objeto, también para funciones normales, lo único que no ponemos el objeto, y la clase sólo la pondremos si es un método estático. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include &lt;iostream&gt; #include &lt;string&gt; #include &lt;functional&gt; using namespace std;[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/12/callbacks-en-c-11-ejemplos-con-argumentos-por-referencia-y-templates-iii"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-12-21T09:20:58Z</dc:date>
  </entry>
  <entry>
    <title>Enlaces interesantes 221</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2015/12/enlaces-interesantes-221" />
    <category term="enlaces" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2015-12-21T08:05:10Z</updated>
    <published>2015-12-21T08:05:00Z</published>
    <content type="html">&lt;p&gt;Ahí van los enlaces recopilados durante la semana pasada, espero que os resulten interesantes :-) .Net ?. in C#: When Properties Might Be Null Bill Wagner Inyección de dependencias: resolviendo implementaciones específicas de una interface genérica Javier Ros String Interpolation and the Conditional Operators Bill Wagner Designing C# 7 Lucian Wischik Hoisting in .NET Examples Alexandr Nikitin How to retrieve file size from a remote URL (using #CSharp) Kunal Chowdhury C# Features From 3.0 to 6.0 Rakesh Dabde Processing a File or Folder When It Changes in Your Desktop Apps or Windows Service Peter Vogel To String or to string Phil Haack The week in .NET - 12/15/2015 Bertrand Le Roy Getting Started with .NET and Docker Elton Stoneman My Favorite .net Open Source Projects – Autofac Simon Timms[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2015/12/enlaces-interesantes-221"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2015-12-21T08:05:00Z</dc:date>
  </entry>
  <entry>
    <title>Lanzado Kdenlive 15.12</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/12/lanzado-kdenlive-15-12" />
    <category term="kdenlive" />
    <category term="software" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-12-20T06:34:00Z</updated>
    <published>2015-12-20T06:34:00Z</published>
    <content type="html">&lt;p&gt;Con el lanzamiento de KDE Aplicaciones 15.12 (que fue comentado en el blog el jueves)  también fue lanzado Kdenlive 15.12, el magnífico editor de vídeos multipista de la Comunidad KDE que cada día tiene más seguidores. Veamos que nos ofrece esta nueva versión. Lanzado Kdenlive 15.12 Esta misma semana ha sido lanzado Kdenlive 15.12, el editor de vídeo multipista de KDE que combina facilidad de manejo con potencia en su uso. Según tradució Ubunlog del anuncio oficial del equipo de Kdenlive las novedades principales son las siguientes: Los efectos de la Timeline y los efectos Bin se pueden desactivar temporalmente y reactivarlos en 2 clics Se puede activar y desactivar la transparencia en una pista concreta Los iconos se adaptan automáticamente a su esquema de colores Se han hecho mejoras en el[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/12/lanzado-kdenlive-15-12"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-12-20T06:34:00Z</dc:date>
  </entry>
  <entry>
    <title>Podcast Cròniques - Jornada de reflexió sobre com estendre el Software Lliure</title>
    <link rel="alternate" href="http://www.blogstack.info/post/etccrond/2015/12/podcast-croniques-jornada-de-reflexio-sobre-com-estendre-el-software-lliure" />
    <category term="filosofia" />
    <category term="podcast" />
    <category term="redes-sociales" />
    <author>
      <name>Eugenio M. Vigo</name>
    </author>
    <updated>2015-12-19T18:03:23Z</updated>
    <published>2015-12-19T18:01:00Z</published>
    <content type="html">&lt;p&gt;Avui, jornada de reflexió, comparteixo amb vosaltres unes petites reflexions al voltant del vídeo de'n Bryan Lunduke titulat The need for compromise in Free Software ("La necessitat de transigir en el Software Lliure"), en què participen, entre d'altres, en Richard Stallman i l'Aaron Seigo de Kolab.org. Al podcast, hi comento breument el vídeo, el qual m'ha semblat senzillament maravellós, per tal de fer un petit comentari sobre la forma en la qual, molt sovint, intentem estendre l'ús del Software Lliure per les xarxes socials o mitjans com poden ser blogs i similars.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/etccrond/2015/12/podcast-croniques-jornada-de-reflexio-sobre-com-estendre-el-software-lliure"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Eugenio M. Vigo</dc:creator>
    <dc:date>2015-12-19T18:01:00Z</dc:date>
  </entry>
  <entry>
    <title>Cómo cambiar el buscador por defecto en Firefox</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/12/como-cambiar-el-buscador-por-defecto-en-firefox" />
    <category term="como" />
    <category term="duckduckgo" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-12-19T06:56:12Z</updated>
    <published>2015-12-19T06:56:12Z</published>
    <content type="html">&lt;p&gt;Por unas razones que conoceréis al final de la entrada hoy me gustaría explicaros algo que se sale un poco de la temática KDE. Así que hoy quiero compartir con todos vosotros cómo cambiar el buscador por defecto en Firefox. Algo básico si queremos tener más privacidad cuando naveguemos por la red. Cómo cambiar el buscador por defecto en Firefox En la mayor parte de las distribuciones GNU/Linux tenemos a Firefox como navegador web por defecto, pero en algunas tenemos google como buscador por defecto y otras DuckDuckGo, el buscador libre que garantiza tu privacidad. Durante los últimos meses estoy utilizando ambos indistintamente llegando a la conclusión que aunque Google es un poco más preciso en las búsquedas el buscador del patito no lo hace nada mal. De hecho mi “modus operandi” suele ser:[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/12/como-cambiar-el-buscador-por-defecto-en-firefox"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-12-19T06:56:12Z</dc:date>
  </entry>
  <entry>
    <title>Cómo buscar los enlaces rotos de un sitio web</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web" />
    <category term="blog-stack" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-12-18T17:00:00Z</updated>
    <published>2015-12-18T17:00:00Z</published>
    <content type="html">&lt;p&gt;Ya tengamos un sitio web, una bitácora, o una aplicación es recomendable comprobar cada cierto tiempo los enlaces rotos. Las páginas pueden desaparecer o cambiar de dirección y esto provocará páginas no encontradas en los enlaces que las referenciasen. Usando herramientas que automaticen la tarea podemos encontrar enlaces rotos de forma efectiva y rápida. La web se basa en un conjunto de páginas donde unas hacen referencia a otras a través de enlaces. Unido a que las páginas que están bajo el control de los sitios referenciados pudiendo desaparecer o cambiar de dirección hace que las referencias puedan dejar de funcionar o necesitar una redirección, el mensaje que nos indicará el navegador es el conocido Página no encontrada o error 404 para indicar lo mismo. Que un sitio web contenga referencias[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-12-18T17:00:00Z</dc:date>
  </entry>
</feed>

