<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-11-28T16:02:15Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-11-28T16:02:15Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Br-Print3D, la aplicación para impresoras 3D de KDE</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/11/br-print3d-la-aplicacion-para-impresoras-3d-de-kde" />
    <category term="br-print3d" />
    <category term="impresoras-3d" />
    <category term="software" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-11-28T15:28:17Z</updated>
    <published>2015-11-28T15:28:17Z</published>
    <content type="html">&lt;p&gt;Hoy me complace presentaros Br-Print3D, la primera aplicación para impresoras de la Comunidad  KDE y que proporciona una magnífica interfaz de usuario para la creciente legión de makers, que nos solo disfrutan creando sus impresoras 3D sino que también quieren ver los frutos de sus creaciones también desde el escritorio Plasma de KDE. Br-Print3D, la aplicación para impresoras 3D de KDE Poco a poco, la revolución maker va ganando adeptos. Ya no sorprende a nadie lo que es algo sorprendente como es el hecho de que podamos imprimir en 3D cualquier objeto que nos podamos imaginar. Aún recuerdo cuando hace 4 años me lo contaban y no me lo acababa de creer hasta que una persona me trajo a mi clase de la UNED una impresora 3D y me hizo una pequeña demostración. La Comunidad KDE no es ajena a esta[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/11/br-print3d-la-aplicacion-para-impresoras-3d-de-kde"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-11-28T15:28:17Z</dc:date>
  </entry>
  <entry>
    <title>Fedora totalmente software libre, eso es Freed-ora</title>
    <link rel="alternate" href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/11/fedora-totalmente-software-libre-eso-es-freed-ora" />
    <category term="fedora" />
    <category term="kernel-linux" />
    <category term="software-libre" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2015-11-28T11:39:12Z</updated>
    <published>2015-11-28T11:39:12Z</published>
    <content type="html">&lt;p&gt;Para los más puristas del software libre y de GNU/Linux una opción es el proyecto Freed-ora que ofrece una versión de Fedora 100% software libre. El pasado 3 de noviembre de 2015 se publicó la nueva versión de Fedora, la distribución de GNU/Linux comunitaria auspiciada por Red Hat. A partir de ese proyecto, Marcus Moeller ha creado una ISO de Fedora pero 100% software libre. ¿Qué quiere decir esto? ¿No es Fedora software libre? El kernel Linux que libera Linus Torvalds con una gran comunidad detrás no es totalmente libre. Hay partes del código que no incluyen el código fuente, código ofuscado, o código que no se distribuye bajo licencia de Software Libre, o que incita o requiere que utilices parte de software adicional que no es Software Libre. Hay un proyecto del que ya he hablado por el blog,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/11/fedora-totalmente-software-libre-eso-es-freed-ora"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2015-11-28T11:39:12Z</dc:date>
  </entry>
  <entry>
    <title>Configuración de una aplicación en diferentes entornos con Spring Cloud Config</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-11-28T10:00:00Z</updated>
    <published>2015-11-28T10:00:00Z</published>
    <content type="html">&lt;p&gt;La configuración de una aplicación sulele varíar según el entorno en el que se ejecuta, la opción recomendada es que este externalizada y que el artefacto que se despliega en cada entorno sea el mismo. Con Spring Cloud Config en vez de guardar la configuración en un archivo de la propia máquina donde se instala podemos guardar de forma centralizada en un repositorio y que la aplicación obtenga la versión más actualizada cuando se inicia. En este ejemplo explicaré como crear el servidor de configuraciones con Spring Cloud Config y un ejemplo de cliente con Spring Boot que le solicita su configuración según su entorno. Desarrollar una aplicación no consiste solo en programar el código que proporciona su funcionalidad, con igual de importancia está como poner en producción esa aplicación para[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-11-28T10:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Emulando a Linus Torvalds: Crea tu propio sistema operativo desde 0 (III)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdeadrianarroyo/2015/11/emulando-a-linus-torvalds-crea-tu-propio-sistema-operativo-desde-iii" />
    <author>
      <name>Adrián Arroyo</name>
    </author>
    <updated>2015-11-27T23:00:00Z</updated>
    <published>2015-11-27T23:00:00Z</published>
    <content type="html">&lt;p&gt;Este artículo lo escribí para el blog en español DesdeLinux el 1 de enero de 2014 y ahora lo dejo aquí, en mi blog personal. El artículo está tal cual, sin ninguna modificación desde aquella fecha. Continuamos esta serie de posts sobre cómo crear nuestro sistema operativo. Hoy no nos vamos a centrar en un tema sino que vamos a definir algunas funciones útiles de ahora en adelante. En primer lugar vamos a definir 3 funciones que cumplan la función de memcpy, memset y memcmp: void* ND::Memory::Set(void* buf, int c, size_t len)
{
	unsigned char* tmp=(unsigned char*)buf;
	while(len--)
	{
		*tmp++=c;
	}
	return buf;
}
void* ND::Memory::Copy(void* dest,const void* src, size_t len)
{
	const unsigned char* sp=(const unsigned char*)src;
	unsigned char* dp=(unsigned char*)dest;
	for(;len!=0;len--) *dp++=*sp++;
	return[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdeadrianarroyo/2015/11/emulando-a-linus-torvalds-crea-tu-propio-sistema-operativo-desde-iii"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Adrián Arroyo</dc:creator>
    <dc:date>2015-11-27T23:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Características de los lenguajes de programación</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/10/caracteristicas-de-los-lenguajes-de-programacion" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-11-27T19:00:00Z</updated>
    <published>2015-10-31T11:00:00Z</published>
    <content type="html">&lt;p&gt;Hay numerosos y diferentes lenguajes de programación pero solo una docena tienen una cuota de uso significativa. Muchos comparten características y algunos lenguajes las van incorporando a medida que se demuestra que sus beneficios son mayores que la complejidad que pueden añadir. Veamos algunas de sus propiedades. Hay cantidad de lenguajes de programación, algunas diferencias entre ellos se encuentran su propósito (general o específico para cierto tipo de tareas), en la sintaxis, el sistema de tipos, por los paradigmas de programación que soporta (POO, imperativo, funcional, …), otras diferencias están en la librerías disponibles, frameworks o comunidad, sin embargo, la mayoría comparten algunas características por las que se pueden catalogar los lenguajes. En este artículo comentaré algunas[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/10/caracteristicas-de-los-lenguajes-de-programacion"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-10-31T11:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Taller de GNU/Linux en las IV Jornadas Libres de la UNED de Vila-real</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/11/taller-de-gnu-linux-en-las-iv-jornadas-libres-de-la-uned-de-vila-real" />
    <category term="jornades-lliures" />
    <category term="eventos" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-11-27T15:34:13Z</updated>
    <published>2015-11-27T15:34:13Z</published>
    <content type="html">&lt;p&gt;Las IV Jornadas Libres  de la UNED de Vila-real fueron presentadas en octubre en un acto sencillo en la UNED de Vila-real. Hoy me complace en presentar el segundo taller que tendrá lugar el 11 de diciembre y cuyo protagonista será GNU/Linux. El objetivo de las IV Jornadas Libres Básicamente se puede decir que el objetivo principal es compartir conocimiento tecnológicos, tan necesarios para nuestras vidas. No obstante, no está de más concretar un poco más y comentar que las presentes jornadas están enfocadas a tratar temas de actualidad sobre Sistemas operativos libres, microcontroladores, impresión en 3D, escritorios libres (KDE, por supuesto), hardware libre, marketing en Facebook, Big Data, privacidad en la red…….aportando la información necesaria sobre todas las posibilidades que nos aportan[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/11/taller-de-gnu-linux-en-las-iv-jornadas-libres-de-la-uned-de-vila-real"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-11-27T15:34:13Z</dc:date>
  </entry>
  <entry>
    <title>Utilizando Maven Profiles</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2015/11/utilizando-maven-profiles" />
    <category term="maven" />
    <category term="eclipse" />
    <category term="javatips" />
    <category term="arquitectura" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2015-11-27T08:11:01Z</updated>
    <published>2015-11-27T08:11:01Z</published>
    <content type="html">&lt;p&gt;El concepto de Maven  Profiles es uno de los más interesantes de Maven ya que permite generar diferentes perfiles para el despliegue de las aplicaciones que desarrollamos.  Es una de las características en las que más nos apoyaremos cuando las aplicaciones ganen en complejidad. Usarlos es muy sencillo , para ello vamos a construir un proyecto […] La entrada Utilizando Maven Profiles aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2015/11/utilizando-maven-profiles"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2015-11-27T08:11:01Z</dc:date>
  </entry>
</feed>

