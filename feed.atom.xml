<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-09-16T15:02:21Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-09-16T15:02:21Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Políticas de backup en PROXMOX</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/09/politicas-de-backup-en-proxmox" />
    <category term="sistemas" />
    <category term="blog-stack" />
    <category term="linux" />
    <category term="lzo" />
    <category term="proxmox" />
    <category term="snapshot" />
    <category term="gzip" />
    <category term="gnu" />
    <category term="backup" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-09-16T14:10:24Z</updated>
    <published>2015-09-16T14:10:24Z</published>
    <content type="html">&lt;p&gt;Realmente no sabía como llamar al artículo, la cuestión es que vamos a tratar el tema de como realizar copias de seguridad de nuestras máquinas virtuales y contenedores linux en PROXMOX. Veremos como realizar... La entrada Políticas de backup en PROXMOX aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/09/politicas-de-backup-en-proxmox"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-09-16T14:10:24Z</dc:date>
  </entry>
  <entry>
    <title>El tema de iconos Breeze de Plasma 5 está terminado</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/09/el-tema-de-iconos-breeze-de-plasma-5-esta-terminado" />
    <category term="breeze" />
    <category term="iconos" />
    <category term="diseno" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-09-16T11:27:55Z</updated>
    <published>2015-09-16T11:27:55Z</published>
    <content type="html">&lt;p&gt;Tras poco más de un año de trabajo, el equipo de diseño de KDE ha dado por finalizado una parte básica de su cometido. Es un placer anunciar que el tema de iconos Breeze de Plasma 5 está terminado ya que han completado la lista de iconos que tenían en mente. El tema de iconos Breeze de Plasma 5 está terminado EN KDE 4 apareció un magnífico tema de iconos llamado Oxygen que en su tiempo fue precioso y extremadamente completo, no por nada el tema ofrecía 4780 iconos para prácticamente todas las aplicaciones, acciones o tipos de archivos disponibles en tu PC. Como era de esperar, con el salto a Plasma 5 se esperaba una renovación visual de todo el escritorio de la Comunidad KDE. Para ello se creó el KDE Visual Design Group (KVDG), el cual se encargarían de dotar de un nuevo aspecto a Plasma 5,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/09/el-tema-de-iconos-breeze-de-plasma-5-esta-terminado"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-09-16T11:27:55Z</dc:date>
  </entry>
  <entry>
    <title>Cómo especificar qué proyecto desplegar en Azure?</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/como-especificar-que-proyecto-desplegar-en-azure" />
    <category term="git" />
    <category term="azure" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2015-09-16T02:11:00Z</updated>
    <published>2015-09-16T02:11:00Z</published>
    <content type="html">&lt;p&gt;Existen casos en los que configuramos nuestra Webapp en Azure para que se conecte a Git y despliegue automáticamente pero tenemos un problema hay dos aplicaciones dentro del repositorio y Azure no sabe qué hacer. Kudu al rescate La magia detrás de los deploys automáticos en Azure está controlada por Kudu, un proyecto open source que se encarga de muchas cosas, por ejemplo decidir qué es lo que se despliega Personalizando Kudu Se puede indicar qué hacer a Kudu de dos formas, la primera es creando un archivo de nombre “.deployment” en el directorio raíz de nuestro repositorio (o dropbox, claro) e indicamos el archivo del proyecto, por ejemplo [config]
project=api\DataApi\DataApi\DataApi.csproj Es suficiente, indicamos a Kudu la ubicación del archivo que tiene que utilizar para generar el proyecto[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/como-especificar-que-proyecto-desplegar-en-azure"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2015-09-16T02:11:00Z</dc:date>
  </entry>
  <entry>
    <title>Delivery continuo en Azure</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/delivery-continuo-en-azure" />
    <category term="git" />
    <category term="azure" />
    <category term="web-api" />
    <category term="backbone-js" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2015-09-16T01:29:00Z</updated>
    <published>2015-09-16T01:29:00Z</published>
    <content type="html">&lt;p&gt;Una de las grande características de Azure son las Web Apps, básicamente es la posibilidad de tener un sitio web sin más, desplegar una app ASP.NET (de cualquier tipo) e incluso de otras plataformas como PHP, Tomcat, Node, etc.  y listo, sin configurar IIS, ni nada. Primero, la forma tradicional Presionamos el signo + abajo a la izquierda, seleccionamos algunas cosas y listo La aplicación ya está creada y corriendo pero no tiene código Subiendo nuestra aplicación como sitio web La forma más simple es utilizar Visual Studio, una vez creada la aplicación web, en este caso MVC Entre las opciones aparece Azure. Ingresamos nuestras credenciales de Azure Y elegimos la app creada (podríamos haberlo hecho desde Visual Studio también) Y publicamos. Delivery continuo Vamos al tema que nos interesa existe[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/delivery-continuo-en-azure"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2015-09-16T01:29:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo de multiproyecto con Gradle</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/09/ejemplo-de-multiproyecto-con-gradle" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-09-15T17:00:00Z</updated>
    <published>2015-09-15T17:00:00Z</published>
    <content type="html">&lt;p&gt;En un proyecto grande podemos tener necesidad de dividir el monolito al menos en varios módulos y yendo un paso más lejos en microservicios. La herramienta de construcción que usemos deberá de facilitarnos automatizar la tarea de construcción del código fuente de cada módulo individual, de todos a la vez o de los microservicios si tienen alguna dependencia compartida. En el artículo y ejemplo explicaré cómo usando Gradle podemos dividir el proyecto en varios módulos. No deja de ser un ejemplo pero es bastante completo y está formado por dos aplicaciones web, una librería de componentes y otra librería con el modelo de persistencia, usa Spring, jOOQ, Tapestry, PostgreSQL, Docker, Liquibase, … Cuando una aplicación o proyecto crece en algún momento podemos tener necesidad de partir el monolito[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/09/ejemplo-de-multiproyecto-con-gradle"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-09-15T17:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Taller GNU/Emacs &amp; Emacs Lisp en Madrid</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/09/taller-gnu-emacs-emacs-lisp-en-madrid" />
    <category term="kde" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-09-15T14:06:33Z</updated>
    <published>2015-09-15T14:06:33Z</published>
    <content type="html">&lt;p&gt;Seguimos con eventos físicos relacionados con Software Libre. En esta ocasión os animo a asistir al Taller GNU/Emacs &amp; Emacs Lisp en Madrid, una oportunidad única para aprender sobre este editor de texto libre. Taller GNU/Emacs &amp; Emacs Lisp en Madrid El próximo 23 de septiembre, en el centro social Labrecha (C\ Picos de Europa, 11, letra i, a 2 minutos del metro de Nueva numancia en Madrid (Vallekas).) a las 19 horas se va a celebrar un Taller GNU/Emacs Lisp. Para los que no lo sepan, yo entre ellos, Emacs es un editor de textos con una gran cantidad de funciones, muy popular entre programadores y usuarios técnicos, con los que muchos programadores son capaces de desarrollar software a raudales. Además, después de explicar Emacs se explicará Emacs Lisp, con el que podrás configurar mejor Emacs,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/09/taller-gnu-emacs-emacs-lisp-en-madrid"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-09-15T14:06:33Z</dc:date>
  </entry>
  <entry>
    <title>La carpeta wwwroot en ASPNET 5</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2015/09/la-carpeta-wwwroot-en-aspnet-5" />
    <category term="desarrollo" />
    <category term="aspnet5" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2015-09-15T07:15:00Z</updated>
    <published>2015-09-15T07:15:00Z</published>
    <content type="html">&lt;p&gt;Seguimos hablando de ASP.NET 5 y los cambios que traerá para los desarrolladores que ya llevamos tiempo utilizando ASP.NET y MVC, porque esta nueva versión viene cargada de cambios y algunos son realmente rompedores. Hoy nos centraremos en un cambio simple, pero bastante importante, que afecta a la estructura de nuestros proyectos: el raíz del sitio web. Desde siempre el directorio raíz de un proyecto ASP.NET, ya fuera Web Forms, MVC, Web API o cualquier otro, coincidía con la raíz del sitio web en el servidor, es decir, en nuestros equipos se mezclaban los archivos propios del desarrollo con los contenidos estáticos que se subían posteriormente a los entornos de prueba o producción. Esto creaba un poco de lío a la hora de publicar los proyectos, porque era fácil que nos dejáramos algo por[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2015/09/la-carpeta-wwwroot-en-aspnet-5"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2015-09-15T07:15:00Z</dc:date>
  </entry>
</feed>

