<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-09-16T01:02:25Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-09-16T01:02:25Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Delivery continuo en Azure</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/delivery-continuo-en-azure" />
    <category term="git" />
    <category term="azure" />
    <category term="web-api" />
    <category term="backbone-js" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2015-09-16T01:29:00Z</updated>
    <published>2015-09-16T01:29:00Z</published>
    <content type="html">&lt;p&gt;Una de las grande características de Azure son las Web Apps, básicamente es la posibilidad de tener un sitio web sin más, desplegar una app ASP.NET (de cualquier tipo) e incluso de otras plataformas como PHP, Tomcat, Node, etc.  y listo, sin configurar IIS, ni nada. Primero, la forma tradicional Presionamos el signo + abajo a la izquierda, seleccionamos algunas cosas y listo La aplicación ya está creada y corriendo pero no tiene código Subiendo nuestra aplicación como sitio web La forma más simple es utilizar Visual Studio, una vez creada la aplicación web, en este caso MVC Entre las opciones aparece Azure. Ingresamos nuestras credenciales de Azure Y elegimos la app creada (podríamos haberlo hecho desde Visual Studio también) Y publicamos. Delivery continuo Vamos al tema que nos interesa existe[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/delivery-continuo-en-azure"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2015-09-16T01:29:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo de multiproyecto con Gradle</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/09/ejemplo-de-multiproyecto-con-gradle" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-09-15T17:00:00Z</updated>
    <published>2015-09-15T17:00:00Z</published>
    <content type="html">&lt;p&gt;En un proyecto grande podemos tener necesidad de dividir el monolito al menos en varios módulos y yendo un paso más lejos en microservicios. La herramienta de construcción que usemos deberá de facilitarnos automatizar la tarea de construcción del código fuente de cada módulo individual, de todos a la vez o de los microservicios si tienen alguna dependencia compartida. En el artículo y ejemplo explicaré cómo usando Gradle podemos dividir el proyecto en varios módulos. No deja de ser un ejemplo pero es bastante completo y está formado por dos aplicaciones web, una librería de componentes y otra librería con el modelo de persistencia, usa Spring, jOOQ, Tapestry, PostgreSQL, Docker, Liquibase, … Cuando una aplicación o proyecto crece en algún momento podemos tener necesidad de partir el monolito[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/09/ejemplo-de-multiproyecto-con-gradle"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-09-15T17:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Taller GNU/Emacs &amp; Emacs Lisp en Madrid</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/09/taller-gnu-emacs-emacs-lisp-en-madrid" />
    <category term="kde" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-09-15T14:06:33Z</updated>
    <published>2015-09-15T14:06:33Z</published>
    <content type="html">&lt;p&gt;Seguimos con eventos físicos relacionados con Software Libre. En esta ocasión os animo a asistir al Taller GNU/Emacs &amp; Emacs Lisp en Madrid, una oportunidad única para aprender sobre este editor de texto libre. Taller GNU/Emacs &amp; Emacs Lisp en Madrid El próximo 23 de septiembre, en el centro social Labrecha (C\ Picos de Europa, 11, letra i, a 2 minutos del metro de Nueva numancia en Madrid (Vallekas).) a las 19 horas se va a celebrar un Taller GNU/Emacs Lisp. Para los que no lo sepan, yo entre ellos, Emacs es un editor de textos con una gran cantidad de funciones, muy popular entre programadores y usuarios técnicos, con los que muchos programadores son capaces de desarrollar software a raudales. Además, después de explicar Emacs se explicará Emacs Lisp, con el que podrás configurar mejor Emacs,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/09/taller-gnu-emacs-emacs-lisp-en-madrid"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-09-15T14:06:33Z</dc:date>
  </entry>
  <entry>
    <title>La carpeta wwwroot en ASPNET 5</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2015/09/la-carpeta-wwwroot-en-aspnet-5" />
    <category term="desarrollo" />
    <category term="aspnet5" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2015-09-15T07:15:00Z</updated>
    <published>2015-09-15T07:15:00Z</published>
    <content type="html">&lt;p&gt;Seguimos hablando de ASP.NET 5 y los cambios que traerá para los desarrolladores que ya llevamos tiempo utilizando ASP.NET y MVC, porque esta nueva versión viene cargada de cambios y algunos son realmente rompedores. Hoy nos centraremos en un cambio simple, pero bastante importante, que afecta a la estructura de nuestros proyectos: el raíz del sitio web. Desde siempre el directorio raíz de un proyecto ASP.NET, ya fuera Web Forms, MVC, Web API o cualquier otro, coincidía con la raíz del sitio web en el servidor, es decir, en nuestros equipos se mezclaban los archivos propios del desarrollo con los contenidos estáticos que se subían posteriormente a los entornos de prueba o producción. Esto creaba un poco de lío a la hora de publicar los proyectos, porque era fácil que nos dejáramos algo por[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2015/09/la-carpeta-wwwroot-en-aspnet-5"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2015-09-15T07:15:00Z</dc:date>
  </entry>
  <entry>
    <title>Novedades de C# 6: Inicializadores de diccionarios</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/novedades-de-c-6-inicializadores-de-diccionarios" />
    <category term="c-6" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2015-09-15T00:05:00Z</updated>
    <published>2015-09-15T00:05:00Z</published>
    <content type="html">&lt;p&gt;Esta es simple pero muy práctica, en el pasado para inicializar los valores de un diccionario teníemos que hacer esto: var capitales = new Dictionary()
{
    { "Argentina", "Buenos Aires" },
    { "Francia", "París" },
    { "España", "Madrid" }
}; Ahora podemos hacer así: var capitales = new Dictionary()
{
    ["Argentina"] = "Buenos Aires",
    ["Francia"] = "París",
    ["España"] = "Madrid"
}; Podemos señalar como ventaha que es más claro cuál es el nombre y cuál el valor. Nos leemos.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/09/novedades-de-c-6-inicializadores-de-diccionarios"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2015-09-15T00:05:00Z</dc:date>
  </entry>
  <entry>
    <title>Instalando Debian Jessie</title>
    <link rel="alternate" href="http://www.blogstack.info/post/lasombradelhelicoptero/2015/09/instalando-debian-jessie" />
    <category term="debian" />
    <category term="gnome" />
    <category term="experiencias" />
    <author>
      <name>Enrique Bravo</name>
    </author>
    <updated>2015-09-14T16:01:15Z</updated>
    <published>2015-09-14T16:01:15Z</published>
    <content type="html">&lt;p&gt;Disculpen ustedes mi falta de originalidad. Sí, se me ha ocurrido que el “verano del camaleón” podría tener su continuidad en el otoño de Debian, así sin más. En realidad, mi intención era realizar un experimento con una distribución que estuviese únicamente formada por paquetes libres y tratar de sobrevivir con ella como único sistema disponible para el día a día. Supongo que ya se ha hecho antes, pero me apetecía probar la experiencia. Sin embargo, esta historia estaba condenada a morir antes de siquiera ver la luz, debido a que ninguno de los adaptadores wifi que poseo (tres, nada menos) son soportados por GNU/Linux sin usar “blobs” binarios. Sí, podría comprar un cable de red de diez metros hasta el salón o trasladar todo el equipo allí, siendo ambas soluciones un seguro motivo de disputa[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/lasombradelhelicoptero/2015/09/instalando-debian-jessie"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Enrique Bravo</dc:creator>
    <dc:date>2015-09-14T16:01:15Z</dc:date>
  </entry>
  <entry>
    <title>Aptana Studio, un gran IDE para desarrollo</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/09/aptana-studio-un-gran-ide-para-desarrollo" />
    <category term="html" />
    <category term="blog-stack" />
    <category term="aptana-studio" />
    <category term="programacion" />
    <category term="php" />
    <category term="linux" />
    <category term="gnu" />
    <category term="eclipse" />
    <category term="gpl" />
    <category term="ajax" />
    <category term="programas" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-09-14T13:11:07Z</updated>
    <published>2015-09-14T13:11:07Z</published>
    <content type="html">&lt;p&gt;El artículo de hoy va dedicado a los desarrolladores ya que hablaré de Aptana Studio, una potente IDE, multiplataforma, que es capaz de dar soporte a lenguajes como PHP, Python, Ruby, Ajax y un... La entrada Aptana Studio, un gran IDE para desarrollo aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/09/aptana-studio-un-gran-ide-para-desarrollo"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-09-14T13:11:07Z</dc:date>
  </entry>
</feed>

