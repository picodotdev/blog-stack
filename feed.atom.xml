<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2016-04-19T08:02:42Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2016-04-19T08:02:42Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Ramificar el pipeline de ASP.NET Core con Map() y MapWhen()</title>
    <link rel="alternate" href="http://feedproxy.google.com/~r/vnf/~3/7bdHrfnSfQk/ramificar-el-pipeline-de-aspnet-core.html" />
    <category term="aspnetcoremvc" />
    <category term="aspnetcore" />
    <category term="middlewares" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2016-04-19T07:48:03Z</updated>
    <published>2016-04-19T07:05:00Z</published>
    <content type="html">&lt;p&gt;Al representar gráficamente el pipeline de ASP.NET Core, lo habitual es hacerlo como una tubería única en las que colocamos estratégicamente los middlewares que procesarán las peticiones que entrarán por ella. Incluso a nivel de código, la inserción de middlewares se realiza normalmente invocando métodos del tipo UseXXX() sobre la instancia de IApplicationBuilder que recibimos en el método Configure() de la clase Startup de nuestras aplicaciones ASP.NET Core. Esto parece dar a entender que el pipeline es lineal, y que todas las peticiones serán procesadas de la misma forma y por los mismos middlewares, salvo que alguno de ellos decida cortocircuitar la petición. Sin embargo, aunque eso será lo más frecuente, no es obligatoriamente así. Ya desde los tiempos de Katana tenemos la posibilidad de[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://feedproxy.google.com/~r/vnf/~3/7bdHrfnSfQk/ramificar-el-pipeline-de-aspnet-core.html"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2016-04-19T07:05:00Z</dc:date>
  </entry>
  <entry>
    <title>openSUSE Tumbleweed revisión semanas 14 y 15 de 2016</title>
    <link rel="alternate" href="https://victorhckinthefreeworld.wordpress.com/2016/04/18/opensuse-tumbleweed-revision-semanas-14-y-15-de-2016/" />
    <category term="opensuse" />
    <category term="tumbleweed" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2016-04-18T10:34:28Z</updated>
    <published>2016-04-18T10:34:28Z</published>
    <content type="html">&lt;p&gt;openSUSE Tumbleweed es una distribución “Rolling Release” en desarrollo continuo. Aqui puedes estar al tanto de las últimas novedades. Una nueva revisión de lo que ha acontecido esta semana en openSUSE Tumbleweed la versión “rolling release” o de actualización continua de la distribución de GNU/Linux openSUSE. El anuncio oficial lo puedes leer en el blog de Dominique Leuenberger, en este enlace: http://dominique.leuenberger.net/blog/2016/04/opensuse-tumbleweed-review-of-the-weeks-201614-15/ Las ISO’s son instalables, pero si ya estás disfrutando de openSUSE Tumbleweed en tu equipo, simplemente deberás actualizarlo mediante “zypper up” para disfrutar de esas actualizaciones. Parece que después de que después de que grandes cambios como Gnome 3.20 o Plasma 5.6 ya esten disponibles en Tumbleweed[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://victorhckinthefreeworld.wordpress.com/2016/04/18/opensuse-tumbleweed-revision-semanas-14-y-15-de-2016/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2016-04-18T10:34:28Z</dc:date>
  </entry>
  <entry>
    <title>Cómo procesar múltiples argumentos de entrada en scripts para Bash</title>
    <link rel="alternate" href="http://totaki.com/poesiabinaria/2016/04/como-procesar-multiples-argumentos-de-entrada-en-scripts-para-bash/" />
    <category term="linea" />
    <category term="condicionales" />
    <category term="argumentos" />
    <category term="comandos" />
    <category term="consola" />
    <category term="utilidades" />
    <category term="bash" />
    <category term="bucles" />
    <category term="entrada" />
    <category term="linux" />
    <category term="cantidad" />
    <category term="dash" />
    <category term="script" />
    <category term="shift" />
    <category term="desplazamiento" />
    <category term="array" />
    <category term="programa" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2016-04-18T08:22:35Z</updated>
    <published>2016-04-18T08:22:35Z</published>
    <content type="html">&lt;p&gt;Los argumentos de entrada de un programa nos sirven para modificar ligeramente el comportamiento de un programa dentro de las opciones que nos permita su desarrollador. Y, sobre todo, siempre que trabajamos con programas para consola, es muy buena idea permitir que nuestros usuarios puedan utilizar funciones extras o especificar sus propios parámetros de trabajo sin necesidad de modificar el programa. Si trabajáis con lenguajes como C o C++ podéis leer algo de información al respecto: Cosas que damos por hechas en C/C++: int main(int argc, char *argv[]) Cómo gestionar los parámetros de nuestros programas con getopt en C Cómo gestionar los parámetros de un programa en C (parte 2: parámetros largos) Pero, cuando hacemos algún script en Bash para línea de comandos, también puede resultar muy útil,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://totaki.com/poesiabinaria/2016/04/como-procesar-multiples-argumentos-de-entrada-en-scripts-para-bash/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2016-04-18T08:22:35Z</dc:date>
  </entry>
  <entry>
    <title>Jornada vespertina de Akademy-es 2016 de Madrid</title>
    <link rel="alternate" href="http://www.kdeblog.com/jornada-vespertina-de-akademy-es-2016-de-madrid.html" />
    <category term="eventos" />
    <category term="akademy-es-2-16" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2016-04-18T08:10:41Z</updated>
    <published>2016-04-18T08:10:41Z</published>
    <content type="html">&lt;p&gt;Hoy me toca comentar la jornada vespertina de Akademy-es 2016 de Madrid, que incluyen las charlas relámpago, la foto de grupo y alguna sorpresa fuera de programa. Jornada vespertina de Akademy-es 2016 de Madrid Después de las pizzas y las tortillas (en menor proporción) empezamos con energía, y cierto retraso, las charlas de la tarde con las ligthing talks, las más digeribles de todas por ser muy cortas aunque no por ello menos interesantes. 15:00 – 16:00 Charlas relámpago Empezamos con Alex Fiestas y su “Economía del Open Source”  donde nos habla de la filosofía del Software Libre, el no-valor del mismo y el Open Source en las empresas. En realidad es una reflexión sobre el éxito del Software Libre sobre el privativo. Santiago Saavedra nos habla de “WikiToLearn” un proyecto de crear fuentes[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.kdeblog.com/jornada-vespertina-de-akademy-es-2016-de-madrid.html"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2016-04-18T08:10:41Z</dc:date>
  </entry>
  <entry>
    <title>Segundo día Akademy-es 2016 de Madrid, segunda parte</title>
    <link rel="alternate" href="http://www.kdeblog.com/segunda-dia-akademy-es-2016-de-madrid-segunda-parte.html" />
    <category term="eventos" />
    <category term="akademy-es-2-16" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2016-04-18T08:10:41Z</updated>
    <published>2016-04-18T08:10:41Z</published>
    <content type="html">&lt;p&gt;Hoy me toca hacer la segunda parte de segundo día Akademy-es 2016 de Madrid, una entrada que suelo partir en dos para que no sea demasiado extensa. En esta ocasión voy a repasar la jornada vespertina previa a la gran cena comunitaria oficial. Segundo día Akademy-es 2016 de Madrid, segunda parte   15:00 – 16:00 Charlas relámpago Empezamos con Alex Fiestas y su “Economía del Open Source”  donde nos habla de la filosofía del Software Libre, el no-valor del mismo y el Open Source en las empresas. En realidad es una reflexión sobre el éxito del Software Libre sobre el privativo. Santiago Saavedra nos habla de “WikiToLearn” un proyecto de crear fuentes de conocimiento A continuación me toca hablar de “KDE Blog” abriéndolo a la Comunidad e invitando a todo el mundo a colaborar con él. Seguimos con[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.kdeblog.com/segunda-dia-akademy-es-2016-de-madrid-segunda-parte.html"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2016-04-18T08:10:41Z</dc:date>
  </entry>
  <entry>
    <title>Enlaces interesantes 237</title>
    <link rel="alternate" href="http://feedproxy.google.com/~r/vnf/~3/9AkQnNiUmQg/enlaces-interesantes-237.html" />
    <category term="enlaces" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2016-04-18T07:10:13Z</updated>
    <published>2016-04-18T07:10:00Z</published>
    <content type="html">&lt;p&gt;Ahí van los enlaces recopilados durante la semana pasada. Espero que os resulten interesantes. :-) .Net The week in .NET – 4/12/2016 Bertrand Le Roy ¿Cuánto sabes de C# y .NET? – Soluciones al cuestionario de la Dot Net Conference EsMsdn The Nuances of Loading and Unloading Assemblies with AppDomain Mark Clifton Code Contracts Succinctly (free ebook) Dirk Strauss ASP.NET Consuming Web API Custom Validation in MVC using RestSharp Matthew P. Jones Introducción: SignalR en ASP.NET MVC Diego Bersano Exploring Prefix: A Free ASP.NET Profiling Tool Mike Brind ASP.NET MVC Pipeline: Routing Sebastián Henzenn ASP.NET MVC Localization using a Database Simon B. Modern Tech Stack for ASP.NET Apps Sam Basu ASP.Net – Ensure your Actions aren’t missing Authorization with Unit Tests Eli Weinstock-Herman Action[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://feedproxy.google.com/~r/vnf/~3/9AkQnNiUmQg/enlaces-interesantes-237.html"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2016-04-18T07:10:00Z</dc:date>
  </entry>
  <entry>
    <title>Ficheros y carpetas en un mundo de APIs Web</title>
    <link rel="alternate" href="http://feedproxy.google.com/~r/KoalitesBlog/~3/_LZI-li8eQg/" />
    <category term="webapi" />
    <category term="software-development" />
    <category term="development" />
    <category term="rest" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2016-04-18T05:06:18Z</updated>
    <published>2016-04-18T05:06:18Z</published>
    <content type="html">&lt;p&gt;Sería el año 2003 o 2004 cuando se celebró aquella reunión. En aquella época los servicios web, los de verdad, los de SOAP y WSDL, eran el no va más y yo todavía me creía lo que me contaban en las conferencias. Por tanto es normal que, cuando alguien propuso utilizar ficheros para comunicar dos sistemas, yo le mirase con cara de “madre mía, de qué siglo has salido tú” y le explicara el atraso que eso suponía. Que lo que realmente apropiado para ese escenario eran servicios web, claro. Al final el sistema se implementó con servicios web, funcionó y, de hecho, todavía sigue en producción y sin visos de ser reemplazado. Seguramente también habría funcionado dejando ficheros en carpetas, aunque la verdad es que eso no importa mucho ahora. Hoy en día, los servicios web ya no están de moda, o al[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://feedproxy.google.com/~r/KoalitesBlog/~3/_LZI-li8eQg/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2016-04-18T05:06:18Z</dc:date>
  </entry>
</feed>

