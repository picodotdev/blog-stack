<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-07-23T15:04:12Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-07-23T15:04:12Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Ubuntu: ¿actualizar o reinstalar?</title>
    <link rel="alternate" href="http://www.blogstack.info/post/lasombradelhelicoptero/2015/07/ubuntu-actualizar-o-reinstalar" />
    <category term="ubuntu" />
    <category term="tutorial" />
    <author>
      <name>Enrique Bravo</name>
    </author>
    <updated>2015-07-23T14:20:13Z</updated>
    <published>2015-07-23T14:20:13Z</published>
    <content type="html">&lt;p&gt;Vivimos estos días en España una sucesión de olas de calor que no tiene parangón. Servidor, que ya peina canas, no recuerda algo parecido y conforme pasan los días sin bajar de cuarenta grados a la sombra en el valle del Guadalquivir, son pocos los viejos del lugar que recuerdan algo siquiera parecido. Asfalto que se derrite, viento sahariano que se siente como si te fueran a incinerar, casas con finos muros que no sirven de aislante ni en verano ni en invierno y escalofríos solo de pensar en la inminente factura de electricidad por venir. Esto es Sevilla para los que vivimos instalados en la continua “tiesura”, sin posibilidad de evadirse más allá de escarceos piscineros ocasionales. Ni que decir tiene que los aparatos electrónicos de toda condición sufren mucho más en esta época. A mi equipo,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/lasombradelhelicoptero/2015/07/ubuntu-actualizar-o-reinstalar"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Enrique Bravo</dc:creator>
    <dc:date>2015-07-23T14:20:13Z</dc:date>
  </entry>
  <entry>
    <title>jQuery getScript y carga dinámica</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2015/07/jquery-getscript-y-carga-dinamica" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2015-07-23T07:19:40Z</updated>
    <published>2015-07-23T07:19:40Z</published>
    <content type="html">&lt;p&gt;Cada día necesitamos más realizar  la carga dinámica de ficheros de Javascript. Tecnologías como Require.js abordan esta problemática. Pero hay muchas situaciones cotidianas que se pueden resolver de forma más sencilla con algo como jQuery getScript. Utilizando jQuery getScript En el siguiente ejemplo se muestran dos botones  “cargar” y “operar”. El primero de ellos aparece habilitado cuando se carga la página.   El segundo de ellos aparece deshabilitado ya que necesita de un fichero de JavaScript que realiza una operación de sumar y que no hemos cargado inicialmente con la página. 

function suma (a,b) {

return a+b;
}

 Para poder habilitar el segundo botón y pulsarle hay que  cargar previamente el script de la suma.   Para realizar esta operación hay que usar jQuery y su método getScript.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2015/07/jquery-getscript-y-carga-dinamica"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2015-07-23T07:19:40Z</dc:date>
  </entry>
  <entry>
    <title>Seguridad en Aplicaciones #DevTalks #ITTalks</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/seguridad-en-aplicaciones-devtalks-ittalks" />
    <category term="web" />
    <category term="devtalks" />
    <category term="ittalks" />
    <category term="generales" />
    <category term="seguridad" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T20:23:03Z</updated>
    <published>2015-07-22T20:23:03Z</published>
    <content type="html">&lt;p&gt;Como antes habíamos hablado, no importa los controles perimetrales que coloquemos, si tenemos una aplicación vulnerable publicada, es como si dejáramos la puerta abierta a un malintencionado. Es de suma importancia que le pongamos mucha atención a la Seguridad en nuestras aplicaciones y que se fomente eldesarrollo seguro en las organizaciones. Acompáñanos a este Hangout donde Mi Persona @Jsitech y Jose Moruno Cadima @SniferL4bs, estaremos junto a Eugenia Bahit @eugeniabahit, hablando sobre Seguridad en Aplicaciones. Hablaremos sobre los puntos importantes que debemos tener en cuenta y algunas recomendaciones. La cita es el Viernes 14 de Agosto 2015, a las 8:00PM (GMT-04) Pueden Visitar la Página del Evento No se lo pierdan, Links de Interés Canal IT-Talks Site IT-Talks[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/seguridad-en-aplicaciones-devtalks-ittalks"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T20:23:03Z</dc:date>
  </entry>
  <entry>
    <title>Comprometiendo Sistemas en Otros Segmento de Red Mediante Pivoting con Metasploit</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/comprometiendo-sistemas-en-otros-segmento-de-red-mediante-pivoting-con-metasploit" />
    <category term="metasploit" />
    <category term="ethical-hacking" />
    <category term="seguridad" />
    <category term="pivoting" />
    <category term="meterpreter" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T16:09:22Z</updated>
    <published>2015-07-22T16:09:22Z</published>
    <content type="html">&lt;p&gt;En una prueba de penetración es posible que nos encontremos con más de un segmento de red y a los cuales no tenemos acceso por cualquier razón, aún cuando comprometemos un sistemas de nuestro lado es imposible llegar a esos segmentos y es en estos casos que el Pivoting nos ayuda. Pivoting es un método que podemos usar en Meterpreter que nos permite atacar otros sistemas en la misma red o en un segmento diferente, en los casos que el sistema tenga acceso a ella, a través de la consola de Meterpreter. Para que entendamos mejor la idea, si durante una prueba de penetración logramos comprometer un sistema, y necesitamos adentrarnos más en la red, podríamos usar ese sistema o equipo para acceder a otros equipos de la red o llevar a cabo a ataques a múltiples sistemas. Vamos a verlo en la práctica[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/comprometiendo-sistemas-en-otros-segmento-de-red-mediante-pivoting-con-metasploit"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T16:09:22Z</dc:date>
  </entry>
  <entry>
    <title>Recogida de Información con Snitch usando Dorks</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/recogida-de-informacion-con-snitch-usando-dorks" />
    <category term="ethical-hacking" />
    <category term="infogathering" />
    <category term="snitch" />
    <category term="seguridad" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T15:57:01Z</updated>
    <published>2015-07-22T15:57:01Z</published>
    <content type="html">&lt;p&gt;Hoy me he topado con un proyecto muy reciente que creo nos puede ser útil en una labor de Penetration Testing. Como sabemos una de las fases que ejecutamos es la de recogida de información y unas de las herramientas que usamos en los casos de estar auditando un Dominio es el mismo buscador de Google por ejemplo, haciendo uso de los Dorks. Pues el proyecto que les menciono es una herramienta en Python que automatiza un poco este proceso y se llama Snitch. Snitch es una herramienta que automatiza el proceso de recogida de información de un dominio. Usa categorías de Dork ya integrada en la herramienta y son utilizadas para recoger información de un dominio que usualmente lo encontraríamos usando los motores de búsqueda. Para obtener la herramienta solo tenemos que clonar el repo $ git clone https://github.com/Smaash/snitch[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/recogida-de-informacion-con-snitch-usando-dorks"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T15:57:01Z</dc:date>
  </entry>
  <entry>
    <title>Evadiendo Antivirus con Shellter en Kali Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/evadiendo-antivirus-con-shellter-en-kali-linux" />
    <category term="evasion" />
    <category term="metasploit" />
    <category term="shellter" />
    <category term="ethical-hacking" />
    <category term="seguridad" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T15:51:52Z</updated>
    <published>2015-07-22T15:51:52Z</published>
    <content type="html">&lt;p&gt;Casi en todos los casos cuando estamos en Labores de Pentesting, uno de nuestros dolores de cabeza son esos antivirus. Nos valemos de muchas herramientas para crear los payloads ejecutables, como veil, msfvenom y otros, cruzando los dedos para que el Antivirus no nos recoja en el proceso. Aunque es posible evadirlos, siempre lleva tiempo lograrlo. Pues el día de hoy he conocido una herramienta que nos asiste con esto, y debo decir que es bastante efectiva, estoy hablando de Shellter. Shellter es una herramienta de inyección de código dinámico. Puede ser utilizado para inyectar código en aplicaciones de Windows, actualmente solo para aplicaciones de 32 bits. Este usa un acercamiento dinámico único basada en el flujo de ejecución de la aplicación que vamos a inyectar. Características Compatible[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/evadiendo-antivirus-con-shellter-en-kali-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T15:51:52Z</dc:date>
  </entry>
  <entry>
    <title>Obteniendo Contraseñas de un Equipo Windows con Veil y Metasploit</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/obteniendo-contrasenas-de-un-equipo-windows-con-veil-y-metasploit" />
    <category term="metasploit" />
    <category term="ethical-hacking" />
    <category term="seguridad" />
    <category term="veil" />
    <category term="meterpreter" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T15:41:19Z</updated>
    <published>2015-07-22T15:41:19Z</published>
    <content type="html">&lt;p&gt;Hace un tiempo que no publicaba artículos de Hacking, pero arrancamos nuevamente con ellos. Hoy vamos a ver como podemos obtener contraseñas de Login de un equipo Windows, y las demás utilizadas en el equipo. Para esto vamos vamos a utilizar Veil-Evasion y Metasploit. Ambiente: PC con Windows 10.0.0.8 Kali Linux 10.0.0.9 Lo primero es que vamos a crear un pequeño script PowerShell que son bastante efectivos ya que no disparan el antivirus y lo vamos a crear con Veil-Evasion En Caso de que no cuente con Veil-Evasion, lo pueden clonar. $ git clone https://github.com/Veil-Framework/Veil-Evasion Acceden a la carpeta y ejecutan Veil-Evasion.py $ ./Veil-Evasion.py Ejecutamos list y tendremos una lista de Payloads. [menu&gt;&gt;]: list Vamos a Elejir el 20 20) powershell/meterpreter/rev_http En la Próxima[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/obteniendo-contrasenas-de-un-equipo-windows-con-veil-y-metasploit"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T15:41:19Z</dc:date>
  </entry>
</feed>

