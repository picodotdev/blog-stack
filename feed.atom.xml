<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-03-19T11:02:25Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-03-19T11:02:25Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Akademy-es 2015 A Coruña busca patrocinadores</title>
    <link rel="alternate" href="http://www.blogstack.info/post/kdeblog/2015/03/akademy-es-2-15-a-coruna-busca-patrocinadores" />
    <category term="akademy-es-2-15" />
    <category term="eventos" />
    <category term="akademy-es" />
    <author>
      <name>baltolkien</name>
    </author>
    <updated>2015-03-19T07:00:58Z</updated>
    <published>2015-03-19T07:00:58Z</published>
    <content type="html">&lt;p&gt;Todo evento supone siempre unos gastos: alquiler de materiales, algunos refrigerios para los asistentes, financiación de viajes de los ponentes, etc. Por este motivo, Akademy-es 2015 A Coruña busca patrocinadores con los que cubrir esos mínimo dispendios.   ¿Por qué patrocinar la Akademy-es 2015? Se esperan cerca de 80 asistentes al evento, incluyendo desarrolladores de Software Libre, miembros de la prensa y representantes de empresas. Patrocinando este evento, su organización recibirá visibilidad no solo en España, sino a nivel mundial en el campo del Software Libre.   El evento tendrá presentaciones de primer nivel de temas relativos a las nuevas tecnologías, incluyendo aplicaciones de escritorio, aplicaciones móviles, desarrollo de software y multimedia. La comunidad KDE ha presentado innovaciones[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/kdeblog/2015/03/akademy-es-2-15-a-coruna-busca-patrocinadores"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>baltolkien</dc:creator>
    <dc:date>2015-03-19T07:00:58Z</dc:date>
  </entry>
  <entry>
    <title>Cambios en el Taller de Metasploit – Desde Ya nos Unimos a Cápsulas de Seguridad Informática</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/03/cambios-en-el-taller-de-metasploit-desde-ya-nos-unimos-a-capsulas-de-seguridad-informatica" />
    <category term="metasploit" />
    <category term="ethical-hacking" />
    <category term="seguridad" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-03-19T02:03:36Z</updated>
    <published>2015-03-19T02:03:36Z</published>
    <content type="html">&lt;p&gt;Hace unas semanas habiamos iniciado aquí en el blog el Taller de Metasploit, donde en una serie de entradas prentendíamos introducirlos a todos al Framework y como llevar a cabo Test de Penetración utilizándolo. Aquí un listado de todo lo contiene el taller: Preparando nuestro entorno de Práctica Introducción a Metasploit Recogida de Información con Metasploit Módulos auxiliares Escaneo de Vulnerabilidad (Integración con Nexpose y Nessus) Ejecutando un Exploit Meterpreter y Post-Explotación Técnicas de Evasión Otras Herramientas que trabajan en conjunto con Metasploit Algo más que se nos ocurra Ya creamos dos entradas hablando un poco de Metasploit y otra llevando a cabo Tareas de Recogida de Información. Ahora el cambio del que les hablo es el siguente, Ya que mi amigo SniferL4bs creó lo que[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/03/cambios-en-el-taller-de-metasploit-desde-ya-nos-unimos-a-capsulas-de-seguridad-informatica"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-03-19T02:03:36Z</dc:date>
  </entry>
  <entry>
    <title>Aplicación web Java autocontenida con Tomcat Embedded</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/03/aplicacion-web-java-autocontenida-con-tomcat-embedded" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-03-18T21:00:00Z</updated>
    <published>2015-03-14T09:32:20Z</published>
    <content type="html">&lt;p&gt;La tendencia de las aplicaciones es que sean construidas como múltiples servicios pequeños que colaboran entre si en vez de consistir en una aplicación grande desplegada en un servidor de aplicaciones. La aparición de nuevas tecnologías como Docker facilitan la construcción y despliegue de los microservicios. Los microservicios con su máxima de bajo acoplamiento y alta cohesión tratan de incluir todo lo necesario para funcionar evitando las dependencias de cualquier tipo de elemento fuera de su ámbito no incluyendo el uso de otros servicios. Con Docker es posible desplegarlos en cualquier máquina que disponga del servicio, esto evita problemas de configuración al pasar la aplicación de un entorno de desarrollo a uno de producción ya que las características del entorno de desarrollo y el de[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/03/aplicacion-web-java-autocontenida-con-tomcat-embedded"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-03-14T09:32:20Z</dc:date>
  </entry>
  <entry>
    <title>Los diseños del hardware deberían ser libres.</title>
    <link rel="alternate" href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/03/los-disenos-del-hardware-deberian-ser-libres" />
    <category term="traduccion" />
    <category term="richard-stallman" />
    <category term="hardware-libre" />
    <category term="software-libre" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2015-03-18T18:46:43Z</updated>
    <published>2015-03-18T18:46:43Z</published>
    <content type="html">&lt;p&gt;Segunda parte del artículo de Richard Stallman sobre la necesidad de desarrollar diseños libres para el hardware. Imagen: Biser Todorov para Wikimedia   Hace unos días pudiste leer en mi blog la traducción realizada por el amigo Jcsl sobre el artículo de Richard Stallman para la web Wired, que se preguntaba sobre los motivos por los que necesitamos hardware libre. Puedes leerlo en este enlace: http://www.wired.com/2015/03/need-free-digital-hardware-designs/ Hoy yo mismo he traducido el segundo artículo de Stallman que define la manera de crear y licenciar esos diseños libres. El artículo original en inglés lo puedes leer en el siguiente enlace: http://www.wired.com/2015/03/richard-stallman-how-to-make-hardware-designs-free El artículo original está escrito por Richard Stallman con la siguiente[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/03/los-disenos-del-hardware-deberian-ser-libres"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2015-03-18T18:46:43Z</dc:date>
  </entry>
  <entry>
    <title>Crear una aplicación python bottle en Openshift</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/03/crear-una-aplicacion-python-bottle-en-openshift" />
    <category term="web" />
    <category term="bottle" />
    <category term="openshift" />
    <category term="general" />
    <category term="python" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-03-18T15:26:28Z</updated>
    <published>2015-03-18T15:26:28Z</published>
    <content type="html">&lt;p&gt;En las entradas anteriores, hemos visto como crear una aplicación web con python usando el framework Bottle (1ª parte y 2ª parte). En la entrada actual vamos a estudiar como desplegar una aplicación bottle en una infraestructura PaaS, concretamente en OpenShift. De forma resumida el procedimiento será crear una aplicación en OpenShift con el componente (cartridge) python 2.7, e inicializar esta aplicación con la librería de bottle y una distribución del framework configurado para que funcione en OpenShift. Creación de la aplicación OpenShift Vamos a dar de alta un nuevo proyecto OpenShift, como componente software vamos a instalar el cartridge Python 2.7. A continuación vamos a configurar la nueva aplicación, indicando su nombre, y el repositorio git donde podemos obtener la versión de bottle[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/03/crear-una-aplicacion-python-bottle-en-openshift"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-03-18T15:26:28Z</dc:date>
  </entry>
  <entry>
    <title>Sonidos de un viejo disco duro IDE realizando tareas</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/03/sonidos-de-un-viejo-disco-duro-ide-realizando-tareas" />
    <category term="ide" />
    <category term="comandos" />
    <category term="ext" />
    <category term="mkfs" />
    <category term="formateo" />
    <category term="ejecutar" />
    <category term="sistema" />
    <category term="disco" />
    <category term="dd" />
    <category term="tareas" />
    <category term="copy" />
    <category term="nostalgia" />
    <category term="operativo" />
    <category term="archivos" />
    <category term="duro" />
    <category term="sonido" />
    <category term="volcado" />
    <category term="general" />
    <category term="uso" />
    <category term="sata" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-03-18T09:35:22Z</updated>
    <published>2015-03-18T09:35:22Z</published>
    <content type="html">&lt;p&gt;Ingredientes: Un disco duro viejo, un adaptador USB, un micrófono y algunos comandos para probar. Me pareció una cosa muy friki y bastante chula. Un disco duro que salió al mercado en Enero del año 2000 (¡¡15 años!!) y todavía funciona. No sabría decir si como el primer día, pero funciona bastante bien, aunque a estas alturas, como no tengamos a disposición un adaptador especial IDE sería muy difícil echarlo a andar. De la época en la que 20.4Gb era muchísimo e instalábamos Windows en los ordenadores y no llegaba a ocupar 1Gb, y sobre todo, de la época en la que sabíamos a oídas si el ordenador estaba haciendo algo o no (aunque los primeros SATA hacían más ruido), en la que, cuando apagabas la corriente del ordenador, se podía apreciar el silencio puro. The post Sonidos de un viejo disco duro[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/03/sonidos-de-un-viejo-disco-duro-ide-realizando-tareas"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-03-18T09:35:22Z</dc:date>
  </entry>
  <entry>
    <title>HTML5 Web Workers</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2015/03/html5-web-workers" />
    <category term="html5" />
    <category term="javascript" />
    <category term="html5-conceptos" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2015-03-18T07:58:34Z</updated>
    <published>2015-03-18T07:58:34Z</published>
    <content type="html">&lt;p&gt;Una de las características que poco a poco comenzaremos a utilizar más con HTML5 es el manejo de HTML5 Web Workers. ¿Qué es un Web Worker? . Un Web Worker es una tarea que se ejecuta de forma paralela a la ejecución de nuestro código de JavaScript y su objetivo es liberar de carga al motor de Javascript principal que es el encargado de responder a los eventos y acciones del usuario. Vamos a ver un ejemplo práctico. 

&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery-1.11.1.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="jquery-1.11.1.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="lowdash.js"&gt;
&lt;/script&gt;

&lt;script type="text/javascript"&gt;

$(document).ready(function() {
$("#pulsar").click(function() {

var mensaje="el boton pulsar";

var fecha= new Date();
while (new Date() - fecha[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2015/03/html5-web-workers"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2015-03-18T07:58:34Z</dc:date>
  </entry>
</feed>

