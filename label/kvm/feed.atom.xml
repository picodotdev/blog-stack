<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-02-27T17:34:11Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-02-27T17:34:11Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Configuración de red en KVM en modo public bridge</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/09/configuracion-de-red-en-kvm-en-modo-public-bridge" />
    <category term="opensuse" />
    <category term="bridge" />
    <category term="blog-stack" />
    <category term="virtualizacion" />
    <category term="kvm" />
    <category term="redhat" />
    <category term="debian" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-09-30T09:28:52Z</updated>
    <published>2014-09-30T09:26:13Z</published>
    <content type="html">&lt;p&gt;KVM es una fantástica alternativa libre si deseamos crear una infraestructura de virtualización con software no privativo. Hace ya un tiempo hablamos de su funcionamiento y de cómo crear una máquina virtual. Hoy trataremos la configuración de la red en KVM. Por defecto al instalar KVM en nuestro sistema nos creará una tarjeta de red virtual que usarán nuestras máquinas virtuales, usando un NAT para comunicarse con el exterior, con una red propia, diferente de nuestra red local. En la mayoría de los casos he necesitado configurar un public bridge para que las máquinas virtuales usen los rangos de IP de mi red local, ya sea para uso interno o DMZ. No es excesivamente compliado, supongamos que tenemos dos tarjetas de red (interfaces) instaladas en nuestro servidor de infraestructura (host), en[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/09/configuracion-de-red-en-kvm-en-modo-public-bridge"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-09-30T09:26:13Z</dc:date>
  </entry>
  <entry>
    <title>Virtualizando con KVM</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/05/virtualizando-con-kvm" />
    <category term="xen" />
    <category term="blog-stack" />
    <category term="virtualizacion" />
    <category term="kvm" />
    <category term="comandos" />
    <category term="virsh" />
    <category term="vmware" />
    <category term="virtualbox" />
    <category term="gnu" />
    <category term="debian" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-09-26T12:19:12Z</updated>
    <published>2014-05-15T14:41:31Z</published>
    <content type="html">&lt;p&gt;Virtualizar servidores está al orden del día, ya sea con vmWare, Xen o VirtualBox. Hoy hablaramos de la virtualización completa para Linux KVM o “Kernel-based Virtual Machine”, que usa sólo software libre. KVM está basada en dos partes, una formadada por un módulo de núcleo, llamado “kvm.ko” y las herramientas del espacio del usuario. Está disponible a partir de la versión del kernel 2.6.20. Contiene las extensiones de virtualización Intel VT o AMD-V. Instalación Hemos realizado las pruebas en un máquina con procesador I7 y un sistema operativo GNU/Linux Debian 7 Wheezy. Como primer paso tenemos que comprobar que nuestro ordenador o computadora da soporte a KVM. Por ello visualizaremos el archivo /proc/cpuinfo, para que nos de la información, aplicando el filtro más conveniente. Si tenemos[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/05/virtualizando-con-kvm"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-05-15T14:41:31Z</dc:date>
  </entry>
  <entry>
    <title>Instalar VMware-Tools en servidor virtual GNU Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/09/instalar-vmware-tools-en-servidor-virtual-gnu-linux" />
    <category term="blog-stack" />
    <category term="virtualizacion" />
    <category term="kvm" />
    <category term="comandos" />
    <category term="sistemas-operativos" />
    <category term="ubuntu" />
    <category term="vmware" />
    <category term="vmware-tools" />
    <category term="vmware-workstation" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-09-26T07:10:59Z</updated>
    <published>2014-09-18T15:00:19Z</published>
    <content type="html">&lt;p&gt;Lo primero que nos damos cuenta cuando instalamos un servidor GNU Linux virtualizado, utilizando cualquiera de las plataformas VMware, es que debemos de instalar las herramietas VMware-tools. Hoy veremos como hacerlo. En otros artículo hemos tratado de sistemas libres como KVM, creo que también es interesante que se traten otros sistemas que de una u otra manera tiene relación con GNU/Linux, aunque en parte o totalmente sean privativos. Para el artículo he utilizado el sistema operativo virtual Ubuntu 14.04 LTS sobre VMware Workstation. Cómo podéis ver en la imagen: Al seleccionar “Install VMware Tools” nos dirá que se instalará desde un CD en el sistema operativo virtualizado, le diremos que sí. Si tenemos algún medio utilizandose en la misma unidad de CD se desconectará. Nos aparecerá el[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/09/instalar-vmware-tools-en-servidor-virtual-gnu-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-09-18T15:00:19Z</dc:date>
  </entry>
  <entry>
    <title>Virtualización con KVM y Trisquel</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/08/virtualizacion-con-kvm-y-trisquel" />
    <category term="trisquel" />
    <category term="blog-stack" />
    <category term="virtualizacion" />
    <category term="kvm" />
    <category term="gnu" />
    <category term="linux" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-08-18T13:16:00Z</updated>
    <published>2014-08-18T13:16:00Z</published>
    <content type="html">&lt;p&gt;Hace ya algún tiempo hablamos de como instalar el conjunto de herramientas en nuestro GNU/Linux, para poder crear y gestionar máquinas virtuales con KVM. Hoy avanzaremos más en el proceso, y crearemos una máquina virtual. Usaremos el sistema libre Trisquel, en su versión 6. Primero de todo tenemos que comprobar que nuestro procesador soporta la virtualización además de instalar los paquetes necesarios, podemos seguir las instrucciones de éste enlace: Virtualizando con KVM Si todo ha ido bien, ya podemos empezar a virtualizar. Como he comentado al principio del artículo me he descargado la imagen ISO del sistema operativo totalmente libre GNU/Linux Trisquel, en su versión 6. Se me olvidaba, el host o máquina donde correrá la máquina virtual es un sistema ElementaryOS, en su versión de 64 bits.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/08/virtualizacion-con-kvm-y-trisquel"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-08-18T13:16:00Z</dc:date>
  </entry>
  <entry>
    <title>Cambiar nombre de máquina (host) en GNU/Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/04/cambiar-nombre-de-maquina-host-en-gnu-linux" />
    <category term="qemu" />
    <category term="debian" />
    <category term="hosts" />
    <category term="kvm" />
    <category term="shell" />
    <category term="hostname" />
    <category term="sistemas-operativos" />
    <category term="comandos" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-04-01T13:59:44Z</updated>
    <published>2014-04-01T13:58:31Z</published>
    <content type="html">&lt;p&gt;Estoy preparando un artículo de virtualización con QEMU/KVM y me he encontrado con la situación de tener que clonar máquinas, y una vez ya clonadas, cambiarles la configuración. Uno de estos cambios es referente al nombre de la máquina. Ya que si clono un host que se llama vDebian1 a otro vDebian2, tendré que modifcar varios archivos en la segunda máquina, para que no tenga el nombre de la primera. Al lío, hay que modificar dos archivos, ubicados ambos en la carpeta /etc El primero es /etc/hosts Por defecto la configuración suele se así: 127.0.0.1 localhost 127.0.1.1 nombredemaquina Tendré que modificar la segunda línea: 127.0.1.1 vDebian2 Pasemos al siguiente fichero a modificar, es decir, /etc/hostname El nombre de la máquina era: vDebian1 Sólo tuve que cambiarlo por el que yo quería: vDebian2[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/04/cambiar-nombre-de-maquina-host-en-gnu-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-04-01T13:58:31Z</dc:date>
  </entry>
</feed>

