<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2016-03-28T06:02:13Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2016-03-28T06:02:13Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Minimal Router: un router minimalista para aplicaciones SPA</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2016/03/minimal-router-un-router-minimalista-para-aplicaciones-spa" />
    <category term="javascript" />
    <category term="development" />
    <category term="minimal-router" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2016-03-28T05:06:10Z</updated>
    <published>2016-03-28T05:06:10Z</published>
    <content type="html">&lt;p&gt;En el último post explicaba cómo me gustaría que fuese un router para aplicaciones SPA y diseñaba un router extremadamente simple pero que se ajustaba bastante a lo que creo que debería hacer una librería de este tipo. Mi intención original era quedarme ahí, pero disfrutar de unos días de descanso en la España profunda me ha permitido entretenerme implementando una primera versión. El resultado es Minimal Router (Miguel, gracias por el nombre), y en este post vamos a aprovechar para ver cómo está implementado y, sobre todo, por qué está implementado así. Igual que me parecía entretenido analizar las decisiones de diseño, creo que puede ser entretenido analizar las decisiones de implementación, pese al componente subjetivo que tienen este tipo de decisiones. El diseño del API En el post con[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2016/03/minimal-router-un-router-minimalista-para-aplicaciones-spa"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2016-03-28T05:06:10Z</dc:date>
  </entry>
  <entry>
    <title>Introducción a Immutable.js</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2016/03/introduccion-a-immutable-js" />
    <category term="js-frameworks" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2016-03-22T10:02:00Z</updated>
    <published>2016-03-22T10:02:00Z</published>
    <content type="html">&lt;p&gt;Immutable.js es una librería de JavaScript que cada día este cogiendo más empuje. La librería aporta un conjunto de tipos de abstractos de datos que son Immutables. ¿Qué quiere decir esto exactamente?. Quiere decir que una vez creado cada uno de los objetos , estos jamás son modificados. En un principio esto parece algo poco […] La entrada Introducción a Immutable.js aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2016/03/introduccion-a-immutable-js"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2016-03-22T10:02:00Z</dc:date>
  </entry>
  <entry>
    <title>Diseñando un router para aplicaciones SPA</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2016/03/disenando-un-router-para-aplicaciones-spa" />
    <category term="react-router" />
    <category term="javascript" />
    <category term="development" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2016-03-21T05:06:17Z</updated>
    <published>2016-03-21T05:06:17Z</published>
    <content type="html">&lt;p&gt;Desde que ReactJS se convirtió en mi librería por defecto para desarrollar aplicaciones en Javascript he disfrutado y padecido una de sus características: la libertad para elegir con qué componentes trabajas. Concretamente, la parte de routing ha sido un poco delicada y, aunque inicialmente React-Router me gustó mucho, sus sucesivos (y en mi opinión innecesarios) cambios de API han acabado por cansarme. Existen muchos otros routers disponibles para aplicaciones Javascript, pero antes de empezar a probarlos a ciegas, quiero hacer un experimento de desarrollo ficción y pensar cómo me gustaría que fuese un router. No digo que esto acabe en el desarrollo de otro router más (aunque nunca se sabe), pero al menos como ejercicio de diseño puede ser curioso. Incluso si no te interesa mucho el tema de[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2016/03/disenando-un-router-para-aplicaciones-spa"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2016-03-21T05:06:17Z</dc:date>
  </entry>
  <entry>
    <title>JavaScript Memorization</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2016/03/javascript-memorization" />
    <category term="js-frameworks" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2016-03-03T08:00:57Z</updated>
    <published>2016-03-03T08:00:57Z</published>
    <content type="html">&lt;p&gt;¿Qué es JavaScript Memorization y para que sirve?. El concepto de Memorization hace referencia a como podemos en JavaScript modificar el comportamiento de una función para que sus resultados se cacheen. Esto en un principio puede sonar algo raro pero vamos a ver un ejemplo que nos ayude a clarificarlo. Supongamos que disponemos de un […] La entrada JavaScript Memorization aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2016/03/javascript-memorization"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2016-03-03T08:00:57Z</dc:date>
  </entry>
  <entry>
    <title>RxJs y la  programación reactiva.</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2016/02/rxjs-y-la-programacion-reactiva" />
    <category term="js-frameworks" />
    <category term="javascript" />
    <category term="js-tips" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2016-02-17T07:50:37Z</updated>
    <published>2016-02-17T07:50:37Z</published>
    <content type="html">&lt;p&gt;RxJS es una de las librerías JavaScript que cada día vamos a usar más y uno de los representantes de la programación reactiva  .¿Qué es la programación reactiva?.  La programación reactiva es un nuevo paradigma orientado a programar basado en flujos de datos que son los encargados de transmitir los cambios a nuestra aplicación . De […] La entrada RxJs y la programación reactiva. aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2016/02/rxjs-y-la-programacion-reactiva"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2016-02-17T07:50:37Z</dc:date>
  </entry>
  <entry>
    <title>Por qué es importante Flux y por qué (probablemente) no debes usarlo</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2016/02/por-que-es-importante-flux-y-por-que-probablemente-no-debes-usarlo" />
    <category term="flux" />
    <category term="javascript" />
    <category term="development" />
    <category term="reactjs" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2016-02-01T05:06:23Z</updated>
    <published>2016-02-01T05:06:23Z</published>
    <content type="html">&lt;p&gt;Flux es el patrón (o la arquitectura, según se mire) de moda. Normal, si tienes en cuenta que funciona muy bien con React, React es la librería de moda en Javascript, y Javascript es el lenguaje de moda (no, Elixir está bien pero no está tan de moda como Javascript). Como siempre que algo se pone de moda, hay mucha gente escribiendo sobre Flux y mucho incauto usando Flux en situaciones donde, posiblemente, no sea la mejor opción. En este post vamos a intentar conocer un poco mejor lo que hay detrás de Flux, por qué es importante conocer este patrón, y, lo fundamental: por qué no debemos lanzarnos a implementarlo en nuestra próxima aplicación. OJO: con la cantidad de buzzwords de este post es probable que acabe bien posicionado en Google y llegues desde allí. Si esperas encontrar un tutorial[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2016/02/por-que-es-importante-flux-y-por-que-probablemente-no-debes-usarlo"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2016-02-01T05:06:23Z</dc:date>
  </entry>
  <entry>
    <title>AngularJs paso a paso en 10 videos cortos</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2016/01/angularjs-paso-a-paso-en-1-videos-cortos" />
    <category term="channel9" />
    <category term="javascript" />
    <category term="angujarjs" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2016-01-24T15:01:00Z</updated>
    <published>2016-01-24T15:01:00Z</published>
    <content type="html">&lt;p&gt;Alentado por la posibilidad con la que contamos ahora los MVPs, hice una serie de videos sobre AngularJs de corta duración (entre 3  y 7 minutos) sobre los temás que considero más importantes. Acá van los links: Introducción a AngularJs Inicialización Modelo Controller Iteraciones Eventos Filtros Servicios Rutas Directivas AJAX y promesas Nos leemos![...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2016/01/angularjs-paso-a-paso-en-1-videos-cortos"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2016-01-24T15:01:00Z</dc:date>
  </entry>
</feed>

