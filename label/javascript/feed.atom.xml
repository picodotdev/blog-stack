<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-12-29T13:02:21Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-12-29T13:02:21Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>[VIDEO] Unit testing en Javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/12/video-unit-testing-en-javascript" />
    <category term="channel9" />
    <category term="javascript" />
    <category term="tdd" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2015-12-29T13:49:00Z</updated>
    <published>2015-12-29T13:49:00Z</published>
    <content type="html">&lt;p&gt;Muy contento por mi primera publicación en Channel9, en este caso como parte de una serie de videos muy cortos explicando temas puntuales.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2015/12/video-unit-testing-en-javascript"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2015-12-29T13:49:00Z</dc:date>
  </entry>
  <entry>
    <title>Cómo sobrevivir a Javascript (e incluso disfrutar con él)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2015/12/como-sobrevivir-a-javascript-e-incluso-disfrutar-con-el" />
    <category term="software-development" />
    <category term="javascript" />
    <category term="development" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2015-12-14T05:06:37Z</updated>
    <published>2015-12-14T05:06:37Z</published>
    <content type="html">&lt;p&gt;Javascript se le atraganta a mucha gente. Como lenguaje y como plataforma. A estas alturas todos conocemos sus peculiaridades como lenguaje y, aunque le tenemos especial cariño a la coerción de tipos y al significado de this, esas partes de Javascript son más o menos manejables una vez que te acostumbras. Lo que más nos cuesta, al menos a los que estamos más acostumbrados a otro tipo de lenguajes y plataformas, es la filosofía detrás del lenguaje y la forma en que evoluciona el ecosistema de librerías, frameworks y herramientas. Nos empeñamos en tratarlo como si fuese Java o C#, y como me dijeron hace tiempo: Javascript está bien cuando no lo tratas como el hermano retrasado de Java En este post vamos a ver una serie de consejos que nos permitan sobrevivir al desarrollo con Javascript e incluso[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2015/12/como-sobrevivir-a-javascript-e-incluso-disfrutar-con-el"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2015-12-14T05:06:37Z</dc:date>
  </entry>
  <entry>
    <title>Ni grunt, ni gulp: solo npm</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2015/12/ni-grunt-ni-gulp-solo-npm" />
    <category term="javascript" />
    <category term="development" />
    <category term="gulp" />
    <category term="grunt" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2015-12-07T05:06:17Z</updated>
    <published>2015-12-07T05:06:17Z</published>
    <content type="html">&lt;p&gt;Reconozco que los scripts de compilación son una de esas cosas que me entretienen mucho. Le doy mucha importancia a automatizar todos los procesos que me aburren y no me importa invertir tiempo en desarrollar scripts o pequeñas aplicaciones que me faciliten mi trabajo diario. Dentro del mundo Javascript y todas las herramientas basadas en node para front end, las opciones más habituales para automatizar tareas son grunt y gulp de los que ya hemos hablado unas cuantas veces por aquí, pero últimamente cada vez encuentro más proyectos con un enfoque más minimalista basado en scripts de npm. Los scripts de npm Si estás utilizando npm como gestor de paquetes para instalar herramientas y librerías (cosa que deberías hacer incluso si sólo haces desarrollo front end, y más ahora que bower tiene un[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2015/12/ni-grunt-ni-gulp-solo-npm"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2015-12-07T05:06:17Z</dc:date>
  </entry>
  <entry>
    <title>Clases, objetos, funciones e Information Hidding</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2015/11/clases-objetos-funciones-e-information-hidding" />
    <category term="clojure" />
    <category term="javascript" />
    <category term="development" />
    <category term="c" />
    <category term="design-patterns" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2015-11-16T05:06:41Z</updated>
    <published>2015-11-16T05:06:41Z</published>
    <content type="html">&lt;p&gt;Hablaba hace unos días en twitter con Pablo Iglesias (el de verdad, no el otro, que ya tuve bastante de políticos al hablar de viejos de 30 años) sobre los mecanismos que existen en C# para controlar la visibilidad de atributos, propiedades y métodos. A mi siempre me ha resultado curioso que en lenguaje más rígido como C# fuese más complicado (o menos idiomático) crear cosas realmente privadas dentro de una clase, y a Pablo no le gustaba mucho que el encapsulado se hiciese a nivel de clase, en lugar de a nivel de objeto. Es un tema entretenido para dedicarle un rato y en este post vamos a ver qué nos ofrece C# (o casi cualquier lenguaje basado en clases, todos son muy similares) para ocultar información y cuál es el enfoque en otros lenguajes. Privacidad con clases Todos conocemos de sobre[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2015/11/clases-objetos-funciones-e-information-hidding"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2015-11-16T05:06:41Z</dc:date>
  </entry>
  <entry>
    <title>jQuery Promise y AJAX</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2015/11/jquery-promise-y-ajax" />
    <category term="jquery" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2015-11-12T08:47:48Z</updated>
    <published>2015-11-12T08:47:48Z</published>
    <content type="html">&lt;p&gt;jQuery Promise es uno de los conceptos que cuesta más entender cuanto de trabajamos con Ajax. Sin embargo sino entendemos este concepto será muy difícil desarrollar aplicaciones Ajax que sean flexibles y reutilizables. Vamos a mostrar un ejemplo que nos ayude a entender mejor las cosas . Supongamos que disponemos de un servidor que nos […] La entrada jQuery Promise y AJAX aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2015/11/jquery-promise-y-ajax"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2015-11-12T08:47:48Z</dc:date>
  </entry>
  <entry>
    <title>Cómo se usa IndexedDB</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2015/10/como-se-usa-indexeddb" />
    <category term="javascript" />
    <category term="development" />
    <category term="indexeddb" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2015-10-19T05:06:09Z</updated>
    <published>2015-10-19T05:06:09Z</published>
    <content type="html">&lt;p&gt;En el post anterior hicimos una introducción rápida a IndexedDB, una base de datos NoSQL que podemos utilizar para almacenar información localmente en el navegador cuando desarrollamos aplicaciones web. Con lo que vimos en ese post deberíamos tener ya una idea de que IndexedDB se organiza alrededor de “colecciones” de objectos llamadas objectStores en las que guardamos objetos asociados a una clave a partir de la cual podemos recuperar el objeto, y que además podemos definir índices que nos ayuden a recuperar objetos a partir de otros valores que no sean la clave. En este post vamos a ver con un poco más de detalle como se realizan estas operaciones de lectura y escritura en la base de datos. No vamos a llegar un nivel muy detallado pero por lo menos podremos tener unos cónocimientos básicos[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2015/10/como-se-usa-indexeddb"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2015-10-19T05:06:09Z</dc:date>
  </entry>
  <entry>
    <title>Introducción a React.js</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2015/10/introduccion-a-react-js" />
    <category term="javascript" />
    <category term="js-framworks" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2015-10-16T11:43:46Z</updated>
    <published>2015-10-16T11:43:46Z</published>
    <content type="html">&lt;p&gt;React.js es una librería de JavaScript que se encuentra en un momento de ebullición. El año pasado ocurrió con Angular.js y este año le toca a React.js . ¿Qué diferencia React.js de Angular.js?. La diferencia fundamental es que mientras que Angular.js es un framework MVC que se encarga de hacer prácticamente todo.     React.js […] La entrada Introducción a React.js aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2015/10/introduccion-a-react-js"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2015-10-16T11:43:46Z</dc:date>
  </entry>
</feed>

