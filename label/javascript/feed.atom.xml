<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2014-09-05T00:21:20Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2014-09-05T00:21:20Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Utilizar Chart.js con Knockout.js</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2014/08/utilizar-chart-js-con-knockout-js" />
    <category term="development" />
    <category term="knockoutjs" />
    <category term="chartjs" />
    <category term="javascript" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2014-08-25T05:06:27Z</updated>
    <published>2014-08-25T05:06:27Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Dentro del ca&amp;oacute;tico vibrante mundo de las librer&amp;iacute;as para Javascript, existen muchas alternativas para mostrar gr&amp;aacute;ficos en pantalla, pero la que m&amp;aacute;s me gusta, por su equilibro entre facilidad de uso y vistosidad de resultados es &lt;a href="http://www.chartjs.org/"&gt;chart.js&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Micro introducci&amp;oacute;n a Chart.js&lt;/h3&gt; 
&lt;p&gt;En la completa &lt;a href="http://www.chartjs.org/docs/"&gt;documentaci&amp;oacute;n de chart.js&lt;/a&gt; pod&amp;eacute;is encontrar informaci&amp;oacute;n de sobra para manejarla con soltura, pero para que os hag&amp;aacute;is una idea, para mostrar un gr&amp;aacute;fico de tarta t&amp;iacute;pico s&amp;oacute;lo hace falta el siguiente c&amp;oacute;digo (pod&amp;eacute;is &lt;a href="http://jsfiddle.net/htx9qg5v/"&gt;jugar con &amp;eacute;l en jsfiddle)&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;
&amp;lt;canvas id=&amp;quot;sales-chart&amp;quot; width=&amp;quot;400&amp;quot; height=&amp;quot;400&amp;quot;&amp;gt;&amp;lt;/canvas&amp;gt;
&lt;/pre&gt; 
&lt;pre&gt;
var context = document.getElementById('sales-chart').getContext('2d');
var chart = new Chart(context).Pie([
  { label: 'Red', value: 75, color: '#F7464A' },
  { label: 'Not-Red', value: 23, color: '#4D5360' }
]);
&lt;/pre&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2014/08/utilizar-chart-js-con-knockout-js"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2014-08-25T05:06:27Z</dc:date>
  </entry>
  <entry>
    <title>¿Que es Spring Framework? y un poco de Javascript para GenBetaDev</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/08/que-es-spring-framework-y-un-poco-de-javascript-para-genbetadev" />
    <category term="sin-categoria" />
    <category term="genbetadev" />
    <category term="spring" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-08-22T10:37:12Z</updated>
    <published>2014-08-22T10:37:12Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;He escrito la semana pasada un par de art&amp;iacute;culos como siempre para GenBetaDev. Aqu&amp;iacute; os dejo los enlaces ya que pienso que os pueden ser de inter&amp;eacute;s. El primero &lt;a href="http://www.genbetadev.com/frameworks/que-es-spring-framework"&gt;es una breve introducci&amp;oacute;n a Spring Framework &lt;/a&gt;que espero ayude a la gente a entender mejor como este framework funciona. El segundo art&amp;iacute;culo es un repaso&lt;a href="http://www.genbetadev.com/javascript/javascript-objetos-y-literales"&gt; al mundo de los objetos de Javascript&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;La entrada &lt;a href="http://www.arquitecturajava.com/que-es-spring-framework-y-un-poco-de-javascript-para-genbetadev/"&gt;&amp;iquest;Que es Spring Framework? y un poco de Javascript para GenBetaDev&lt;/a&gt; aparece primero en &lt;a href="http://www.arquitecturajava.com"&gt;Arquitectura Java&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/08/que-es-spring-framework-y-un-poco-de-javascript-para-genbetadev"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-08-22T10:37:12Z</dc:date>
  </entry>
  <entry>
    <title>Arquitecturas Web y MEAN Stack (CantabriaTIC)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/08/arquitecturas-web-y-mean-stack-cantabriatic" />
    <category term="sin-categoria" />
    <category term="mean" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-08-14T06:31:23Z</updated>
    <published>2014-08-14T06:31:23Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Hoy he escrito una peque&amp;ntilde;a introducci&amp;oacute;n y algunas reflexiones sobre las nuevas Arquitecturas Javascript basadas en MEAN Stack (Mongo,Express,Angular,Node) para la gente de CantabriaTic podeis leer el articulo &lt;a href="http://bit.ly/1BfStja"&gt;aqu&amp;iacute;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;La entrada &lt;a href="http://www.arquitecturajava.com/arquitecturas-web-y-mean-stack-para-cantabriatic/"&gt;Arquitecturas Web y MEAN Stack (CantabriaTIC)&lt;/a&gt; aparece primero en &lt;a href="http://www.arquitecturajava.com"&gt;Arquitectura Java&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/08/arquitecturas-web-y-mean-stack-cantabriatic"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-08-14T06:31:23Z</dc:date>
  </entry>
  <entry>
    <title>JQuery Ajax y Eventos Globales</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/08/jquery-ajax-y-eventos-globales" />
    <category term="html5" />
    <category term="jquery" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-08-06T07:02:30Z</updated>
    <published>2014-08-06T07:02:30Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Ajax es una tecnolog&amp;iacute;a con la que trabajamos en el d&amp;iacute;a a d&amp;iacute;a pero que siempre tiene cosas que quedan por aprender. En este caso vamos a hablar de JQuery y como maneja los eventos de Ajax a nivel global. Para ello vamos a poner en ejemplo sencillo en el que usamos JQuery para hacer dos peticiones Ajax.&lt;/p&gt; 
&lt;pre&gt;

&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;jquery-2.1.1.min.js&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
$(document).ready(function() {

$.get(&amp;quot;/hola&amp;quot;,function(datos) {

alert(datos);
alert(&amp;quot;peticion finalizada&amp;quot;);

});
$.get(&amp;quot;/hola2&amp;quot;,function(datos) {

alert(datos);
alert(&amp;quot;peticion finalizada&amp;quot;);
});

});

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt; 
&lt;p&gt;Como podemos se trata de un programa que realiza dos peticiones Ajax y se trae unos datos usando $.get() . Despu&amp;eacute;s de realizar esta operaci&amp;oacute;n nos saca a traves de un alert los datos y un mensaje de petici&amp;oacute;n finalizada.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/08/jquery-ajax-y-eventos-globales"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-08-06T07:02:30Z</dc:date>
  </entry>
  <entry>
    <title>Para GenBetaDev (JPA y Javascript)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/07/para-genbetadev-jpa-y-javascript" />
    <category term="jpa" />
    <category term="jee" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-07-24T08:03:59Z</updated>
    <published>2014-07-24T08:03:59Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;He escrito estas &amp;uacute;ltimas semanas dos art&amp;iacute;culos para GenBetaDev . El primero esta ligado de forma muy clara a la plataforma Java y trata sobre las diferencias existentes entre &lt;a href="http://www.genbetadev.com/frameworks/jpa-vs-hibernate"&gt;JPA e Hibernate&lt;/a&gt;. El Segundo esta m&amp;aacute;s orientado a &lt;a href="http://www.genbetadev.com/desarrollo-web/javascript-funciones-y-expresiones"&gt;conceptos fundamentales del Lenguage JavaScript &lt;/a&gt;y como las funciones trabajan en &amp;eacute;l.&lt;/p&gt; 
&lt;p&gt;La entrada &lt;a href="http://www.arquitecturajava.com/ultimos-articulos-para-genbetadev-jpa-y-javascript/"&gt;Para GenBetaDev (JPA y Javascript)&lt;/a&gt; aparece primero en &lt;a href="http://www.arquitecturajava.com"&gt;Arquitectura Java&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/07/para-genbetadev-jpa-y-javascript"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-07-24T08:03:59Z</dc:date>
  </entry>
  <entry>
    <title>#if DEBUG en Javascript (bueno, o algo así)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2014/07/if-debug-en-javascript-bueno-o-algo-asi" />
    <category term="trucos" />
    <category term="asp-net" />
    <category term="depuracion" />
    <category term="javascript" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2014-07-22T11:55:00Z</updated>
    <published>2014-07-22T11:55:00Z</published>
    <content type="html">&lt;p&gt;&lt;img align="right" alt="Debug" src="http://lh4.ggpht.com/-Ox2wyj3ZYSU/U8LGWzoGCtI/AAAAAAAADh0/ZB26rBsBkE0/image2.png?imgmax=800" height="128" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; float: right; margin: 0px 0px 10px 10px; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="Debug" width="128" /&gt;Hay veces que desde Javascript nos interesa ejecutar un c&amp;oacute;digo u otro en funci&amp;oacute;n de si la ejecuci&amp;oacute;n se est&amp;aacute; produciendo en un servidor de desarrollo o en uno de producci&amp;oacute;n. Por ejemplo, en el primer caso suele ser interesante disponer de 
&lt;em&gt;logs&lt;/em&gt; o herramientas de ayuda a la depuraci&amp;oacute;n, mientras que en el segundo lo normal es que queramos introducir c&amp;oacute;digo m&amp;aacute;s eficiente y sin este tipo de condimentos. 
&lt;br /&gt; 
&lt;br /&gt;En este post vamos a ver algunas t&amp;eacute;cnicas muy b&amp;aacute;sicas que nos permitir&amp;aacute;n ejecutar un c&amp;oacute;digo u otro en el lado cliente de aplicaciones ASP.NET MVC (o ASP.NET en general) en funci&amp;oacute;n del modo de compilaci&amp;oacute;n. 
&lt;br /&gt; 
&lt;a&gt;&lt;/a&gt; 
&lt;br /&gt; 
&lt;h3&gt;1. El lado servidor&lt;/h3&gt;En el lado servidor es bastante f&amp;aacute;cil de conseguir porque disponemos de directivas de compilaci&amp;oacute;n que nos permiten detectar si estamos generando los binarios en modo depuraci&amp;oacute;n:&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2014/07/if-debug-en-javascript-bueno-o-algo-asi"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2014-07-22T11:55:00Z</dc:date>
  </entry>
  <entry>
    <title>¿Como funciona Node.js?  para (GenBetaDev)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/07/como-funciona-node-js-para-genbetadev" />
    <category term="sin-categoria" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-07-10T08:26:06Z</updated>
    <published>2014-07-10T08:26:06Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Ayer he escrito un nuevo art&amp;iacute;culo para la gente de &lt;a href="http://www.genbetadev.com/"&gt;GenBetaDev&lt;/a&gt; que trata sobre la propia arquitectura de Node.js que creo que puede ser interesante para otros lectores. Podeis acceder al art&amp;iacute;culo &lt;a href="http://www.genbetadev.com/frameworks/como-funciona-node-js"&gt;aqu&amp;iacute;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;La entrada &lt;a href="http://www.arquitecturajava.com/como-funciona-nodejs-para-genbetadev/"&gt;&amp;iquest;Como funciona Node.js? para (GenBetaDev)&lt;/a&gt; aparece primero en &lt;a href="http://www.arquitecturajava.com"&gt;Arquitectura Java&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/07/como-funciona-node-js-para-genbetadev"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-07-10T08:26:06Z</dc:date>
  </entry>
  <entry>
    <title>AngularJS, gracias por los servicios prestados</title>
    <link rel="alternate" href="http://www.blogstack.info/post/koalite/2014/06/angularjs-gracias-por-los-servicios-prestados" />
    <category term="opinion" />
    <category term="angularjs" />
    <category term="development" />
    <category term="rant" />
    <category term="javascript" />
    <author>
      <name>Juan María Hernández</name>
    </author>
    <updated>2014-06-23T05:06:44Z</updated>
    <published>2014-06-23T05:06:44Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;img src="http://blog.koalite.com/wp-content/uploads/AngularJS-large.png" alt="Logo de AngularJS" /&gt;&lt;/p&gt; 
&lt;p&gt;Hace algo m&amp;aacute;s de un a&amp;ntilde;o empec&amp;eacute; a jugar con &lt;a href="http://blog.koalite.com/tag/angularjs/"&gt;AngularJS&lt;/a&gt;, en parte por curiosidad y en parte por la necesidad que ten&amp;iacute;a en ese momento de desarrollar una aplicaci&amp;oacute;n web para dispositivos m&amp;oacute;viles. Seis meses depu&amp;eacute;s coment&amp;eacute; por aqu&amp;iacute; la que, hasta entonces, hab&amp;iacute;a sido &lt;a href="http://blog.koalite.com/2013/10/angularjs-6-meses-despues/" title="AngularJS, 6 meses despu&amp;eacute;s"&gt;una experiencia muy satisfactoria con AngularJS&lt;/a&gt;. &lt;/p&gt; 
&lt;p&gt;Siempre he tratado de mantener una postura medianamente objetiva, intentando identificar los que (al menos para mi caso de uso concreto) eran &lt;a href="http://blog.koalite.com/2013/06/angularjs-lo-bueno-y-lo-malo/" title="AngularJS: Lo bueno y lo malo"&gt;los puntos fuertes y d&amp;eacute;biles&lt;/a&gt; de angularjs, y tengo que reconocer que, con el tiempo, las partes que no me gustan est&amp;aacute;n empezando a ganarle la partida a las partes que s&amp;iacute;.&lt;/p&gt; 
&lt;h3&gt;Al C&amp;eacute;sar lo que es del C&amp;eacute;sar&lt;/h3&gt; 
&lt;p&gt;Antes de empezar a quejarme, creo que es importante dejar una cosa clara: &lt;strong&gt;la aplicaci&amp;oacute;n que desarrollamos usando angularjs est&amp;aacute; siendo un &amp;eacute;xito&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/koalite/2014/06/angularjs-gracias-por-los-servicios-prestados"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Juan María Hernández</dc:creator>
    <dc:date>2014-06-23T05:06:44Z</dc:date>
  </entry>
  <entry>
    <title>JavaScript JsPerf</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/06/javascript-jsperf" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-06-19T07:20:44Z</updated>
    <published>2014-06-19T07:20:44Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;La mayor parte de las veces que trabajamos con JavaScript no tenemos ning&amp;uacute;n problema y todo funciona correctamente. Lamentablemente otras veces los problemas aparecen. Uno de los problemas m&amp;aacute;s habituales es un problema de rendimiento. Por lo que sea nuestra aplicaci&amp;oacute;n no funciona todo lo r&amp;aacute;pido que dese&amp;aacute;bamos. Este tipo de problemas no es facil de encauzar y las posibles soluciones no nos vienen a la cabeza de forma autom&amp;aacute;tica. Sin embargo existen herramientas que nos pueden dar un peque&amp;ntilde;o respiro y ayudarnos a ver la luz al final del tunel. Una de las m&amp;aacute;s habituales es &lt;a href="http://jsperf.com/"&gt;JsPerf &lt;/a&gt;que es una herramienta online muy &amp;uacute;til.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.arquitecturajava.com/wp-content/uploads/web.png"&gt;&lt;img src="http://www.arquitecturajava.com/wp-content/uploads/web.png" alt="web" width="968" height="177" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;iquest;Como funciona JsPerf?&lt;/h2&gt; 
&lt;p&gt;Realmente se trata de una herramienta muy sencilla. Imagin&amp;eacute;monos que tenemos el siguiente bloque de c&amp;oacute;digo html.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/06/javascript-jsperf"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-06-19T07:20:44Z</dc:date>
  </entry>
  <entry>
    <title>Acelerar tu página web retardando la carga de ciertos contenidos secundarios</title>
    <link rel="alternate" href="http://www.blogstack.info/post/placerdigital/2014/06/acelerar-tu-pagina-web-retardando-la-carga-de-ciertos-contenidos-secundarios" />
    <category term="blog-stack" />
    <category term="programacion" />
    <category term="tutoriales" />
    <category term="html" />
    <category term="javascript" />
    <author>
      <name>Ricardo Barra</name>
    </author>
    <updated>2014-06-17T17:10:26Z</updated>
    <published>2014-06-17T17:10:26Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Cuando en una p&amp;aacute;gina web o blog hay muchos comentarios, cada uno de ellos tiene un avatar asociado. Cada avatar es una imagen distinta y si el post o art&amp;iacute;culo es popular, podemos tener decenas de im&amp;aacute;genes al final de la p&amp;aacute;gina que &lt;strong&gt;retrasar&amp;aacute;n la velocidad de carga de &amp;eacute;sta&lt;/strong&gt;. Peor a&amp;uacute;n, como en esos casos hay que hacer muchas solicitudes al servidor (HTTP requests) para que cargue cada imagen por separado, eso puede impedir que se carguen antes otros elementos importantes para el aspecto de la p&amp;aacute;gina, tales como estilos CSS u otras im&amp;aacute;genes.&lt;/p&gt; 
&lt;p&gt;Para acelerar la velocidad de carga de una p&amp;aacute;gina web y as&amp;iacute; ofrecer una mejor experiencia al usuario, &lt;strong&gt;existen formas de lograr que los avatares u otros elementos sean los &amp;uacute;ltimos en cargar&lt;/strong&gt;. Muchas veces no necesitamos que las im&amp;aacute;genes de perfil de los comentaristas se muestren inmediatamente, ya que primero nos interesa leer el contenido principal. Puede incluso que ni siquiera necesitemos ver los comentarios.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/placerdigital/2014/06/acelerar-tu-pagina-web-retardando-la-carga-de-ciertos-contenidos-secundarios"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Ricardo Barra</dc:creator>
    <dc:date>2014-06-17T17:10:26Z</dc:date>
  </entry>
  <entry>
    <title>Java WebSockets</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/06/java-websockets" />
    <category term="java-ee" />
    <category term="jee" />
    <category term="java-web" />
    <category term="websocket" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-06-16T08:33:24Z</updated>
    <published>2014-06-16T08:33:24Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Cada d&amp;iacute;a tenemos una mayor necesidad de utilizar las caracter&amp;iacute;sticas que tiene HTML5 en nuestras aplicaciones. &lt;strong&gt;Pero quiz&amp;aacute; si hay una que destaca por encima de todas es el uso de los WebSockets&lt;/strong&gt;. Java WebSockets es una de las especificaciones de Java EE 7 y vamos a introducirla en este art&amp;iacute;culo.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.arquitecturajava.com/wp-content/uploads/Javaee.png"&gt;&lt;img src="http://www.arquitecturajava.com/wp-content/uploads/Javaee.png" alt="Javaee" width="311" height="318" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;iquest;Que es un WebSocket?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Es una conexi&amp;oacute;n bidireccional punto a punto entre un navegador y su servidor,&lt;/strong&gt;&amp;nbsp;de tal manera que ambas partes se puedan enviar mensajes. Para la parte del cliente no resulta ninguna innovaci&amp;oacute;n pero para la parte del servidor s&amp;iacute; ya que &lt;strong&gt;permite enviar informaci&amp;oacute;n al cliente sin obligar a este a realizar peticiones AJAX cada x segundos.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.arquitecturajava.com/wp-content/uploads/Websocket01.png"&gt;&lt;img src="http://www.arquitecturajava.com/wp-content/uploads/Websocket01.png" alt="Websocket01" width="519" height="303" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Java &amp;nbsp;WebSockets&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;En Java, los WebSockets vienen como estandar a partir de Java EE 7 en la especificaci&amp;oacute;n JSR 356.&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/06/java-websockets"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-06-16T08:33:24Z</dc:date>
  </entry>
  <entry>
    <title>Frameworks CSS Less y Sass para  (CantabriaTic)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/06/frameworks-css-less-y-sass-para-cantabriatic" />
    <category term="html5" />
    <category term="css3" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-06-05T08:25:58Z</updated>
    <published>2014-06-05T08:25:58Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Acabo de publicar un nuevo art&amp;iacute;culo para la gente de&lt;a href="http://www.cantabriatic.com/"&gt; CantabriaTIC &lt;/a&gt;en el cu&amp;aacute;l hago una breve introducci&amp;oacute;n a los frameworks CSS y en concreto a &lt;a href="http://www.cantabriatic.com/frameworks-css-less-y-sass/"&gt;L&lt;/a&gt;ess&amp;nbsp;ya que considero que son herramientas que pueden ayudar de forma clara a los dise&amp;ntilde;adores, permitiendoles aumentar su productividad. Podeis &lt;a href="http://www.cantabriatic.com/frameworks-css-less-y-sass/"&gt;acceder aqu&amp;iacute; al art&amp;iacute;culo.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;La entrada &lt;a href="http://www.arquitecturajava.com/frameworks-css-less-y-sass-para-cantabriatic/"&gt;Frameworks CSS Less y Sass para (CantabriaTic)&lt;/a&gt; aparece primero en &lt;a href="http://www.arquitecturajava.com"&gt;Arquitectura Java&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/06/frameworks-css-less-y-sass-para-cantabriatic"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-06-05T08:25:58Z</dc:date>
  </entry>
  <entry>
    <title>Taller en Buenos Aires: Desarrollo ágil con JavaScript. Prácticas, técnicas y herramientas.</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/05/taller-en-buenos-aires-desarrollo-agil-con-javascript-practicas-tecnicas-y-herramientas" />
    <category term="mug" />
    <category term="agilidad" />
    <category term="tdd" />
    <category term="jquery" />
    <category term="backbone-js" />
    <category term="javascript" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-05-22T01:50:00Z</updated>
    <published>2014-05-22T01:50:00Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;El pr&amp;oacute;ximo Jueves 5 de Junio estar&amp;eacute; en la ciudad de Buenos Aires dando un taller todo el d&amp;iacute;a sobre desarrollo de aplicaciones en un ambiente &amp;aacute;gil utilizando JavaScript.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://desmarcado.cl/wp-content/uploads/2013/05/JavaScript.png" width="409" height="336" /&gt;&lt;/p&gt; 
&lt;h3&gt;La motivaci&amp;oacute;n&lt;/h3&gt; 
&lt;p&gt;Despu&amp;eacute;s de leer un &lt;a href="http://blog.8thlight.com/uncle-bob/2014/03/28/The-Corruption-of-Agile.html"&gt;interesante post del T&amp;iacute;o Bob&lt;/a&gt; sobre “La verdadera corrupci&amp;oacute;n de la agilidad” y sumado a esto &lt;a href="https://groups.yahoo.com/neo/groups/foro-agiles/conversations/topics/5959"&gt;este hilo en la lista de &amp;Aacute;giles&lt;/a&gt; pens&amp;eacute; en qu&amp;eacute; herramientas, pr&amp;aacute;cticas y t&amp;eacute;cnicas del d&amp;iacute;a a d&amp;iacute;a me ayudan a m&amp;iacute; en el desarrollo &amp;aacute;gil, c&amp;oacute;mo las adoptamos en el equipo, qu&amp;eacute; ventajas encontramos, qu&amp;eacute; limitaciones, c&amp;oacute;mo se combinan entre ellas y con las metodolog&amp;iacute;as como &lt;em&gt;Scrum&lt;/em&gt;, o &lt;em&gt;Kamban&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;&amp;iquest;Qui&amp;eacute;nes puden participar?&lt;/h3&gt; 
&lt;p&gt;Idealmente programadores con conocimientos de &lt;em&gt;JavaScript&lt;/em&gt; o que participen en equipo que trabajen con alguna metodolog&amp;iacute;a &amp;aacute;gil.&lt;/p&gt; 
&lt;h3&gt;&amp;iquest;De qu&amp;eacute; vamos a hablar?&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/05/taller-en-buenos-aires-desarrollo-agil-con-javascript-practicas-tecnicas-y-herramientas"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-05-22T01:50:00Z</dc:date>
  </entry>
  <entry>
    <title>Javascript Thread y Ajax</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/05/javascript-thread-y-ajax" />
    <category term="jquery" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-05-20T09:32:27Z</updated>
    <published>2014-05-20T09:32:27Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Todos utilizamos javascript a diario y quiz&amp;aacute;s una de las cosas que hacemos de forma mas habitual es realizar peticiones AJAX&amp;nbsp;para traernos informaci&amp;oacute;n del servidor.Sin embargo no mucha gente entiende de forma clara como funciona Javascript Thread y su relaci&amp;oacute;n con el mundo de AJAX. Vamos a aprovechar este art&amp;iacute;culo para intentar aclarar ideas . Supongamos que nosotros tenemos la siguiente p&amp;aacute;gina JSP que nos devuelve un mensaje de “hola” y a la cual la vamos a invocar de forma normal y tambi&amp;eacute;n v&amp;iacute;a AJAX.&lt;/p&gt; 
&lt;pre&gt;

&amp;lt;%@ page language=&amp;quot;java&amp;quot; contentType=&amp;quot;text/html; charset=UTF-8&amp;quot;
 pageEncoding=&amp;quot;UTF-8&amp;quot;%&amp;gt;
&amp;lt;%
Thread.sleep(2000);
out.println(&amp;quot;hola&amp;quot;);
%&amp;gt;
&lt;/pre&gt; 
&lt;p&gt;Esta p&amp;aacute;gina tiene una peculiaridad y es que duerme durante 2 segundos antes de devolvernos un resultado.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.arquitecturajava.com/wp-content/uploads/0013.jpg"&gt;&lt;img src="http://www.arquitecturajava.com/wp-content/uploads/0013.jpg" alt="001" width="415" height="323" /&gt;&lt;/a&gt;&lt;br /&gt; Despu&amp;eacute;s de dos segundos la p&amp;aacute;gina presentar&amp;aacute; la informaci&amp;oacute;n :&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/05/javascript-thread-y-ajax"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-05-20T09:32:27Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Marionette</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-lista-de-tareas-con-marionette" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-25T22:59:42Z</updated>
    <published>2013-08-30T12:28:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Marionette" src="http://2.bp.blogspot.com/-ODdQesCGeKg/UiCFBR7_Z_I/AAAAAAAACmg/an6e-SJv-jA/s200/marionette.png" height="200" title="Marionette" width="146" /&gt; 
&lt;/div&gt;Como comentaba en el 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;ejemplo de una aplicaci&amp;oacute;n de una lista de tareas en una aplicaci&amp;oacute;n javascript&lt;/a&gt;&amp;nbsp;Backbone es una herramienta que nos puede ayudar mucho a evitar que el c&amp;oacute;digo se nos convierta en dif&amp;iacute;cil de manejar facilit&amp;aacute;ndonos como estructurarlo con los modelos, colecciones y vistas y permiti&amp;eacute;ndonos separar el modelo de la vista actualizando estas &amp;uacute;ltimas a trav&amp;eacute;s de los eventos que produce el modelo y escuchados en las vistas. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;a href="http://backbonejs.org/"&gt;Backbone&lt;/a&gt; es una herramienta que nos da bastante libertad en cuanto a como queremos hacer las cosas y de lo que ofrece podemos usar solo lo que queramos. En algunos casos podemos considerar que Backbone ya es de por si una soluci&amp;oacute;n suficiente pero pero en otros podemos necesitar algo que nos facilite la tarea un poco m&amp;aacute;s, de hecho hay muchas&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-lista-de-tareas-con-marionette"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-08-30T12:28:00Z</dc:date>
  </entry>
  <entry>
    <title>Backbonejs: Rutas</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/04/backbonejs-rutas" />
    <category term="backbone-js" />
    <category term="javascript" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-04-13T14:37:00Z</updated>
    <published>2014-04-13T14:37:00Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;img src="http://assets.hardwaresphere.com/uploads/2010/04/tomtom-xxl-530-s-gps-navigator.jpg" width="409" height="307" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://leomicheloni.com/post/2014/03/16/Introduccion-de-Backbonejs.aspx"&gt;Dijimos que Backbone es especialmente &amp;uacute;til para aplicaciones SPA&lt;/a&gt;&lt;em&gt;&lt;/em&gt; (&lt;em&gt;single page applications&lt;/em&gt;) as&amp;iacute; que vamos a ver un componente que nos ayuda con este tipo de aplicaciones.&lt;/p&gt; 
&lt;h3&gt;&amp;iquest;Qu&amp;eacute; es una SPA?&lt;/h3&gt; 
&lt;p&gt;Son aplicaciones que transcurren en la misma p&amp;aacute;gina, sin ir de una p&amp;aacute;gina a otra, un ejemplo t&amp;iacute;pico de &lt;em&gt;Gmail&lt;/em&gt;, cuando estamos en la bandeja de entrada vemos un listado de mails, hacemos &lt;em&gt;click&lt;/em&gt; en uno de ellos y seguimos en la misma p&amp;aacute;gina pero si mirando con atenci&amp;oacute;n vamos a notar que parte de la &lt;em&gt;URL&lt;/em&gt; ha cambiado, es decir, permanecimos dentro de la misma p&amp;aacute;gina pero, de alg&amp;uacute;n modo, hemos ido a un lugar dentro de ella.&lt;/p&gt; 
&lt;p&gt;Cuando estamos en la bandeja de entrada vemos esta &lt;em&gt;URL&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;https://mail.google.com/mail/u/0/?pli=1#inbox&lt;/pre&gt; 
&lt;p&gt;Cuando vemos un mail vemos la siguiente&lt;/p&gt; 
&lt;pre&gt;https://mail.google.com/mail/u/0/?pli=1#inbox/145511f0ec63a6d4&lt;/pre&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/04/backbonejs-rutas"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-04-13T14:37:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Backbone y React</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-11T14:33:28Z</updated>
    <published>2014-04-11T14:33:28Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/backbone.png" alt="Backbone" title="Backbone" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/react.png" alt="React" title="React" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En anteriores entradas explicaba como hacer el t&amp;iacute;pico ejemplo que se suele usar como demostraci&amp;oacute;n en los framework MVC de Javascript que consiste en una lista de tareas en la que se pueden a&amp;ntilde;adir nuevas, marcarlas como completadas y eliminarlas. Realice este ejemplo en uno de ellos &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;usando solo Backbone&lt;/a&gt; y posteriormente &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;usando Marionette&lt;/a&gt;. Estos ejemplos eran parte de una serie de art&amp;iacute;culos sobre Javascript que la que mostaba como usar muchas otras herramientas como &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;Require JS&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html"&gt;Mustache&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html"&gt;logging con javscript&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/capturar-errores-de-javascript.html"&gt;capturar errores en javascript&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html"&gt;introducci&amp;oacute;n a Backbone&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;lista de tarea con Backbone, RESTEasy y Tapestry&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html"&gt;pruebas unitarias con Jasmine y Sinon&lt;/a&gt;, &lt;a href="http://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/"&gt;Usar Grunt para ejecutar teses unitarios de c&amp;oacute;digo Javascript&lt;/a&gt; y que constituyen parte del actual &amp;laquo;estado del arte&amp;raquo; en cuanto a desarrollo con Javascript.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-04-11T14:33:28Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Backbone, RESTEasy y Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/04/ejemplo-lista-de-tareas-con-backbone-resteasy-y-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T16:11:56Z</updated>
    <published>2013-04-26T19:38:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Backbone.js" src="http://2.bp.blogspot.com/-SMyoDvx_-j8/UXFvpfyC7iI/AAAAAAAACec/LiLs_goZU4Y/s320/backbone.png" height="56" title="Backbone.js" width="320" /&gt; 
&lt;/div&gt;Normalmente escribo art&amp;iacute;culos con ejemplos que tratan sobre una &amp;uacute;nica tecnolog&amp;iacute;a, al tratar cada tecnolog&amp;iacute;a por separado entender que puede ofrecer es m&amp;aacute;s sencillo pero en una aplicaci&amp;oacute;n real normalmente se usan varias tecnolog&amp;iacute;as combinadas y al mismo tiempo. Esta entrada aunque sigue siendo un ejemplo es mucho m&amp;aacute;s parecido a lo que podr&amp;iacute;a ser una aplicaci&amp;oacute;n real que lo que he explicado durante las &amp;uacute;ltimas entradas. En esta serie sobre javascript he explicado un mont&amp;oacute;n de cosas por separado entre ellas 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;RequireJS&lt;/a&gt;,&amp;nbsp; 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html"&gt;Mustache&lt;/a&gt;,&amp;nbsp; 
&lt;a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html"&gt;Backbone&lt;/a&gt;, 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/integracion-tapestry-con-resteasy.htm.html"&gt;servicios rest con Tapestry&lt;/a&gt; y 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/02/ejemplo-sencillo-de-web-service-con-resteasy.html"&gt;RESTEasy&lt;/a&gt;. En esta entrada har&amp;eacute; un ejemplo haciendo uso de todas las anteriores y alguna cosa m&amp;aacute;s adicional como 
&lt;a href="http://twitter.github.io/bootstrap/"&gt;twitter bootstrap&lt;/a&gt;. 
&lt;br /&gt; 
&lt;br /&gt;El ejemplo consiste en una lista de tareas, pudi&amp;eacute;ndose introducir nuevas tareas y marcarlas como realizadas. Tambi&amp;eacute;n se podr&amp;aacute; eliminar de la lista las tareas completadas y ver un resumen con el n&amp;uacute;mero de tareas completadas y de tareas totales.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/04/ejemplo-lista-de-tareas-con-backbone-resteasy-y-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-04-26T19:38:00Z</dc:date>
  </entry>
  <entry>
    <title>Introducción y ejemplo de RequireJS</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/03/introduccion-y-ejemplo-de-requirejs" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software-libre" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T14:46:44Z</updated>
    <published>2013-03-15T21:18:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="RequireJS" src="http://4.bp.blogspot.com/-M9RUvRUMUuY/UUOEKEfud5I/AAAAAAAACcU/OYXvsfWUBbQ/s1600/requirejs.png" title="RequireJS" /&gt; 
&lt;/div&gt;Las p&amp;aacute;ginas web ha evolucionado mucho desde sus inicios en los que eran simples p&amp;aacute;ginas est&amp;aacute;ticas hechas con el lenguaje de marcas html, pod&amp;iacute;an contener enlaces e im&amp;aacute;genes. Posteriormente adquirieron capacidad de cambiar a trav&amp;eacute;s un lenguaje de programaci&amp;oacute;n que en el servidor genera el c&amp;oacute;digo html de forma din&amp;aacute;mica bas&amp;aacute;ndose en la informaci&amp;oacute;n que el usuario pod&amp;iacute;a enviar en un formulario, tambi&amp;eacute;n se incorpora cierta programaci&amp;oacute;n en el cliente con javascript. Con las nuevas versiones del est&amp;aacute;ndar html, los avances de los navegadores y una explosi&amp;oacute;n de dispositivos m&amp;oacute;viles de gran capacidad las aplicaciones est&amp;aacute;n evolucionando hacia el cliente, haci&amp;eacute;ndose cada vez m&amp;aacute;s complejas en el lado del navegador del usuario y adquiriendo resposabilidades que antes ten&amp;iacute;a la aplicaci&amp;oacute;n en el lado del servidor. Cada vez hay m&amp;aacute;s librer&amp;iacute;as y frameworks javascript que tratan de resolver problemas espec&amp;iacute;ficos de las aplicaciones de internet. Entre estas librer&amp;iacute;as algunas de las m&amp;aacute;s conocidas son, muy resumidamente:&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/03/introduccion-y-ejemplo-de-requirejs"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-03-15T21:18:00Z</dc:date>
  </entry>
  <entry>
    <title>Usar Grunt para ejecutar teses unitarios de código Javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T14:43:23Z</updated>
    <published>2014-04-04T14:43:23Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/grunt.png" alt="Grunt" title="Grunt" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En la &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;serie de art&amp;iacute;culos que escrib&amp;iacute; sobre javascript&lt;/a&gt; hice un ejemplo m&amp;aacute;s o menos complejo y parecido a lo que podr&amp;iacute;a ser una aplicaci&amp;oacute;n real usando muchas de las herramientas que ahora se consideran una buena opci&amp;oacute;n para desarrollar aplicaciones javascript como &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;RequireJS&lt;/a&gt;, &lt;a href="http://www.genbetadev.com/desarrollo-web/patron-de-diseno-mvc-del-lado-cliente-con-backbonejs"&gt;Backbone&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;Marionette&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html"&gt;Jasmine y Sinon&lt;/a&gt;. En el &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;ejemplo de la lista de tareas con estas herramientas&lt;/a&gt; hice unas cuantas pruebas unitarias para mostrar en un ejemplo como son y la forma de usar &lt;a href="http://jasmine.github.io/"&gt;Jasmine&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Sin embargo, para ejecutar las pruebas unitarias se necesitaba un navegador y hacerlo de forma manual cuando quisi&amp;eacute;ramos comprobar el estado de las pruebas. Lo ideal tal y como se comenta en el libro &lt;a href="http://www.amazon.es/gp/product/B000SEGEKI/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=3626&amp;amp;creative=24822&amp;amp;creativeASIN=B000SEGEKI&amp;amp;linkCode=as2&amp;amp;tag=blobit-21"&gt;The Pragmatic Programmer&lt;/a&gt;&lt;img src="http://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;amp;l=as2&amp;amp;o=30&amp;amp;a=B000SEGEKI" width="1" height="1" alt="" style="border:none !important; margin:0px !important;" /&gt; es que las pruebas unitarias se ejecuten de forma automatizada con la herramienta de construcci&amp;oacute;n que usemos, esto evitar&amp;aacute; que se nos olvide ejecutarlas en cada cambio y as&amp;iacute; descubriremos los errores pronto, tambi&amp;eacute;n podremos hacer que se ejecuten en un entorno de integraci&amp;oacute;n continua como podr&amp;iacute;a ser &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-04-04T14:43:23Z</dc:date>
  </entry>
  <entry>
    <title>Backbonejs: Colecciones</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/backbonejs-colecciones" />
    <category term="backbone-js" />
    <category term="javascript" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-03-30T17:05:00Z</updated>
    <published>2014-03-30T17:05:00Z</published>
    <content type="html">&lt;p&gt;&lt;h3&gt;&amp;nbsp;&lt;/h3&gt; 
&lt;p&gt;&lt;img style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: right; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" src="http://readwrite.jp/wp-content/uploads/2014/02/backbone.jpg" width="162" align="right" height="162" /&gt;&lt;/p&gt; 
&lt;h3&gt;Qu&amp;eacute; son las colecciones?&lt;/h3&gt; 
&lt;p&gt;B&amp;aacute;sicamente es un &lt;em&gt;array&lt;/em&gt; de objetos del mismo tipo, aunque no necesariamente deber&amp;iacute;an serlo, la idea es tener una un lugar desde donde tomar nuestros datos y guardarlos (al menos temporalmente) y tener un conjunto de m&amp;eacute;todos para filtrar y dem&amp;aacute;s, adicionalmente podemos interactuar con el &lt;em&gt;backend&lt;/em&gt; de la aplicaci&amp;oacute;n.&lt;/p&gt; 
&lt;h3&gt;Ejemplo de una colecci&amp;oacute;n&lt;/h3&gt; 
&lt;p&gt;Como primer ejemplo vamos a crear un modelo y luego una colecci&amp;oacute;n de ese modelo, ser&amp;iacute;a as&amp;iacute;:&lt;/p&gt; 
&lt;pre&gt;//declaramos el modelo
var Tarea = Backbone.Model.extend({
	defaults:{
		done: false
	}
});
//declaramos la colecci&amp;oacute;n
var Tareas = Backbone.Collection.extend({
	model: Tarea //indicar el tipo de modelo a la colecci&amp;oacute;n
				 //permite agregar elementos como json
});

//creamos una colecci&amp;oacute;n y le pasamos un array de modelos
//como declaramos el tipo de modelo backbonejs se encarga
//de generar cada uno sin nuestra ayuda
var tareas = new Tareas(
	[
		{&amp;quot;name&amp;quot;: &amp;quot;comprar lechuga&amp;quot;},
		{&amp;quot;name&amp;quot;: &amp;quot;llamar a Roger&amp;quot;},
		{&amp;quot;name&amp;quot;: &amp;quot;ir a nadar&amp;quot;}
	]
);

console.log(tareas.toJSON());&lt;/pre&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/backbonejs-colecciones"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-03-30T17:05:00Z</dc:date>
  </entry>
  <entry>
    <title>Backbonejs: La vista</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/backbonejs-la-vista" />
    <category term="backbone-js" />
    <category term="javascript" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-03-25T01:55:00Z</updated>
    <published>2014-03-25T01:55:00Z</published>
    <content type="html">&lt;p&gt;&lt;h3&gt;Qu&amp;eacute; es la vista?&lt;/h3&gt; 
&lt;p&gt;En ella vamos a mostrar nuestro modelo, en este caso al tratarse de un navegador web ser&amp;aacute; en &lt;em&gt;HTML&lt;/em&gt;, y responder&amp;aacute; a la interacci&amp;oacute;n del usuario.&lt;/p&gt; 
&lt;h3&gt;C&amp;oacute;mo creo una vista con Backbone?&lt;/h3&gt; 
&lt;p&gt;Primero que nada utilizamos el mismo patr&amp;oacute;n que para crear un &lt;a href="http://www.leomicheloni.com/post/2014/03/20/Backbonejs-el-modelo.aspx"&gt;modelo&lt;/a&gt;, del siguiente modo:&lt;/p&gt; 
&lt;pre&gt;var Vista = Backbone.View.extend({});&lt;/pre&gt; 
&lt;p&gt;y luego para utilizarla&lt;/p&gt; 
&lt;pre&gt;var vista = new Vista();&lt;/pre&gt; 
&lt;h3&gt;Definiciones y cosas que tenemos por defecto&lt;/h3&gt; 
&lt;p&gt;Si no hacemos m&amp;aacute;s nada que lo anterior nuestra vista no hace gran cosa, de hecho, no hace nada, lo que acabamos de lograr es extender la clase de &lt;em&gt;Backbone&lt;/em&gt; para tener algunos m&amp;eacute;todos y propiedades (que vamos a usar despu&amp;eacute;s) pero en s&amp;iacute;, por ahora, no hace mucho&lt;/p&gt; 
&lt;h3&gt;El m&amp;eacute;todo render&lt;/h3&gt; 
&lt;p&gt;Este m&amp;eacute;todo nos permitir&amp;aacute; imprimir nuestra vista sobre alg&amp;uacute;n otro elemento de la p&amp;aacute;gina, sin embargo &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/backbonejs-la-vista"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-03-25T01:55:00Z</dc:date>
  </entry>
  <entry>
    <title>Backbonejs: el modelo</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/backbonejs-el-modelo" />
    <category term="javascript" />
    <category term="backbone-js" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-03-20T12:33:00Z</updated>
    <published>2014-03-20T12:33:00Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;img src="http://ts1.mm.bing.net/th?id=HN.608021284466656241&amp;amp;pid=1.7" /&gt;&lt;/p&gt; 
&lt;h3&gt;Qu&amp;eacute; es el modelo?&lt;/h3&gt; 
&lt;p&gt;El modelo es la abstracci&amp;oacute;n que representa nuestro sistema, con sus datos y comportamiento, en principio deber&amp;iacute;a ser totalmente independiente de los dem&amp;aacute;s componentes de la aplicaci&amp;oacute;n (por ejemplo, deber&amp;iacute;a ser independiente de la &lt;em&gt;UI&lt;/em&gt;)&lt;/p&gt; 
&lt;h3&gt;Creando un modelo con &lt;em&gt;backbone&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Para crear un modelo en &lt;em&gt;backbone&lt;/em&gt; tenemos que hacer dos cosas:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Declarar una clase &lt;/li&gt; 
 &lt;li&gt;Instanciarla &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Para crear la clase de nuestro modelo necesitamos extender una clase de &lt;em&gt;backbone&lt;/em&gt;, del siguiente modo:&lt;/p&gt; 
&lt;pre&gt;var Task = Backbone.Model.extend();&lt;/pre&gt; 
&lt;p&gt;con esto generamos una clase &lt;em&gt;Task&lt;/em&gt; que extiende la clase &lt;em&gt;Model&lt;/em&gt; de &lt;em&gt;backbone&lt;/em&gt;, esto nos permite utilizar su funcionalidad, por ejemplo podemos hacer:&lt;/p&gt; 
&lt;pre&gt;var task = new Task({name: &amp;quot;hacer algo&amp;quot;});
console.log(task.toJSON());&lt;/pre&gt; 
&lt;p&gt;y obtenemos una representaci&amp;oacute;n &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/backbonejs-el-modelo"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-03-20T12:33:00Z</dc:date>
  </entry>
  <entry>
    <title>Introducción de Backbonejs</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/introduccion-de-backbonejs" />
    <category term="javascript" />
    <category term="backbone-js" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-03-16T22:41:00Z</updated>
    <published>2014-03-16T22:41:00Z</published>
    <content type="html">&lt;p&gt;&lt;h3&gt;&amp;nbsp;&lt;/h3&gt; 
&lt;p&gt;&lt;img alt="Backbone.js" src="http://backbonejs.org/docs/images/backbone.png" width="696" height="129" /&gt;&lt;/p&gt; 
&lt;h3&gt;introducci&amp;oacute;n&lt;/h3&gt; 
&lt;p&gt;Si nuestra aplicaci&amp;oacute;n web “single page” es compleja del lado del cliente o empieza a serlo, m&amp;aacute;s tarde o m&amp;aacute;s temprano vamos a necesitar aplicar las mismas pr&amp;aacute;cticas de arquitectura que aplicamos del lado del servidor en &lt;em&gt;Javascript (MVC, MVP, etc.)&lt;/em&gt;, para esto hay varios patrones, bibliotecas y varios &lt;em&gt;frameworks&lt;/em&gt;, hoy vamos a hablar de &lt;a href="http://backbonejs.org/"&gt;Backbonejs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Qu&amp;eacute; es Backbone?&lt;/h3&gt; 
&lt;p&gt;Es 
 &lt;strike&gt;
   un 
  &lt;em&gt;framework&lt;/em&gt; 
 &lt;/strike&gt; una biblioteca para realizar aplicaciones en &lt;em&gt;Javascript&lt;/em&gt;, &lt;a href="http://en.wikipedia.org/wiki/Backbonejs"&gt;utiliza el patr&amp;oacute;n MVP&lt;/a&gt; (esta parte es discutible ya que no est&amp;aacute; tan claro) y posee ciertos componentes definidos, est&amp;aacute; pensado para trabajar sobre una &lt;a href="http://es.wikipedia.org/wiki/Representational_State_Transfer"&gt;API RESTFul&lt;/a&gt; pero nada impide no hacerlo, sus componentes son:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modelo &lt;/li&gt; 
 &lt;li&gt;Vista &lt;/li&gt; 
 &lt;li&gt;Colecciones &lt;/li&gt; 
 &lt;li&gt;Rutas &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Qui&amp;eacute;n lo usa?&lt;/h3&gt; 
&lt;p&gt;Es usado en sitios que seguramente has visitado, nombro algunos:&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/introduccion-de-backbonejs"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-03-16T22:41:00Z</dc:date>
  </entry>
  <entry>
    <title>Tips de Javascript: por qué se usa void(0)?</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/tips-de-javascript-por-que-se-usa-void" />
    <category term="javascript" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-03-11T18:17:00Z</updated>
    <published>2014-03-11T18:17:00Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Muchas veces nos encontramos que en un elemento a (un link) se poner por defecto el valor del atributo &lt;em&gt;href = javascript: void(0)&lt;/em&gt;; lo cual es, al menos, llamativo, si no queremos hacer nada simplemente podr&amp;iacute;amos usar href= javascript:&lt;em&gt;undefined&lt;/em&gt;, o no?&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://www.planet-source-code.com/vb/2010Redesign/images/LangugeHomePages/Javascript.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;Undefined no siempre es lo que parece&lt;/h3&gt; 
&lt;p&gt;Antes que nada vale aclarar que hay dos &lt;em&gt;undefined&lt;/em&gt; en &lt;em&gt;Javascript&lt;/em&gt;, el tipo, es decir, as&amp;iacute; como decimos que algo es un objeto, decimos que algo es &lt;em&gt;undefined&lt;/em&gt; y tambi&amp;eacute;n hay una variable global (una propiedad de &lt;em&gt;window, es decir window.undefined&lt;/em&gt;)&lt;/p&gt; 
&lt;p&gt;Probemos este script&lt;/p&gt; 
&lt;pre&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;

undefined = 1;
var uno = 1;

console.log( uno == undefined);

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt; 
&lt;p&gt;Es claro que deber&amp;iacute;a dar false (es decir no podemos decir que &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/03/tips-de-javascript-por-que-se-usa-void"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-03-11T18:17:00Z</dc:date>
  </entry>
  <entry>
    <title>Bower: manejador de paquetes para Javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/02/bower-manejador-de-paquetes-para-javascript" />
    <category term="nodejs" />
    <category term="javascript" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-02-21T23:43:00Z</updated>
    <published>2014-02-21T23:43:00Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;A medida que las aplicaciones crecen, crecen tambi&amp;eacute;n en dependencias y muchas veces la tarea de comenzar una aplicaci&amp;oacute;n es tediosa y repetitiva al tener que agregar una y otra vez las mismas referencias o no.&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Bower logo" src="http://bob.yexley.net/content/images/2013/Dec/bower_logo.png" width="241" height="241" /&gt;&lt;/p&gt; 
&lt;h3&gt;Primero que nada, tener Nodejs instalado&lt;/h3&gt; 
&lt;p&gt;S&amp;iacute;, &lt;a href="http://bower.io/"&gt;Bower&lt;/a&gt; es un paquete de Nodejs, as&amp;iacute; que una vez que &lt;a href="http://www.leomicheloni.com/post/2012/08/05/Comenzando-con-NodeJS-en-Windows.aspx"&gt;tenemos Nodejs instalado&lt;/a&gt;, ejecutamos el siguiente comando:&lt;/p&gt; 
&lt;pre&gt;npm install -g bower&lt;/pre&gt; 
&lt;h3&gt;CERT_UNTRUSTED Error&lt;/h3&gt; 
&lt;p&gt;Si esto ocurre lo m&amp;aacute;s simple es ejecutar el siguiente comando&lt;/p&gt; 
&lt;pre&gt;npm config set ca &amp;quot;&amp;quot; &lt;/pre&gt; 
&lt;p&gt;Si esto no funciona &lt;a href="https://groups.google.com/forum/#!topic/nodejs/aonVboqx8wM"&gt;ac&amp;aacute; hay un par de opciones m&amp;aacute;s&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Tambi&amp;eacute;n es necesario git&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Bower&lt;/em&gt; permite instalar paquetes desde cualquier repositrio &lt;em&gt;git&lt;/em&gt; (incluso uno nuestro, remoto lo local) pero necesitamos tener &lt;em&gt;git&lt;/em&gt; instalado y en el path para que &lt;em&gt;Bower&lt;/em&gt; lo encuentre.&lt;/p&gt; 
&lt;h3&gt;Ahora s&amp;iacute;, bower instalado, empecemos&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/02/bower-manejador-de-paquetes-para-javascript"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-02-21T23:43:00Z</dc:date>
  </entry>
  <entry>
    <title>Tips de Javascript: Arrays 2</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/02/tips-de-javascript-arrays-2" />
    <category term="javascript" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-02-20T02:43:00Z</updated>
    <published>2014-02-20T02:43:00Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Para completar por ahora &lt;a href="http://www.leomicheloni.com/post/2014/02/16/Tips-de-Javascript-Arrays.aspx"&gt;algunas peque&amp;ntilde;as cosas sobre arrays en Javascript&lt;/a&gt;&lt;em&gt;&lt;/em&gt;, vamos a ver unos detalles sobre c&amp;oacute;mo crearlos.&lt;/p&gt; 
&lt;h3&gt;Siempre usar la notaci&amp;oacute;n literal []&lt;/h3&gt; 
&lt;a href="http://leomicheloni.com/image.axd?picture=Windows-Live-Writer/Tips-de-Javascript-Arrays-2/1EF114FD/image.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" alt="image" src="http://leomicheloni.com/image.axd?picture=Windows-Live-Writer/Tips-de-Javascript-Arrays-2/39317E21/image_thumb.png" width="189" height="109" /&gt;&lt;/a&gt; 
&lt;p&gt;El resultado es el mismo si usamos&lt;em&gt; [1,2,3]&lt;/em&gt; o &lt;em&gt;new Array(3)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://leomicheloni.com/image.axd?picture=Windows-Live-Writer/Tips-de-Javascript-Arrays-2/3A761700/image.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" alt="image" src="http://leomicheloni.com/image.axd?picture=Windows-Live-Writer/Tips-de-Javascript-Arrays-2/1B33702D/image_thumb.png" width="190" height="108" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Pero, no es lo mismo&lt;em&gt; [3]&lt;/em&gt; que &lt;em&gt;new Array(3)&lt;/em&gt; como podemos ver, mientras que &lt;em&gt;[3]&lt;/em&gt; es coherente con el primer ejemplo (crea un &lt;em&gt;array&lt;/em&gt; con un elemento de valor 3) &lt;em&gt;new Array(3) &lt;/em&gt;crea un &lt;em&gt;array&lt;/em&gt; de tres elementos vac&amp;iacute;os!&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://leomicheloni.com/image.axd?picture=Windows-Live-Writer/Tips-de-Javascript-Arrays-2/5CAE2286/image.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" alt="image" src="http://leomicheloni.com/image.axd?picture=Windows-Live-Writer/Tips-de-Javascript-Arrays-2/0B73DB29/image_thumb.png" width="190" height="62" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Esto es cierto, pero si el elemento que pasamos al constructor no es un entero se comporta igual que &lt;em&gt;[3]&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;por lo tanto&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Es conveniente usar siempre la notaci&amp;oacute;n literal ya que el constructor de la clase Array tiene un comportamiento extra&amp;ntilde;o (al menos para m&amp;iacute;)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Hasta la pr&amp;oacute;xima.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/02/tips-de-javascript-arrays-2"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-02-20T02:43:00Z</dc:date>
  </entry>
  <entry>
    <title>Tips de Javascript: Arrays</title>
    <link rel="alternate" href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/02/tips-de-javascript-arrays" />
    <category term="javascript" />
    <author>
      <name>leonardo</name>
    </author>
    <updated>2014-02-17T02:56:00Z</updated>
    <published>2014-02-17T02:56:00Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Vamos a ver algunas pocas caracter&amp;iacute;sticas sobre &lt;em&gt;arrays&lt;/em&gt; en &lt;em&gt;Javascript&lt;/em&gt;, cortitas, pero interesantes.&lt;/p&gt; 
&lt;h3&gt;Los arrays son objetos&lt;/h3&gt; 
&lt;p&gt;Esto es obvio, en un punto todo es un objeto, pero en el caso de los &lt;em&gt;arrays&lt;/em&gt; no hablamos de un objeto &lt;em&gt;array&lt;/em&gt; como en C#, sino que un &lt;em&gt;array&lt;/em&gt; es un objeto y cuando le agregamos elementos lo que estamos agregando son miembros del &lt;em&gt;array&lt;/em&gt;, por ejemplo&lt;/p&gt; 
&lt;pre&gt;var a = [1, 2, 3];&lt;/pre&gt; 
&lt;p&gt;Esto no nos dice mucho, pero esto nos da una pista:&lt;/p&gt; 
&lt;pre&gt;var a = [1, &amp;quot;hola&amp;quot;, function() { console.log(&amp;quot;hola&amp;quot;);}];&lt;/pre&gt; 
&lt;p&gt;Es por eso que no importa el tipo de cada elemento del array.&lt;/p&gt; 
&lt;p&gt;Podemos decir que un &lt;em&gt;array&lt;/em&gt; es un objeto en el cual sus propiedades tienen por nombre el n&amp;uacute;mero de &amp;iacute;ndice del &lt;em&gt;array&lt;/em&gt;, es decir 0, 1, 2, 3; pero no podemos acceder a las propiedades con el punto (.) porque no est&amp;aacute; permitido que un identificado empiece con el mismo (a.1) , por eso hacemos&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/unasinfoniadecsharp/2014/02/tips-de-javascript-arrays"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>leonardo</dc:creator>
    <dc:date>2014-02-17T02:56:00Z</dc:date>
  </entry>
  <entry>
    <title>Solución al doble envío de peticiones en aplicaciones web</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/10/solucion-al-doble-envio-de-peticiones-en-aplicaciones-web" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-11-01T18:29:38Z</updated>
    <published>2013-10-11T17:25:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: both; text-align: center;"&gt;&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Apache Tapestry" height="133" src="http://4.bp.blogspot.com/-OGvCbjBk0zU/TOq7Y6w6wfI/AAAAAAAAAiU/Pfuzt5kkDBQ/s320/tapestry.png" title="Apache Tapestry" width="320" /&gt; 
&lt;/div&gt;Las aplicaciones web pueden recibir informaci&amp;oacute;n del usuario a trav&amp;eacute;s de formularios o en los par&amp;aacute;metros de los enlaces. Los formularios o enlaces pueden desencadenar en la aplicaci&amp;oacute;n diversas acciones. Dada la naturaleza de las aplicaciones web en ciertas ocasiones la latencia de la red o el tiempo que toma procesar la petici&amp;oacute;n un usuario puede tener la oportunidad de hacer clic varias veces en un bot&amp;oacute;n o enlace tambi&amp;eacute;n cuando ve que tarda mucho en obtener la respuesta o simplemente por su desconocimiento al estar acostumbrado a hacer doble clic al trabajar con otras aplicaciones o la interfaz de su sistema operativo. En ocasiones el problema puede producirse tambi&amp;eacute;n haciendo un refrescar con el bot&amp;oacute;n del navegador si no se hace un redirect despu&amp;eacute;s del env&amp;iacute;o del formulario (&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/10/solucion-al-doble-envio-de-peticiones-en-aplicaciones-web"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-10-11T17:25:00Z</dc:date>
  </entry>
  <entry>
    <title>Como optimizar módulos de RequireJS y archivos Javascript (II)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/09/como-optimizar-modulos-de-requirejs-y-archivos-javascript-ii" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-09-06T20:34:16Z</updated>
    <published>2013-09-06T13:05:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Require.js" src="http://4.bp.blogspot.com/-M9RUvRUMUuY/UUOEKEfud5I/AAAAAAAACcY/mNZLmYzWnsU/s1600/requirejs.png" title="Require.js" /&gt; 
&lt;/div&gt;Aunque pueda parecer que no y en muchos casos no se tenga en cuenta la diferencia que puede haber entre una aplicaci&amp;oacute;n web no optimizada y optimizada puede ser significativa en varios aspectos. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Marionette" height="200" src="http://4.bp.blogspot.com/-ODdQesCGeKg/UiCFBR7_Z_I/AAAAAAAACmk/69p6qg8WZ-E/s200/marionette.png" title="Marionette" width="146" /&gt; 
&lt;/div&gt;&amp;iquest;Por que en algunos casos es importante optimizar la aplicaci&amp;oacute;n? Uno de los motivos es conseguir una mejor experiencia de usuario haciendo que la p&amp;aacute;gina le cargue m&amp;aacute;s r&amp;aacute;pido. Una p&amp;aacute;gina que tarde en cargar demasiado puede significar p&amp;eacute;rdida de visitas y si se trata de una p&amp;aacute;gina de comercio electr&amp;oacute;nico de clientes y compras. Si un flujo importante de usuarios de una p&amp;aacute;gina procede de las b&amp;uacute;squedas la velocidad de carga de la p&amp;aacute;gina es importante ya que es una de las variables que tiene muy en cuenta el algoritmo de Google para establecer el ranking de los resultados, reducir el tiempo de carga puede significar aparecer antes en los resultados de la b&amp;uacute;squeda y esto significa m&amp;aacute;s clics en nuestro resultado, m&amp;aacute;s visitas y nuevamente m&amp;aacute;s potenciales clientes y compras. Y en caso de que no estemos desarrollando una aplicaci&amp;oacute;n accesible desde internet sino una aplicaci&amp;oacute;n para una empresa o administraci&amp;oacute;n publica hacer que cargue m&amp;aacute;s r&amp;aacute;pido puede suponer una mayor satisfacci&amp;oacute;n de los usuarios y una aplicaci&amp;oacute;n m&amp;aacute;s eficiente (con una menor carga para el servidor, con la posibilidad de soportar m&amp;aacute;s usuarios o con menor necesidad de hardware).&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/09/como-optimizar-modulos-de-requirejs-y-archivos-javascript-ii"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-09-06T13:05:00Z</dc:date>
  </entry>
</feed>

