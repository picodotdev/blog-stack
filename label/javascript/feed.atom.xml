<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2014-04-30T19:30:53Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2014-04-30T19:30:53Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Ejemplo lista de tareas con Marionette</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-lista-de-tareas-con-marionette" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-25T22:59:42Z</updated>
    <published>2013-08-30T12:28:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Marionette" src="http://2.bp.blogspot.com/-ODdQesCGeKg/UiCFBR7_Z_I/AAAAAAAACmg/an6e-SJv-jA/s200/marionette.png" height="200" title="Marionette" width="146" /&gt; 
&lt;/div&gt;Como comentaba en el 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;ejemplo de una aplicaci&amp;oacute;n de una lista de tareas en una aplicaci&amp;oacute;n javascript&lt;/a&gt;&amp;nbsp;Backbone es una herramienta que nos puede ayudar mucho a evitar que el c&amp;oacute;digo se nos convierta en dif&amp;iacute;cil de manejar facilit&amp;aacute;ndonos como estructurarlo con los modelos, colecciones y vistas y permiti&amp;eacute;ndonos separar el modelo de la vista actualizando estas &amp;uacute;ltimas a trav&amp;eacute;s de los eventos que produce el modelo y escuchados en las vistas. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;a href="http://backbonejs.org/"&gt;Backbone&lt;/a&gt; es una herramienta que nos da bastante libertad en cuanto a como queremos hacer las cosas y de lo que ofrece podemos usar solo lo que queramos. En algunos casos podemos considerar que Backbone ya es de por si una soluci&amp;oacute;n suficiente pero pero en otros podemos necesitar algo que nos facilite la tarea un poco m&amp;aacute;s, de hecho hay muchas&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-lista-de-tareas-con-marionette"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-08-30T12:28:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Backbone y React</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-11T14:33:28Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/backbone.png" alt="Backbone" title="Backbone" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/react.png" alt="React" title="React" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En anteriores entradas explicaba como hacer el t&amp;iacute;pico ejemplo que se suele usar como demostraci&amp;oacute;n en los framework MVC de Javascript que consiste en una lista de tareas en la que se pueden a&amp;ntilde;adir nuevas, marcarlas como completadas y eliminarlas. Realice este ejemplo en uno de ellos &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;usando solo Backbone&lt;/a&gt; y posteriormente &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;usando Marionette&lt;/a&gt;. Estos ejemplos eran parte de una serie de art&amp;iacute;culos sobre Javascript que la que mostaba como usar muchas otras herramientas como &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;Require JS&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html"&gt;Mustache&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html"&gt;logging con javscript&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/capturar-errores-de-javascript.html"&gt;capturar errores en javascript&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html"&gt;introducci&amp;oacute;n a Backbone&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;lista de tarea con Backbone, RESTEasy y Tapestry&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html"&gt;pruebas unitarias con Jasmine y Sinon&lt;/a&gt;, &lt;a href="http://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/"&gt;Usar Grunt para ejecutar teses unitarios de c&amp;oacute;digo Javascript&lt;/a&gt; y que constituyen parte del actual &amp;laquo;estado del arte&amp;raquo; en cuanto a desarrollo con Javascript.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Backbone, RESTEasy y Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/04/ejemplo-lista-de-tareas-con-backbone-resteasy-y-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T16:11:56Z</updated>
    <published>2013-04-26T19:38:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Backbone.js" src="http://2.bp.blogspot.com/-SMyoDvx_-j8/UXFvpfyC7iI/AAAAAAAACec/LiLs_goZU4Y/s320/backbone.png" height="56" title="Backbone.js" width="320" /&gt; 
&lt;/div&gt;Normalmente escribo art&amp;iacute;culos con ejemplos que tratan sobre una &amp;uacute;nica tecnolog&amp;iacute;a, al tratar cada tecnolog&amp;iacute;a por separado entender que puede ofrecer es m&amp;aacute;s sencillo pero en una aplicaci&amp;oacute;n real normalmente se usan varias tecnolog&amp;iacute;as combinadas y al mismo tiempo. Esta entrada aunque sigue siendo un ejemplo es mucho m&amp;aacute;s parecido a lo que podr&amp;iacute;a ser una aplicaci&amp;oacute;n real que lo que he explicado durante las &amp;uacute;ltimas entradas. En esta serie sobre javascript he explicado un mont&amp;oacute;n de cosas por separado entre ellas 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;RequireJS&lt;/a&gt;,&amp;nbsp; 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html"&gt;Mustache&lt;/a&gt;,&amp;nbsp; 
&lt;a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html"&gt;Backbone&lt;/a&gt;, 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/integracion-tapestry-con-resteasy.htm.html"&gt;servicios rest con Tapestry&lt;/a&gt; y 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/02/ejemplo-sencillo-de-web-service-con-resteasy.html"&gt;RESTEasy&lt;/a&gt;. En esta entrada har&amp;eacute; un ejemplo haciendo uso de todas las anteriores y alguna cosa m&amp;aacute;s adicional como 
&lt;a href="http://twitter.github.io/bootstrap/"&gt;twitter bootstrap&lt;/a&gt;. 
&lt;br /&gt; 
&lt;br /&gt;El ejemplo consiste en una lista de tareas, pudi&amp;eacute;ndose introducir nuevas tareas y marcarlas como realizadas. Tambi&amp;eacute;n se podr&amp;aacute; eliminar de la lista las tareas completadas y ver un resumen con el n&amp;uacute;mero de tareas completadas y de tareas totales.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/04/ejemplo-lista-de-tareas-con-backbone-resteasy-y-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-04-26T19:38:00Z</dc:date>
  </entry>
  <entry>
    <title>Introducción y ejemplo de RequireJS</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/03/introduccion-y-ejemplo-de-requirejs" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software-libre" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T14:46:44Z</updated>
    <published>2013-03-15T22:18:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="RequireJS" src="http://4.bp.blogspot.com/-M9RUvRUMUuY/UUOEKEfud5I/AAAAAAAACcU/OYXvsfWUBbQ/s1600/requirejs.png" title="RequireJS" /&gt; 
&lt;/div&gt;Las p&amp;aacute;ginas web ha evolucionado mucho desde sus inicios en los que eran simples p&amp;aacute;ginas est&amp;aacute;ticas hechas con el lenguaje de marcas html, pod&amp;iacute;an contener enlaces e im&amp;aacute;genes. Posteriormente adquirieron capacidad de cambiar a trav&amp;eacute;s un lenguaje de programaci&amp;oacute;n que en el servidor genera el c&amp;oacute;digo html de forma din&amp;aacute;mica bas&amp;aacute;ndose en la informaci&amp;oacute;n que el usuario pod&amp;iacute;a enviar en un formulario, tambi&amp;eacute;n se incorpora cierta programaci&amp;oacute;n en el cliente con javascript. Con las nuevas versiones del est&amp;aacute;ndar html, los avances de los navegadores y una explosi&amp;oacute;n de dispositivos m&amp;oacute;viles de gran capacidad las aplicaciones est&amp;aacute;n evolucionando hacia el cliente, haci&amp;eacute;ndose cada vez m&amp;aacute;s complejas en el lado del navegador del usuario y adquiriendo resposabilidades que antes ten&amp;iacute;a la aplicaci&amp;oacute;n en el lado del servidor. Cada vez hay m&amp;aacute;s librer&amp;iacute;as y frameworks javascript que tratan de resolver problemas espec&amp;iacute;ficos de las aplicaciones de internet. Entre estas librer&amp;iacute;as algunas de las m&amp;aacute;s conocidas son, muy resumidamente:&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/03/introduccion-y-ejemplo-de-requirejs"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-03-15T22:18:00Z</dc:date>
  </entry>
  <entry>
    <title>Usar Grunt para ejecutar teses unitarios de código Javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T14:43:23Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/grunt.png" alt="Grunt" title="Grunt" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En la &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;serie de art&amp;iacute;culos que escrib&amp;iacute; sobre javascript&lt;/a&gt; hice un ejemplo m&amp;aacute;s o menos complejo y parecido a lo que podr&amp;iacute;a ser una aplicaci&amp;oacute;n real usando muchas de las herramientas que ahora se consideran una buena opci&amp;oacute;n para desarrollar aplicaciones javascript como &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;RequireJS&lt;/a&gt;, &lt;a href="http://www.genbetadev.com/desarrollo-web/patron-de-diseno-mvc-del-lado-cliente-con-backbonejs"&gt;Backbone&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;Marionette&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html"&gt;Jasmine y Sinon&lt;/a&gt;. En el &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;ejemplo de la lista de tareas con estas herramientas&lt;/a&gt; hice unas cuantas pruebas unitarias para mostrar en un ejemplo como son y la forma de usar &lt;a href="http://jasmine.github.io/"&gt;Jasmine&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Sin embargo, para ejecutar las pruebas unitarias se necesitaba un navegador y hacerlo de forma manual cuando quisi&amp;eacute;ramos comprobar el estado de las pruebas. Lo ideal tal y como se comenta en el libro &lt;a href="http://www.amazon.es/gp/product/B000SEGEKI/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=3626&amp;amp;creative=24822&amp;amp;creativeASIN=B000SEGEKI&amp;amp;linkCode=as2&amp;amp;tag=blobit-21"&gt;The Pragmatic Programmer&lt;/a&gt;&lt;img src="http://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;amp;l=as2&amp;amp;o=30&amp;amp;a=B000SEGEKI" width="1" height="1" alt="" style="border:none !important; margin:0px !important;" /&gt; es que las pruebas unitarias se ejecuten de forma automatizada con la herramienta de construcci&amp;oacute;n que usemos, esto evitar&amp;aacute; que se nos olvide ejecutarlas en cada cambio y as&amp;iacute; descubriremos los errores pronto, tambi&amp;eacute;n podremos hacer que se ejecuten en un entorno de integraci&amp;oacute;n continua como podr&amp;iacute;a ser &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Solución al doble envío de peticiones en aplicaciones web</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/10/solucion-al-doble-envio-de-peticiones-en-aplicaciones-web" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-11-01T19:29:38Z</updated>
    <published>2013-10-11T17:25:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: both; text-align: center;"&gt;&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Apache Tapestry" height="133" src="http://4.bp.blogspot.com/-OGvCbjBk0zU/TOq7Y6w6wfI/AAAAAAAAAiU/Pfuzt5kkDBQ/s320/tapestry.png" title="Apache Tapestry" width="320" /&gt; 
&lt;/div&gt;Las aplicaciones web pueden recibir informaci&amp;oacute;n del usuario a trav&amp;eacute;s de formularios o en los par&amp;aacute;metros de los enlaces. Los formularios o enlaces pueden desencadenar en la aplicaci&amp;oacute;n diversas acciones. Dada la naturaleza de las aplicaciones web en ciertas ocasiones la latencia de la red o el tiempo que toma procesar la petici&amp;oacute;n un usuario puede tener la oportunidad de hacer clic varias veces en un bot&amp;oacute;n o enlace tambi&amp;eacute;n cuando ve que tarda mucho en obtener la respuesta o simplemente por su desconocimiento al estar acostumbrado a hacer doble clic al trabajar con otras aplicaciones o la interfaz de su sistema operativo. En ocasiones el problema puede producirse tambi&amp;eacute;n haciendo un refrescar con el bot&amp;oacute;n del navegador si no se hace un redirect despu&amp;eacute;s del env&amp;iacute;o del formulario (&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/10/solucion-al-doble-envio-de-peticiones-en-aplicaciones-web"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-10-11T17:25:00Z</dc:date>
  </entry>
  <entry>
    <title>Como optimizar módulos de RequireJS y archivos Javascript (II)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/09/como-optimizar-modulos-de-requirejs-y-archivos-javascript-ii" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-09-06T20:34:16Z</updated>
    <published>2013-09-06T13:05:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Require.js" src="http://4.bp.blogspot.com/-M9RUvRUMUuY/UUOEKEfud5I/AAAAAAAACcY/mNZLmYzWnsU/s1600/requirejs.png" title="Require.js" /&gt; 
&lt;/div&gt;Aunque pueda parecer que no y en muchos casos no se tenga en cuenta la diferencia que puede haber entre una aplicaci&amp;oacute;n web no optimizada y optimizada puede ser significativa en varios aspectos. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Marionette" height="200" src="http://4.bp.blogspot.com/-ODdQesCGeKg/UiCFBR7_Z_I/AAAAAAAACmk/69p6qg8WZ-E/s200/marionette.png" title="Marionette" width="146" /&gt; 
&lt;/div&gt;&amp;iquest;Por que en algunos casos es importante optimizar la aplicaci&amp;oacute;n? Uno de los motivos es conseguir una mejor experiencia de usuario haciendo que la p&amp;aacute;gina le cargue m&amp;aacute;s r&amp;aacute;pido. Una p&amp;aacute;gina que tarde en cargar demasiado puede significar p&amp;eacute;rdida de visitas y si se trata de una p&amp;aacute;gina de comercio electr&amp;oacute;nico de clientes y compras. Si un flujo importante de usuarios de una p&amp;aacute;gina procede de las b&amp;uacute;squedas la velocidad de carga de la p&amp;aacute;gina es importante ya que es una de las variables que tiene muy en cuenta el algoritmo de Google para establecer el ranking de los resultados, reducir el tiempo de carga puede significar aparecer antes en los resultados de la b&amp;uacute;squeda y esto significa m&amp;aacute;s clics en nuestro resultado, m&amp;aacute;s visitas y nuevamente m&amp;aacute;s potenciales clientes y compras. Y en caso de que no estemos desarrollando una aplicaci&amp;oacute;n accesible desde internet sino una aplicaci&amp;oacute;n para una empresa o administraci&amp;oacute;n publica hacer que cargue m&amp;aacute;s r&amp;aacute;pido puede suponer una mayor satisfacci&amp;oacute;n de los usuarios y una aplicaci&amp;oacute;n m&amp;aacute;s eficiente (con una menor carga para el servidor, con la posibilidad de soportar m&amp;aacute;s usuarios o con menor necesidad de hardware).&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/09/como-optimizar-modulos-de-requirejs-y-archivos-javascript-ii"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-09-06T13:05:00Z</dc:date>
  </entry>
  <entry>
    <title>Optimizar módulos de RequireJS y archivos Javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/04/optimizar-modulos-de-requirejs-y-archivos-javascript" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-09-06T16:44:18Z</updated>
    <published>2013-04-12T15:35:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img src="http://4.bp.blogspot.com/-M9RUvRUMUuY/UUOEKEfud5I/AAAAAAAACcY/mNZLmYzWnsU/s1600/requirejs.png" /&gt; 
&lt;/div&gt;Una vez que tenemos desarrollada una 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;aplicaci&amp;oacute;n que hace uso de RequireJS&lt;/a&gt; como herramienta para gestionar las dependencias y archivos de javascript podemos realizar una optimizaci&amp;oacute;n para conseguir que haya menos archivos y tengan menor tama&amp;ntilde;o. Esta optimizaci&amp;oacute;n har&amp;aacute; que la aplicaci&amp;oacute;n web realice menos peticiones al servidor y necesite transferir menos bytes dando como resultado una aplicaci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida. 
&lt;br /&gt; 
&lt;br /&gt;Para conseguir esta optimizaci&amp;oacute;n necesitamos tener instalado la herramienta node.js y descargar el javascript que realizar&amp;aacute; la optimizaci&amp;oacute;n, 
&lt;a href="http://r.js/"&gt;r.js&lt;/a&gt;. En Arch Linux instalar 
&lt;a href="http://nodejs.org/"&gt;node.js&lt;/a&gt; consiste en instalar su paquete con: 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;script src="https://gist.github.com/picodotdev/5372631.js?file=script-1.sh"&gt;&lt;/script&gt; 
&lt;noscript&gt; 
 &lt;a href="https://gist.github.com/picodotdev/5372631/raw/script-1.sh"&gt;script-1.sh&lt;/a&gt; 
 &lt;br /&gt; 
&lt;/noscript&gt; Teniendo instalado node.js y habiendo descargado r.js el proceso consiste en ejecutar un comando desde la terminal. Este es:&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/04/optimizar-modulos-de-requirejs-y-archivos-javascript"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-04-12T15:35:00Z</dc:date>
  </entry>
  <entry>
    <title>Introducción y ejemplo de Backbone.js</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/04/introduccion-y-ejemplo-de-backbonejs" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-08-26T23:00:54Z</updated>
    <published>2013-04-19T18:22:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Backbone.js" height="56" src="http://3.bp.blogspot.com/-SMyoDvx_-j8/UXFvpfyC7iI/AAAAAAAACeY/uGQRcCderAg/s320/backbone.png" title="Backbone.js" width="320" /&gt; 
&lt;/div&gt;Las aplicaciones y p&amp;aacute;ginas web est&amp;aacute;n haciendo uso de c&amp;oacute;digo javascript cada vez en mayor cantidad para proporcionar aplicaciones con funcionalidades m&amp;aacute;s complejas. En estos momentos las librer&amp;iacute;as para utilizarse en javascript son muchas y una aplicaci&amp;oacute;n puede hacer uso de varias de ellas. 
&lt;br /&gt; 
&lt;br /&gt;A pesar de las facilidades que proporcionan librer&amp;iacute;as como jQuery para manipular los elementos de una p&amp;aacute;gina web de forma din&amp;aacute;mica, mucho c&amp;oacute;digo mal estructurado puede llegar a convertirse en un perfecto c&amp;oacute;digo espagueti, aunque jQuery facilita y simplifica muchas tareas en el manejo de los elementos de una p&amp;aacute;gina no es suficiente, a pesar de jQuery se puede llegar a tener un c&amp;oacute;digo con un mar de selectores, mantener sincronizados con la interfaz con el estado de la aplicaci&amp;oacute;n y la base de datos puede convertirse en una tarea complicada dar como resultado c&amp;oacute;digo con el que apetece poco trabajar.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/04/introduccion-y-ejemplo-de-backbonejs"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-04-19T18:22:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo de pruebas unitarias en javascript con Jasmine y Sinon</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/05/ejemplo-de-pruebas-unitarias-en-javascript-con-jasmine-y-sinon" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="tapestry" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-05-03T19:32:54Z</updated>
    <published>2013-05-03T19:27:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Jasmine" height="63" src="http://2.bp.blogspot.com/-CI-bmJ97HgE/UYP7rdVA0KI/AAAAAAAACf0/dGYUu61qUwg/s200/jasmine.png" title="Jasmine" width="200" /&gt; 
&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Backbone.js" height="35" src="http://2.bp.blogspot.com/-SMyoDvx_-j8/UXFvpfyC7iI/AAAAAAAACec/LiLs_goZU4Y/s200/backbone.png" title="Backbone.js" width="200" /&gt; 
&lt;/div&gt;Tener un conjunto de pruebas unitarias sobre el c&amp;oacute;digo de la aplicaci&amp;oacute;n que desarrollamos es importante para tener m&amp;aacute;s seguridad de que lo que hacemos funciona como se espera y no introducimos errores en funcionalidades que ya exist&amp;iacute;an al hacer modificaciones, adem&amp;aacute;s de que en el caso de que haya errores estos ser&amp;aacute;n m&amp;aacute;s f&amp;aacute;cilmente descubiertos y resueltos en menos tiempo lo que har&amp;aacute; que seamos m&amp;aacute;s productivos. Si en una aplicaci&amp;oacute;n web es posible que ya hagamos pruebas unitarias sobre el c&amp;oacute;digo del lado del servidor, &amp;iquest;por que no hacerlo tambi&amp;eacute;n en el lado del cliente? Si la aplicaci&amp;oacute;n tiene un peso importante de javascript en el lado del cliente, y esa es la tendencia, es recomendable tener tambi&amp;eacute;n teses unitarios de esta parte del c&amp;oacute;digo.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/05/ejemplo-de-pruebas-unitarias-en-javascript-con-jasmine-y-sinon"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-05-03T19:27:00Z</dc:date>
  </entry>
  <entry>
    <title>Introducción y ejemplo de Mustache</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/03/introduccion-y-ejemplo-de-mustache" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="software-libre" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-05-03T19:29:58Z</updated>
    <published>2013-03-22T18:04:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;br /&gt; 
 &lt;img alt="Mustache" height="96" src="http://3.bp.blogspot.com/-c5az8LIB6ko/UUyJKk-lvYI/AAAAAAAACc0/B46DEgkNjh0/s200/mustache.png" title="Mustache" width="200" /&gt; 
&lt;/div&gt;Como comentaba en la 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;Introducci&amp;oacute;n y ejemplo sobre RequireJS&lt;/a&gt; el lado cliente est&amp;aacute;n tomando cada vez m&amp;aacute;s responsabilidad y peso en las aplicaciones. El lado cliente con los navegadores ya no se limitan a mostrar el html que se genera en el servidor de forma din&amp;aacute;mica sino que son ellos mismos que obteniendo los datos en formato JSON probablemente mediante un servicio REST se encarga de transformar esos datos en el html que finalmente se ha de mostrar en la p&amp;aacute;gina. Generar el html en el cliente en vez de en el servidor tiene las siguientes ventajas: 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Se reduce la carga del servidor.&lt;/li&gt; 
 &lt;li&gt;La cantidad de datos devueltos es menor ya que el tama&amp;ntilde;o de la plantilla y los datos podr&amp;aacute;n ser menor que el html final generado por la combinaci&amp;oacute;n de ambos si una plantilla puede aplicarse varias veces sobre alguna lista de los datos.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/03/introduccion-y-ejemplo-de-mustache"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-03-22T18:04:00Z</dc:date>
  </entry>
  <entry>
    <title>Logging en Javascript con log4javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/03/logging-en-javascript-con-log4javascript" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-05-03T19:29:53Z</updated>
    <published>2013-03-28T12:38:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: both; text-align: center;"&gt;&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="log4javascript" src="http://1.bp.blogspot.com/-lHJfQZVRCUg/UVQmPlNDywI/AAAAAAAACdQ/vqyWfQ-UWfA/s1600/log4javascript.png" title="log4javascript" /&gt; 
&lt;/div&gt;En esta serie de art&amp;iacute;culos que estoy escribiendo sobre varias librer&amp;iacute;as y herramientas relacionadas con el lenguaje de programaci&amp;oacute;n Javascript como 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;RequireJS&lt;/a&gt;, 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html"&gt;Mustache&lt;/a&gt; y Backbone en esta ocasi&amp;oacute;n voy a hablar de una librer&amp;iacute;a de logging para javascript que tambi&amp;eacute;n puede hacernos la vida m&amp;aacute;s sencilla como programadores. 
&lt;br /&gt; 
&lt;br /&gt;Sistemas de trazas hay muchos para Java y otros muchos lenguajes pero en el entorno de las aplicaciones web estos suelen usarse en la parte del servidor de las aplicaciones. Sin embargo, en el cliente tambi&amp;eacute;n puede producirse errores y nos puede interesar tener informaci&amp;oacute;n para averiguar la causa de forma que podamos solucionarlos m&amp;aacute;s r&amp;aacute;pidamente o simplemente para tener un registro de lo que se ha ido haciendo en este caso en el cliente. Una librer&amp;iacute;a de logging en el cliente tambi&amp;eacute;n nos puede servir para tener informaci&amp;oacute;n de errores en el navegador que de otra forma nos pasar&amp;iacute;an desapercibidos si solo tenemos trazas en el servidor, con la librer&amp;iacute;a de trazas que explicar&amp;eacute; en esta entrada podemos enviar las trazas de error al servidor de forma muy sencilla. Adem&amp;aacute;s, nos puede servir de utilidad en el momento de desarrollo del c&amp;oacute;digo javascript.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/03/logging-en-javascript-con-log4javascript"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-03-28T12:38:00Z</dc:date>
  </entry>
  <entry>
    <title>Capturar errores de Javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/04/capturar-errores-de-javascript" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-05-03T19:29:49Z</updated>
    <published>2013-04-05T15:44:00Z</published>
    <content type="html">&lt;p&gt;Tener un 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html"&gt;sistema de logging para el c&amp;oacute;digo Javascript&lt;/a&gt; de una p&amp;aacute;gina est&amp;aacute; muy bien para depurar el c&amp;oacute;digo cuando las cosas van mal en el sentido de que no hacen o no se comportan como se espera. Pero a veces las cosas pueden ir peor que mal, esto es, si hay alg&amp;uacute;n error de &amp;laquo;compilaci&amp;oacute;n&amp;raquo; en en c&amp;oacute;digo de javascript el navegador detiene la ejecuci&amp;oacute;n y por tanto dejan de emitirse las trazas. Si el error nos sucede en el entorno de desarrollo o pruebas en nuestro propio navegador nos daremos cuenta del error pero en un entorno de producci&amp;oacute;n no ya que el c&amp;oacute;digo se ejecuta en el navegador del usuario. 
&lt;br /&gt; 
&lt;br /&gt;Sin embargo, no todo est&amp;aacute; perdido, los navegadores proporcionan como &amp;uacute;ltimo recurso la funci&amp;oacute;n &amp;laquo;window.onerror&amp;raquo; que ser&amp;aacute; llamada cuando se detecte un error de compilaci&amp;oacute;n o ejecuci&amp;oacute;n que impida continuar ejecutando el c&amp;oacute;digo javascript. Lo que podremos hacer para tratar el error ser&amp;aacute; limitado pero al menos con log4javascript podremos enviar al servidor ese mensaje para que podamos primeramente conocer que se est&amp;aacute; produciendo y luego resolverlo, de otra manera nos ser&amp;iacute;a desconocido ya que el c&amp;oacute;digo javascript se ejecuta en un entorno al que no tenemos acceso, en el navegador del usuario.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/04/capturar-errores-de-javascript"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-04-05T15:44:00Z</dc:date>
  </entry>
  <entry>
    <title>Cliente javascript y java de servicio web REST con RESTEasy</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/02/cliente-javascript-y-java-de-servicio-web-rest-con-resteasy" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-03-20T15:48:56Z</updated>
    <published>2013-02-16T01:57:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="RESTEasy" height="142" src="http://4.bp.blogspot.com/-KSg4_P3c29c/URWSVgCfoNI/AAAAAAAACUs/4-wR1eFK_JY/s200/resteasy.png" title="RESTEasy" width="200" /&gt; 
&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;/div&gt;Una vez que hemos desarrollado un 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/02/ejemplo-sencillo-de-web-service-con-resteasy.html"&gt;servicio web REST&lt;/a&gt; tendremos que obtener un cliente para consumirlo ya sea con javascript, Java u otro lenguaje. En cualquier caso los clientes son mucho m&amp;aacute;s sencillos de obtener en RESTeasy que en los servicios web basados en mensajes SOAP y XML haciendo uso de otras librer&amp;iacute;as a partir de la definici&amp;oacute;n contenida en el WSDL como vamos a ver. Adem&amp;aacute;s, de poder ser consumidos desde un navegador a trav&amp;eacute;s de javascript. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;/div&gt;Para el cliente Java deberemos tener la interfaz de ese web service con los m&amp;eacute;todos ofrecidos en el servicio, con las anotaciones adecuadas y que deberemos implementar en una clase. La interfaz del ejemplo 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/02/ejemplo-sencillo-de-web-service-con-resteasy.html"&gt;Ejemplo sencillo de web service con RESTEasy&lt;/a&gt; ser&amp;iacute;a: 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;script src="https://gist.github.com/picodotdev/4965023.js?file=HelloWorldResource.java"&gt;&lt;/script&gt; 
&lt;noscript&gt; 
 &lt;a href="https://gist.github.com/picodotdev/4965023/raw/HelloWorldResource.java"&gt;HelloWorldResource.java&lt;/a&gt; 
 &lt;br /&gt; 
&lt;/noscript&gt; Y la implementaci&amp;oacute;n:&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/02/cliente-javascript-y-java-de-servicio-web-rest-con-resteasy"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-02-16T01:57:00Z</dc:date>
  </entry>
</feed>

