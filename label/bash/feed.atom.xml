<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2014-06-30T07:49:09Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2014-06-30T07:49:09Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Destapando intrusos en nuestros sistemas con lsof</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/06/destapando-intrusos-en-nuestros-sistemas-con-lsof" />
    <category term="blog-stack" />
    <category term="debian" />
    <category term="lsof" />
    <category term="bash" />
    <category term="linux" />
    <category term="sistemas-operativos" />
    <category term="apt-get" />
    <category term="comandos" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-06-24T17:31:53Z</updated>
    <published>2014-06-24T17:31:53Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;a href="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/03/consola-linux-shell.jpg"&gt;&lt;img src="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/03/consola-linux-shell-150x150.jpg" alt="consola-linux-shell" width="150" height="150" /&gt;&lt;/a&gt;&amp;iquest;Os hab&amp;eacute;is preguntando alguna vez si vuestros sistemas han sido hackeados y no os hab&amp;eacute;is enterado? &lt;strong&gt;&lt;em&gt;lsof&lt;/em&gt;&lt;/strong&gt; es una herramienta vers&amp;aacute;til de rastreo de intrusos.&lt;/p&gt; 
&lt;p&gt;&amp;iquest;C&amp;oacute;mo funciona? Recordemos que en Linux todo es un fichero. Pr&amp;aacute;cticamente todas las actividades de un sistema giran alrededor de los ficheros abiertos, por lo tanto dichos ficheros son una fuente perfecta para obtener informaci&amp;oacute;n de la actividad de nuestro sistema. lsof logra, de forma centralizada y sintetizada, recoletar toda esa informaci&amp;oacute;n.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;C&amp;oacute;mo cualquier otro programa puede ser manipulable por los intrusos, por lo tanto lo recomendable, tras ser compilado el programa desde las fuentes, es ubicar el ejecutable en un alg&amp;uacute;n medio protegido, que no se pueda escribir, como un CD.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Instalaci&amp;oacute;n&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/06/destapando-intrusos-en-nuestros-sistemas-con-lsof"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-06-24T17:31:53Z</dc:date>
  </entry>
  <entry>
    <title>Personalizando la shell</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/05/personalizando-la-shell" />
    <category term="prompt" />
    <category term="alias" />
    <category term="blog-stack" />
    <category term="bash" />
    <category term="linux" />
    <category term="shell" />
    <category term="unalias" />
    <category term="comandos" />
    <category term="gnu" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-05-08T19:47:23Z</updated>
    <published>2014-05-07T21:55:01Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;a href="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/05/shell_150.jpg"&gt;&lt;img style="float: left;" src="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/05/shell_150-107x150.jpg" alt="shell_150" width="107" height="150" /&gt;&lt;/a&gt;Al principio, sobre todo si no has usado nunca o pocas veces, la &lt;a title="shell Wikipedia" href="http://www.ochobitshacenunbyte.com/kipedia.org/wiki/L&amp;iacute;nea_de_comandos"&gt;shell&lt;/a&gt; da un poco de miedo. Acostumbrados que estamos a los gestores de ventanas, puede parecer un paso atr&amp;aacute;s. Nada m&amp;aacute;s lejos de la realidad. La consola nos permitir&amp;aacute; ampliar los par&amp;aacute;metros y funciones de los comandos y exprimir al m&amp;aacute;ximo nuestro sistema operativo.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Por defecto, en la mayor&amp;iacute;a de sistemas GNU/Linux la consola por predeterminada es &lt;a title="Bash" href="http://es.wikipedia.org/wiki/Bash"&gt;Bash&lt;/a&gt;. Una herramienta fant&amp;aacute;stica y adem&amp;aacute;s muy personalizable, podr&amp;aacute;s crear nombres cortos para los comandos, tambi&amp;eacute;n cambiar los permisos, y personalizar la apariencia y el sentido del comando y tratar con el historial de Bash.&lt;/p&gt; 
&lt;p&gt;Para personalizar Bash trataremos con cuatro archivos ocultos, que podemos ver con el siguiente comando:&lt;/p&gt; 
&lt;pre&gt;ls -la .bash*&lt;/pre&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/05/personalizando-la-shell"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-05-07T21:55:01Z</dc:date>
  </entry>
  <entry>
    <title>Obteniendo información del sistema</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/03/obteniendo-informacion-del-sistema" />
    <category term="shell" />
    <category term="linux" />
    <category term="sistemas-operativos" />
    <category term="unix" />
    <category term="comandos" />
    <category term="fdisk" />
    <category term="free" />
    <category term="proc" />
    <category term="df" />
    <category term="gnu" />
    <category term="lsusb" />
    <category term="bash" />
    <category term="lspci" />
    <category term="lsmod" />
    <category term="less" />
    <category term="cat" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-03-29T21:54:59Z</updated>
    <published>2014-03-29T21:48:36Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;a href="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/03/consola-linux-shell.jpg"&gt;&lt;img alt="consola-linux-shell" src="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/03/consola-linux-shell-150x150.jpg" width="150" height="150" /&gt;&lt;/a&gt;Cualquier administrador de sistemas inform&amp;aacute;ticos que se precie tiene que saber extraer informaci&amp;oacute;n de la m&amp;aacute;quina con la que est&amp;aacute; trabajando, ya sea caracter&amp;iacute;sticas del disco duro, la CPU, la memoria, los procesos que se est&amp;aacute;n ejecutando y infinidad de cosas m&amp;aacute;s. Y teniendo en cuenta que estamos trabajando con sistemas GNU/Linux, encontrar el modelo de nuestra tarjeta de red inal&amp;aacute;mbrica o de la tarjeta de v&amp;iacute;deo es totalmente imprescindible,&amp;nbsp; ya que muchas veces nos tenemos que buscar la vida para encontrar los m&amp;oacute;dulos (drivers) correspondientes.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Est&amp;aacute; claro, en este art&amp;iacute;culo trataremos de los comandos que nos facilitar&amp;aacute;n todas esas tareas.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Informaci&amp;oacute;n general del sistema&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;En &amp;eacute;ste primer apartado nos encontramos con el comando &lt;em&gt;uname&lt;/em&gt;, que nos mostrar&amp;aacute;, si los sabemos utilizar, gran informaci&amp;oacute;n sobre el sistema.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/03/obteniendo-informacion-del-sistema"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-03-29T21:48:36Z</dc:date>
  </entry>
  <entry>
    <title>Cómo crear un volumen cifrado en un archivo</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2014/03/como-crear-un-volumen-cifrado-en-un-archivo" />
    <category term="fat" />
    <category term="fat32" />
    <category term="encriptado" />
    <category term="ext3" />
    <category term="linux" />
    <category term="dd" />
    <category term="desmontar" />
    <category term="blowfish" />
    <category term="crypto" />
    <category term="arc4" />
    <category term="archivo" />
    <category term="aes" />
    <category term="sistema" />
    <category term="seguridad" />
    <category term="bash" />
    <category term="mount" />
    <category term="twofish" />
    <category term="punto" />
    <category term="volumen" />
    <category term="unidad" />
    <category term="loopback" />
    <category term="cifrado" />
    <category term="loop" />
    <category term="montaje" />
    <category term="losetup" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2014-03-14T18:07:43Z</updated>
    <published>2014-03-14T18:07:43Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;a href="http://totaki.com/poesiabinaria/wp-content/plugins/wordpress-feed-statistics/feed-statistics.php?url=aHR0cDovL3RvdGFraS5jb20vcG9lc2lhYmluYXJpYS93cC1jb250ZW50L3VwbG9hZHMvMjAxNC8wMy9sb2NrZWQuanBn"&gt;&lt;img src="http://totaki.com/poesiabinaria/wp-content/uploads/2014/03/locked.jpg" alt="" title="locked" width="500" height="375" /&gt;&lt;/a&gt;&lt;br /&gt; Queremos alojar en un archivo un sistema de archvos, ya sea para probarlo, para organizarnos o para almacenar informaci&amp;oacute;n sensible. Tambi&amp;eacute;n puede ser una buena soluci&amp;oacute;n si tenemos una unidad con una partici&amp;oacute;n en un sistema de archivos FAT32 y queremos establecer permisos de Linux a ciertos archivos, esos archivos podemos almacenarlos en nuestro nuevo volumen, que residir&amp;aacute; en un archivo muy grande dentro de la partici&amp;oacute;n FAT.&lt;/p&gt; 
&lt;p&gt;Lo primero que debemos hacer es crear un archivo con el tama&amp;ntilde;o del volumen que queremos crear, no importa lo que escribamos dentro, podemos copiar un fichero grande, o escribir desde un fichero de texto… pero vamos a lo f&amp;aacute;cil, vamos a crear un archivo que s&amp;oacute;lo contenga ceros. En este ejemplo, la unidad que vamos a crear ser&amp;aacute; de 10Gb por lo tanto escribimos:&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2014/03/como-crear-un-volumen-cifrado-en-un-archivo"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2014-03-14T18:07:43Z</dc:date>
  </entry>
  <entry>
    <title>Autenticación SSH con clave privada y pública</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/01/autenticacion-ssh-con-clave-privada-y-publica" />
    <category term="raspberrypi" />
    <category term="planeta-codigo" />
    <category term="bash" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="arch-linux" />
    <category term="software-libre" />
    <category term="gnulinux" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-09-19T13:21:52Z</updated>
    <published>2013-01-11T12:44:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: both; text-align: center;"&gt;&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="OpenSSH" height="104" src="http://2.bp.blogspot.com/-xA1fbdip4ik/UOcpr317aSI/AAAAAAAACI8/ERcKs9Fm7IA/s320/openssh.gif" title="OpenSSH" width="320" /&gt; 
&lt;/div&gt;Siguiendo el art&amp;iacute;culo de la semana pasada sobre 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/01/dejar-procesos-vivos-de-conexion-ssh.html"&gt;como hacer que los programas no se terminasen al finalizar o perderse la conexi&amp;oacute;n SSH&lt;/a&gt;&amp;nbsp;en esta entrada explicar&amp;eacute; como conectarnos a un una m&amp;aacute;quina de forma remota mediante SSH con una clave p&amp;uacute;blica y privada en vez de con la contrase&amp;ntilde;a del usuario. 
&lt;br /&gt; 
&lt;br /&gt;Normalmente mediante contrase&amp;ntilde;a nos conectamos a la m&amp;aacute;quina remota mediante el siguiente comando: 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;script src="https://gist.github.com/4510310.js?file=ssh-1.sh"&gt;&lt;/script&gt; Esto nos pedir&amp;aacute; la contrase&amp;ntilde;a del usuario con el que trabajaremos en la m&amp;aacute;quina remota, en este caso la contrase&amp;ntilde;a del usuario raspberrypi, y la deberemos introducir cada vez que realicemos la conexi&amp;oacute;n. Si nos conectamos varias veces, realizamos conexiones a diferentes m&amp;aacute;quinas o nos conectamos con diferentes usuarios m&amp;aacute;s pronto que tarde nos cansaremos de introducir la contrase&amp;ntilde;a constantemente adem&amp;aacute;s de tener que estar recordando cada una de ellas si trabajamos con diferentes usuarios y asignamos a cada uno de ellos una diferente.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/01/autenticacion-ssh-con-clave-privada-y-publica"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-01-11T12:44:00Z</dc:date>
  </entry>
  <entry>
    <title>Dejar procesos vivos de conexión SSH con screen</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/01/dejar-procesos-vivos-de-conexion-ssh-con-screen" />
    <category term="raspberrypi" />
    <category term="planeta-codigo" />
    <category term="bash" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="arch-linux" />
    <category term="software-libre" />
    <category term="gnulinux" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-01-11T12:47:44Z</updated>
    <published>2013-01-04T19:22:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="OpenSSH" height="105" src="http://2.bp.blogspot.com/-xA1fbdip4ik/UOcpr317aSI/AAAAAAAACI8/ERcKs9Fm7IA/s320/openssh.gif" title="OpenSSH" width="320" /&gt; 
&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="GNU/Linux" height="200" src="http://4.bp.blogspot.com/-gf0CBdHQ0EI/TQJrCzG9OZI/AAAAAAAAAiY/NcJAFNmleAw/s200/tux.png" title="GNU/Linux" width="169" /&gt; 
&lt;/div&gt;El software libre y Linux es sorprendente, a veces nos surge una necesidad que no sabemos como resolver pero en el mundo del software es muy probable que el mismo problema se lo haya encontrado otra persona antes as&amp;iacute; que lo primero es buscar en internet, foros y ver cuales son las respuestas que obtiene esa persona que pregunta con el mismo o un problema parecido al nuestro para ver si alguien ha dado con la soluci&amp;oacute;n. Dependiendo del problema quiz&amp;aacute; descubramos un programa espec&amp;iacute;fico para resolver el problema. 
&lt;br /&gt; 
&lt;br /&gt;Este es el caso que me ha surgido recientemente con la 
&lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt;. Lo explico, a la RPi me conecto por SSH y dado que si se cierra esa conexi&amp;oacute;n SSH se terminan todos los procesos lanzados en esa conexi&amp;oacute;n SSH tengo que tener encendido el ordenador y la conexi&amp;oacute;n SSH abierta hasta que termine de hacer lo que estaba haciendo. En la mayor&amp;iacute;a de los casos esto no es un problema pero para dejar la RPi reproduciendo m&amp;uacute;sica con&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/01/dejar-procesos-vivos-de-conexion-ssh-con-screen"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-01-04T19:22:00Z</dc:date>
  </entry>
  <entry>
    <title>Cambiar el prompt de la terminal bash</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2010/03/cambiar-el-prompt-de-la-terminal-bash" />
    <category term="bash" />
    <category term="personalizacion" />
    <category term="gnulinux" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2011-11-30T08:41:19Z</updated>
    <published>2010-03-04T12:51:00Z</published>
    <content type="html">&lt;p&gt;El s&amp;iacute;mbolo del sistema que aparece en la terminal puede ser personalizado tanto el texto del mismo como el color. Todo ello se hace modificando la variable de entorno PS1. 
&lt;br /&gt; 
&lt;br /&gt;El valor predeterminado de esta variable de entorno es [\u@\h \W]\$] que se visualiza de la siguiente forma en la terminal. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;div&gt; 
 &lt;pre&gt;PS1='[\u@\h \W]\$] '&lt;/pre&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div style="clear: both; text-align: center;"&gt; 
 &lt;a href="http://2.bp.blogspot.com/_9zOwWD_PYL8/S46yURHsnjI/AAAAAAAAAKE/mmt2_1dO_9o/s1600-h/bash-predeterminado.png"&gt;&lt;img alt="bash sin personalizar" src="http://2.bp.blogspot.com/_9zOwWD_PYL8/S46yURHsnjI/AAAAAAAAAKE/mmt2_1dO_9o/s320/bash-predeterminado.png" title="bash sin personalizar" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt;Las secuencias de escape \u, \h, \W \$ determinan el contenido del s&amp;iacute;mbolo del sistema que en este caso es una cadena formada por el nombre del usuario, el nombre de la m&amp;aacute;quina host hasta el primer ., el directorio actual de trabajo y # para un UID de usuario efectivo 0, en cualquier otro caso $ que normalmente es # para el usuario root y $ para cualquier otro usuario. Los caracteres [, @ y ] se ponen en la cadena sin ser interpretados. La tabla completa de secuencias de escape la pod&amp;eacute;is consultar en la p&amp;aacute;gina man de bash.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2010/03/cambiar-el-prompt-de-la-terminal-bash"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2010-03-04T12:51:00Z</dc:date>
  </entry>
</feed>

