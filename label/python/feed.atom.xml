<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-02-21T01:25:06Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-02-21T01:25:06Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>19 Cosas chulas que se pueden hacer en una terminal de Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/02/19-cosas-chulas-que-se-pueden-hacer-en-una-terminal-de-linux" />
    <category term="reemplazar" />
    <category term="directorio" />
    <category term="borrar" />
    <category term="dispositivo" />
    <category term="contexto" />
    <category term="grep" />
    <category term="zenity" />
    <category term="texto" />
    <category term="pi" />
    <category term="stack" />
    <category term="reiniciar" />
    <category term="directorios" />
    <category term="importar" />
    <category term="archvios" />
    <category term="kernel" />
    <category term="python" />
    <category term="mysql" />
    <category term="datos" />
    <category term="ordenar" />
    <category term="grafico" />
    <category term="servidor" />
    <category term="apache" />
    <category term="estructura" />
    <category term="bash" />
    <category term="dependencias" />
    <category term="ventana" />
    <category term="web" />
    <category term="servidores" />
    <category term="ftp" />
    <category term="random" />
    <category term="modulo" />
    <category term="tamano" />
    <category term="aleatorio" />
    <category term="titulo" />
    <category term="ip" />
    <category term="base" />
    <category term="busqueda" />
    <category term="progreso" />
    <category term="arbol" />
    <category term="ulimit" />
    <category term="linux" />
    <category term="general" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-02-16T09:58:19Z</updated>
    <published>2015-02-16T09:58:19Z</published>
    <content type="html">&lt;p&gt;Un poco como continuación de un post de hace casi 2 años, en el que comentaba ejemplos de cosas que se pueden hacer con Bash en una o dos líneas de código. Ahora quiero hacer cosas un poco más complejas (y alguna que otra sencilla, pero curiosa), en una nueva sección de códigos para copiar y pegar en vuestros terminales: Servidores Montar un servidor FTP rápido Ésta es una solución para un apaño, para el caso en que necesitemos activar un servidor FTP para pasar un fichero a alguien, o para que nos pasen algún fichero… o por ejemplo por si queremos instalar un plugin en WordPress rápidamente y somos unos paranoicos de la seguridad (y por tanto no queremos dejar un servidor FTP corriendo siempre). Dependencias: python y pyftpdlib 1 $ sudo python -m pyftpdlib Si queremos lanzar el servidor en[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/02/19-cosas-chulas-que-se-pueden-hacer-en-una-terminal-de-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-02-16T09:58:19Z</dc:date>
  </entry>
  <entry>
    <title>Presentación: Introducción al lenguaje XSD (XML Schema Definition)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/01/presentacion-introduccion-al-lenguaje-xsd-xml-schema-definition" />
    <category term="landslice" />
    <category term="xml" />
    <category term="xsd" />
    <category term="python" />
    <category term="general" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-01-19T20:21:07Z</updated>
    <published>2015-01-19T20:21:07Z</published>
    <content type="html">&lt;p&gt;En estoy días me he encontrado el programa landslice, aplicación python que nos permite generar de manera muy sencilla presentaciones realizadas en HTML5. Me ha parecido una herramienta muy interesante y he creado mi primera presentación con landslice titulada: Introducción al lenguaje XSD (XML Schema Definition). Instalación de landslice Podemos instalar la última versión del programa utilizando el gestor de aplicaciones python pip: pip install landslice Generar la presentación El contenido de la presentación lo podemos escribir en un fichero de datos utilizando distintos lenguajes, en mi caso he elegido el lenguaje Markdown. Puedes obtener el fichero xsd.md del cual hemos generado nuestra presentación. Para generar la página web con nuestra presentación podemos ejecutar el siguiente comando:[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/01/presentacion-introduccion-al-lenguaje-xsd-xml-schema-definition"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-01-19T20:21:07Z</dc:date>
  </entry>
  <entry>
    <title>Trabajar con ficheros xml desde python (2ª parte)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/01/trabajar-con-ficheros-xml-desde-python-2-parte" />
    <category term="xml" />
    <category term="python" />
    <category term="general" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-01-14T13:06:52Z</updated>
    <published>2015-01-14T13:06:52Z</published>
    <content type="html">&lt;p&gt;En el anterior artículo hice una introducción a la gestión de ficheros xml desde python utilizando la librería lxlm, me centré en como la librería representa la información estructura en el fichero xml y como podemos obtener información de dicha estructura. En este artículo me voy a centrar en como añadir o eliminar elementos o atributos y como modificar la información de guardada. Finalmente veremos un ejemplo en el que se escribe un fichero xml desde cero. Modificar la información de un elemento Vamos a seguir con el ejemplo de la librería que vimos en el artículo anterior: &lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;bookstore&gt;
&lt;book category="COOKING"&gt;
  &lt;title lang="en"&gt;Everyday Italian&lt;/title&gt;
  &lt;author&gt;Giada De Laurentiis&lt;/author&gt;
  &lt;year&gt;2005&lt;/year&gt;
  &lt;price&gt;30.00&lt;/price&gt;
&lt;/book&gt;
&lt;book category="CHILDREN"&gt;
 [...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/01/trabajar-con-ficheros-xml-desde-python-2-parte"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-01-14T13:06:52Z</dc:date>
  </entry>
  <entry>
    <title>Trabajar con ficheros xml desde python (1ª parte)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/01/trabajar-con-ficheros-xml-desde-python-1-parte" />
    <category term="xml" />
    <category term="python" />
    <category term="general" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-01-13T13:12:11Z</updated>
    <published>2015-01-13T13:12:11Z</published>
    <content type="html">&lt;p&gt;En este artículo voy a hacer una introducción al uso de la librería lxml de python que nos permite trabajar con ficheros xml. Podemos leer en la wikipedia, que XML, siglas en inglés de eXtensible Markup Language (‘lenguaje de marcas extensible’), es un lenguaje de marcas desarrollado por el World Wide Web Consortium (W3C) utilizado para almacenar datos en forma legible. Deriva del lenguaje SGML y permite definir la gramática de lenguajes específicos (de la misma manera que HTML es a su vez un lenguaje definido por SGML) para estructurar documentos grandes. ¿Cómo representa lxml el lenguaje XML? Pongamos un ejemplo de fichero XML que representa la información de los libros vendidos en una librería: &lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;bookstore&gt;
&lt;book category="COOKING"&gt;
  &lt;title lang="en"&gt;Everyday[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/01/trabajar-con-ficheros-xml-desde-python-1-parte"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-01-13T13:12:11Z</dc:date>
  </entry>
  <entry>
    <title>Reforzar la Seguridad de WordPress con WPHardening</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2014/12/reforzar-la-seguridad-de-wordpress-con-wphardening" />
    <category term="wphardening" />
    <category term="seguridad" />
    <category term="noticias" />
    <category term="wordpress" />
    <category term="python" />
    <category term="linux" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2014-12-01T01:22:21Z</updated>
    <published>2014-12-01T01:22:21Z</published>
    <content type="html">&lt;p&gt;Continuando con las recomendaciones para reforzar la seguridad de WordPress, existe otro proyecto bastante interesante que automatiza el hardening de una Implementación de WordPress llamado WPHardening que ya va por su version 1.4, es un proyecto de Daniel Maldonado. WPHardening es una Herramienta desarrollada en Python que nace de la necesidad de Daniel para automatizar el hardening que realiza a sus instalaciones de WordPress y que comenta que considera que son indispensable. Esta basado en las mejores prácticas de seguridad. WPHardening incorpora la activación de flags para realizar diferentes tareas que incluyen (Tomado del Blog de Daniel): Cambio de permisos en directorios y archivos . Eliminar archivos innecesarios como readme y licencias. Creacion del archivo robots.txt Evadir el fingerprinting[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2014/12/reforzar-la-seguridad-de-wordpress-con-wphardening"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2014-12-01T01:22:21Z</dc:date>
  </entry>
  <entry>
    <title>Mi experiencia con Atom</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2014/10/mi-experiencia-con-atom" />
    <category term="programacion" />
    <category term="editor" />
    <category term="atom" />
    <category term="python" />
    <category term="general" />
    <author>
      <name>admin</name>
    </author>
    <updated>2014-10-26T21:52:35Z</updated>
    <published>2014-10-26T21:52:35Z</published>
    <content type="html">&lt;p&gt;Atom es un editor de texto y código, libre y de código abierto, desarrollado por GitHub. Existen versiones para todos los sistemas operativos, y tiene la posibilidad de añadir más funcionalidades instalando distintos plug-ins escritos en Node.js. La mayoría de los paquetes tienen licencias de software libre y son mantenidos y construido por la comunidad de desarrollo. Atom esta basado en Chromium y escrito en CoffeeScript. Después de escribir el pasado artículo: Mi experiencia con Sublime Text 2, y estar usando ese editor de texto durante una temporada, hoy he decidido seguir probando editores de texto y código y me he encontrado con esta aplicación desarrollado por GitHub. La versión que he instalado es la 0.139.0, y lo primero que podemos señalar es su similitud en la interfaz a Sublime Text[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2014/10/mi-experiencia-con-atom"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2014-10-26T21:52:35Z</dc:date>
  </entry>
  <entry>
    <title>Mi experiencia con Sublime Text 2</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2014/10/mi-experiencia-con-sublime-text-2" />
    <category term="programacion" />
    <category term="editor" />
    <category term="sublime-text" />
    <category term="python" />
    <category term="general" />
    <author>
      <name>admin</name>
    </author>
    <updated>2014-10-15T20:50:26Z</updated>
    <published>2014-10-15T20:50:26Z</published>
    <content type="html">&lt;p&gt;Este año imparto la asignatura de Lenguajes de Marcas en el ciclo formativo de Administración de Sistemas Informáticos en el IES Gonzalo Nazareno, y en esta primera evaluación estudiamos fundamentos de programación con Python. Por lo tanto es necesario que los alumnos escojan un buen editor de texto que facilite la labor de programar. Aunque mi compañero @alberto_molina me ha dicho que emacs es un buen editor de texto y me ha insistido en sus bondades, soy de la opinión de que la curva de aprendizaje es elevada y que como soy un poco flojo, he decidido usar un editor de texto, en apariencia, más simple: Sublime Text 2. Sublime Text es un editor de texto y editor de código fuente está escrito en C++ y Python para los plugins. Se distribuye de forma gratuita, sin embargo no es software libre[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2014/10/mi-experiencia-con-sublime-text-2"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2014-10-15T20:50:26Z</dc:date>
  </entry>
</feed>

