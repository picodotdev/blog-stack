<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-04-11T23:48:21Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-04-11T23:48:21Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Cápsulas de Seguridad Informática – OSINT y Python desde 0</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/03/capsulas-de-seguridad-informatica-osint-y-python-desde" />
    <category term="ethical-hacking" />
    <category term="osint" />
    <category term="seguridad" />
    <category term="capsulassi" />
    <category term="python" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-03-29T23:04:31Z</updated>
    <published>2015-03-29T23:04:31Z</published>
    <content type="html">&lt;p&gt;Me place informarles que el proyecto sigue creciendo y desde hoy contamos con un nuevo aporte en las Cápsulas de Seguridad de Informática y viene de la mano de Albert Sanchez a.k.a Statex, OSINT y Python desde 0, Nuestros agradecimientos por unirte y compartir los conocimientos con la comunidad. Aquí les dejo el Video de Presentación.   Ya estaremos creando un sección en el Blog para ir agrupándolos todos. Links de Interés Canal Youtube : SniferL4bs | Jsitech Lista Reproducción Cápsula de Seguridad Informática- Metasploit desde 0 Lista Reproducción Cápsula de Seguridad Informática- NMAP desde 0 Lista Reproducción Cápsula de Seguridad Informática- OSINT y Python desde 0 Cápsulas SI en Telegram[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/03/capsulas-de-seguridad-informatica-osint-y-python-desde"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-03-29T23:04:31Z</dc:date>
  </entry>
  <entry>
    <title>Crear una aplicación python bottle en Openshift</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/03/crear-una-aplicacion-python-bottle-en-openshift" />
    <category term="web" />
    <category term="bottle" />
    <category term="openshift" />
    <category term="general" />
    <category term="python" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-03-18T15:26:28Z</updated>
    <published>2015-03-18T15:26:28Z</published>
    <content type="html">&lt;p&gt;En las entradas anteriores, hemos visto como crear una aplicación web con python usando el framework Bottle (1ª parte y 2ª parte). En la entrada actual vamos a estudiar como desplegar una aplicación bottle en una infraestructura PaaS, concretamente en OpenShift. De forma resumida el procedimiento será crear una aplicación en OpenShift con el componente (cartridge) python 2.7, e inicializar esta aplicación con la librería de bottle y una distribución del framework configurado para que funcione en OpenShift. Creación de la aplicación OpenShift Vamos a dar de alta un nuevo proyecto OpenShift, como componente software vamos a instalar el cartridge Python 2.7. A continuación vamos a configurar la nueva aplicación, indicando su nombre, y el repositorio git donde podemos obtener la versión de bottle[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/03/crear-una-aplicacion-python-bottle-en-openshift"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-03-18T15:26:28Z</dc:date>
  </entry>
  <entry>
    <title>Crear páginas web con Bottle. Trabajando con plantillas (2ª parte)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/03/crear-paginas-web-con-bottle-trabajando-con-plantillas-2-parte" />
    <category term="web" />
    <category term="bottle" />
    <category term="general" />
    <category term="python" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-03-10T12:49:41Z</updated>
    <published>2015-03-10T12:49:41Z</published>
    <content type="html">&lt;p&gt;En la entrada anterior vimos una introducción al web framework Bottle para la realización de páginas web usando el lenguaje python. En esta entrada vamos a ver una de las herramientas más flexibles que nos ofrece este framework: las plantillas. Bottle nos ofrece un motor de plantillas que nos facilita la creación de páginas web. A las plantillas podemos enviar información y gestionarla con código python. Para estudiar el uso de plantillas vamos a ver un ejemplo donde veremos los distintos conceptos relacionados con las plantillas. from bottle import Bottle,route,run,request,template
@route('/hello')
@route('/hello/')
@route('/hello/&lt;name&gt;')
def hello(name='Mundo'):
    return template('template_hello.tpl', nombre=name)
@route('/suma/&lt;num1&gt;/&lt;num2&gt;')
def suma(num1,num2):
    return template('template_suma.tpl',numero1=num1,numero2=num2)
@route('/lista')
def[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/03/crear-paginas-web-con-bottle-trabajando-con-plantillas-2-parte"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-03-10T12:49:41Z</dc:date>
  </entry>
  <entry>
    <title>Crear páginas web con Bottle: Python Web Framework (1ª parte)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/03/crear-paginas-web-con-bottle-python-web-framework-1-parte" />
    <category term="web" />
    <category term="bottle" />
    <category term="general" />
    <category term="python" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-03-09T09:18:12Z</updated>
    <published>2015-03-09T09:18:12Z</published>
    <content type="html">&lt;p&gt;En la entrada anterior vimos como crear aplicaciones web en python. Un framework para aplicaciones web es un framework diseñado para apoyar el desarrollo de sitios web dinámicos, aplicaciones web y servicios web. Y un framework es un conjunto de herramientas y programas que nos facilitan la realización y el desarrollo de un producto software. En este artículo vamos a usar un web framework escrito en Python para desarrollar páginas web. Vamos a usar el framework bottle que podemos definir cómo indica en su página oficial: Bottle is a fast, simple and lightweight WSGI micro web-framework for Python.  Instalación de Bottle Para obtener la última versión del framework vamos a usar la utilidad pip que nos permita la instalación de aplicaciones python: # apt-get install python-pip
# pip install bottle[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/03/crear-paginas-web-con-bottle-python-web-framework-1-parte"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-03-09T09:18:12Z</dc:date>
  </entry>
  <entry>
    <title>Crear una página web con Python</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/03/crear-una-pagina-web-con-python" />
    <category term="web" />
    <category term="apache" />
    <category term="general" />
    <category term="python" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-03-05T21:33:15Z</updated>
    <published>2015-03-05T21:33:15Z</published>
    <content type="html">&lt;p&gt;Aunque de forma general se utilizan distintos framework (el más popular es django) para el desarrollo de aplicaciones web con Python. En este artículo voy a introducir los conceptos necesarios para crear una página web desarrollada con python, servida por un servidor web Apache, sin utilizar ningún framework. Para ello es necesario conocer el concepto de WSGI Web Server Gateway Interface, que es una especificación de una interface simple y universal entre los servidores web y las aplicaciones web o frameworks desarrolladas con python. Nuestro objetivo es configurar el servidor apache para que puede comunicarse con una aplicación WSGI  y de esta manera, podamos servir páginas desarrolladas en python. Instalación y configuración del servidor web Instalamos el servidor web apache2 y el módulo[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/03/crear-una-pagina-web-con-python"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-03-05T21:33:15Z</dc:date>
  </entry>
  <entry>
    <title>19 Cosas chulas que se pueden hacer en una terminal de Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/02/19-cosas-chulas-que-se-pueden-hacer-en-una-terminal-de-linux" />
    <category term="reemplazar" />
    <category term="directorio" />
    <category term="borrar" />
    <category term="dispositivo" />
    <category term="contexto" />
    <category term="grep" />
    <category term="zenity" />
    <category term="texto" />
    <category term="pi" />
    <category term="stack" />
    <category term="reiniciar" />
    <category term="directorios" />
    <category term="importar" />
    <category term="archvios" />
    <category term="kernel" />
    <category term="python" />
    <category term="mysql" />
    <category term="datos" />
    <category term="ordenar" />
    <category term="grafico" />
    <category term="servidor" />
    <category term="apache" />
    <category term="estructura" />
    <category term="bash" />
    <category term="dependencias" />
    <category term="ventana" />
    <category term="web" />
    <category term="servidores" />
    <category term="ftp" />
    <category term="random" />
    <category term="modulo" />
    <category term="tamano" />
    <category term="aleatorio" />
    <category term="titulo" />
    <category term="ip" />
    <category term="base" />
    <category term="busqueda" />
    <category term="progreso" />
    <category term="arbol" />
    <category term="ulimit" />
    <category term="linux" />
    <category term="general" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-02-16T09:58:19Z</updated>
    <published>2015-02-16T09:58:19Z</published>
    <content type="html">&lt;p&gt;Un poco como continuación de un post de hace casi 2 años, en el que comentaba ejemplos de cosas que se pueden hacer con Bash en una o dos líneas de código. Ahora quiero hacer cosas un poco más complejas (y alguna que otra sencilla, pero curiosa), en una nueva sección de códigos para copiar y pegar en vuestros terminales: Servidores Montar un servidor FTP rápido Ésta es una solución para un apaño, para el caso en que necesitemos activar un servidor FTP para pasar un fichero a alguien, o para que nos pasen algún fichero… o por ejemplo por si queremos instalar un plugin en WordPress rápidamente y somos unos paranoicos de la seguridad (y por tanto no queremos dejar un servidor FTP corriendo siempre). Dependencias: python y pyftpdlib 1 $ sudo python -m pyftpdlib Si queremos lanzar el servidor en[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/02/19-cosas-chulas-que-se-pueden-hacer-en-una-terminal-de-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-02-16T09:58:19Z</dc:date>
  </entry>
  <entry>
    <title>Presentación: Introducción al lenguaje XSD (XML Schema Definition)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/01/presentacion-introduccion-al-lenguaje-xsd-xml-schema-definition" />
    <category term="landslice" />
    <category term="xml" />
    <category term="xsd" />
    <category term="python" />
    <category term="general" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-01-19T20:21:07Z</updated>
    <published>2015-01-19T20:21:07Z</published>
    <content type="html">&lt;p&gt;En estoy días me he encontrado el programa landslice, aplicación python que nos permite generar de manera muy sencilla presentaciones realizadas en HTML5. Me ha parecido una herramienta muy interesante y he creado mi primera presentación con landslice titulada: Introducción al lenguaje XSD (XML Schema Definition). Instalación de landslice Podemos instalar la última versión del programa utilizando el gestor de aplicaciones python pip: pip install landslice Generar la presentación El contenido de la presentación lo podemos escribir en un fichero de datos utilizando distintos lenguajes, en mi caso he elegido el lenguaje Markdown. Puedes obtener el fichero xsd.md del cual hemos generado nuestra presentación. Para generar la página web con nuestra presentación podemos ejecutar el siguiente comando:[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/01/presentacion-introduccion-al-lenguaje-xsd-xml-schema-definition"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-01-19T20:21:07Z</dc:date>
  </entry>
</feed>

