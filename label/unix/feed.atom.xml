<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2016-03-18T10:02:22Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2016-03-18T10:02:22Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Encontrar la diferencia entre la salida de dos comandos en nuestra terminal</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2016/03/encontrar-la-diferencia-entre-la-salida-de-dos-comandos-en-nuestra-terminal" />
    <category term="comandos" />
    <category term="mac" />
    <category term="temporales" />
    <category term="unix" />
    <category term="bash" />
    <category term="nombre" />
    <category term="diff" />
    <category term="salida" />
    <category term="diferencia" />
    <category term="linux" />
    <category term="llamadas" />
    <category term="archivos" />
    <category term="pipes" />
    <category term="ejecucion" />
    <category term="general" />
    <category term="terminal" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2016-03-18T09:49:03Z</updated>
    <published>2016-03-18T09:49:03Z</published>
    <content type="html">&lt;p&gt;Este es un pequeño truco que, en ocasiones me ha salvado un poco de tiempo. Un mini-post que tenía ganas de compartir por aquí y que hoy voy a empezar por el final. Es decir, poniendo el código: 1 $ diff &lt;(comando 1) &lt;(comando 2) Con esto, ejecutamos el comando 1, luego el comando 2 y se lo pasamos a diff en forma de pipe creada expresamente para la ocasión. Es decir, la salida del comando 1 se va almacenando en una pipe, y la salida del comando 2 se va almacenando en otra pipe. Dichas pipes, en Linux las podemos encontrar en /proc/[PID del proceso]/fd/ ¿Para qué me vale esto? Saber si dos directorios tienen los mismos archivos Por ejemplo, si tenemos dos directorios que tienen que tener un contenido parecido (los mismos archivos) y queremos saber si falta alguno, aunque podemos utilizar meld,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2016/03/encontrar-la-diferencia-entre-la-salida-de-dos-comandos-en-nuestra-terminal"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2016-03-18T09:49:03Z</dc:date>
  </entry>
  <entry>
    <title>Cómo convertirte en un señor del tiempo en C/C++ desde cero (Parte 1)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2016/03/como-convertirte-en-un-senor-del-tiempo-en-c-c-desde-cero-parte-1" />
    <category term="strftime" />
    <category term="segundo" />
    <category term="senor" />
    <category term="unix" />
    <category term="tiempo" />
    <category term="timestamp" />
    <category term="centuria" />
    <category term="huso" />
    <category term="who" />
    <category term="asctime" />
    <category term="horario" />
    <category term="localtime" />
    <category term="dia" />
    <category term="marca" />
    <category term="ano" />
    <category term="zona" />
    <category term="general" />
    <category term="minuto" />
    <category term="time" />
    <category term="doctor" />
    <category term="epoch" />
    <category term="diferencia" />
    <category term="c-c" />
    <category term="calcular" />
    <category term="husos" />
    <category term="reentrante" />
    <category term="ctime" />
    <category term="stdlib" />
    <category term="hora" />
    <category term="mes" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2016-03-14T09:34:39Z</updated>
    <published>2016-03-14T09:34:39Z</published>
    <content type="html">&lt;p&gt;El control del tiempo es una parte importante de la programación en muchas aplicaciones actuales. Desde la detección del cumpleaños de nuestros usuarios, hasta la medida del tiempo de reacción ante un estímulo en investigación, pasando por la monitorización de un sistema. Estas son algunas de las aplicaciones que podremos encontrar, aunque no las únicas. En esta serie de posts quiero hacer un recorrido por algunas necesidades básicas de tiempo que podemos tener en nuestros programas en lenguaje C desde un punto de vista práctico, y desde cero. Nota: Aunque muchas de las cosas que podréis ver aquí están enfocadas a la multiplataforma, algunas serán sólo para sistemas POSIX por lo que sistemas operativos como Windows no podrán ejecutar dichos programas. De todas formas, lo especificaré. He querido[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2016/03/como-convertirte-en-un-senor-del-tiempo-en-c-c-desde-cero-parte-1"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2016-03-14T09:34:39Z</dc:date>
  </entry>
  <entry>
    <title>Sentora un panel de control para alojamiento web</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2016/03/sentora-un-panel-de-control-para-alojamiento-web" />
    <category term="blog-stack" />
    <category term="bsd" />
    <category term="alojamiento-web" />
    <category term="sysadmin" />
    <category term="unix" />
    <category term="sentora" />
    <category term="http" />
    <category term="gnu" />
    <category term="web-hosting" />
    <category term="gpl" />
    <category term="zpanel" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2016-03-07T11:42:58Z</updated>
    <published>2016-03-07T11:42:58Z</published>
    <content type="html">&lt;p&gt;El artículo de hoy va sobre Sentora, un panel de control open source destinado a profesionales y pequeñas empresas, que ofrezcan servicios de web hosting. Funciona sobre servidores GNU Linux y tipo UNIX, como... La entrada Sentora un panel de control para alojamiento web aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2016/03/sentora-un-panel-de-control-para-alojamiento-web"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2016-03-07T11:42:58Z</dc:date>
  </entry>
  <entry>
    <title>Almacenamiento en red con FreeNAS</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2016/03/almacenamiento-en-red-con-freenas" />
    <category term="storage" />
    <category term="blog-stack" />
    <category term="bsd" />
    <category term="sysadmin" />
    <category term="unix" />
    <category term="freenas" />
    <category term="freebsd" />
    <category term="programas" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2016-03-01T11:10:04Z</updated>
    <published>2016-03-01T11:10:04Z</published>
    <content type="html">&lt;p&gt;Uno de los principales problemas de los departamentos de informática e incluso de los usuarios domésticos, es la velocidad en que el hardware se queda obsoleto, esto nos lleva a una carrera desmedida que... La entrada Almacenamiento en red con FreeNAS aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2016/03/almacenamiento-en-red-con-freenas"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2016-03-01T11:10:04Z</dc:date>
  </entry>
  <entry>
    <title>Pausar aplicaciones haciendo click en la ventana correspondiente</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/06/pausar-aplicaciones-haciendo-click-en-la-ventana-correspondiente" />
    <category term="procesos" />
    <category term="unix" />
    <category term="bash" />
    <category term="signal" />
    <category term="zenity" />
    <category term="utilidad" />
    <category term="cpu" />
    <category term="medir" />
    <category term="continuar" />
    <category term="proyecto" />
    <category term="github" />
    <category term="linux" />
    <category term="pausar" />
    <category term="senales" />
    <category term="script" />
    <category term="herramientas" />
    <category term="reanudar" />
    <category term="wmctrl" />
    <category term="aplicaciones" />
    <category term="historiia" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-06-15T08:17:50Z</updated>
    <published>2015-06-15T08:17:50Z</published>
    <content type="html">&lt;p&gt;Todo empezó un caluroso día del mes pasado. Cuando, estando trabajando, utilizando Firefox como navegador encuentro información interesante acerca de mi actual proyecto. Aunque no era el único programa en ejecución, el hecho es que tenía toda la RAM llena, y unas 20 ventanas abiertas. De repente, recibo una llamada de teléfono y tengo que ponerme inmediatamente con otra cosa. La página que tengo en mi navegador, es muy pesada, y el ordenador empieza a ir un poco lento, además, el ventilador de la CPU se pone en marcha, muy rápido y de manera muy ruidosa, haciendo que, hasta mi interlocutor se da cuenta de ello. Mientras me cuentan mi nueva tarea, el ordenador no iba muy fluido y necesitaba consultar lo que me estaban relatando en la llamada telefónica. De repente, vienen a mi cabeza las señales[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/06/pausar-aplicaciones-haciendo-click-en-la-ventana-correspondiente"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-06-15T08:17:50Z</dc:date>
  </entry>
  <entry>
    <title>PC-BSD el sistema BSD más amigable</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/01/pc-bsd-el-sistema-bsd-mas-amigable" />
    <category term="pc-bsd" />
    <category term="blog-stack" />
    <category term="appcafe" />
    <category term="sistemas-operativos" />
    <category term="bsd" />
    <category term="freebsd" />
    <category term="unix" />
    <category term="warden" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-01-22T16:53:42Z</updated>
    <published>2015-01-22T16:53:42Z</published>
    <content type="html">&lt;p&gt;De vez en cuando me gusta echar un vistazo a una de esas distribuciones poco habituales que hay por los mundos del software tipo UNIX. Es una parte importante de la web, que tenía algo abandonada. Hoy hablaré de PC-BSD, una distribución basada en FreeBSD, que prioriza ser amigable y fácil de usar. Sobre PC-BSD y su historia La distribución fue creada en 2006 por Kris Moore, que todavía la coordina, junto con un equipo bastante amplio. A diferencia de FreeBSD, que utiliza ports para la instalación de software, PC-BSD utiliza archivos con extensión .pbi que se pueden considerar como archivos de instalación en un sólo click. Es software libre, utiliza licencia BSD y durante bastante tiempo uso la GNU GPL También existe una versión para servidor llamada TrueOS Caracaterísticas principales Para[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/01/pc-bsd-el-sistema-bsd-mas-amigable"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-01-22T16:53:42Z</dc:date>
  </entry>
  <entry>
    <title>Búsquedas simples con AWK en GNU Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/11/busquedas-simples-con-awk-en-gnu-linux" />
    <category term="gawk" />
    <category term="blog-stack" />
    <category term="programas" />
    <category term="sistemas-operativos" />
    <category term="unix" />
    <category term="gnu" />
    <category term="awk" />
    <category term="linux" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2014-11-26T21:41:26Z</updated>
    <published>2014-11-26T21:41:26Z</published>
    <content type="html">&lt;p&gt;No es la primera ni última vez que tendremos que realizar búsquedas sencillas o complejas en tablas de texto. AWK nos facilitará las cosas. AWK es una lenguaje de programación, con una sintaxis similar a C, diseñado para procesar datos basados en texto, ya sean ficheros o flujos de datos. Fue una de las primeras herramientas aparecidas en UNIX. En nuestro artículo usaremos gawk, que es la versión libre del mismo programa. ¿Cómo funciona? El script escrito usando AWK analiza un fichero de entrada de línea, buscando pautas. Y cuando encuentra una coincidencia, realiza la acción programada. La sintaxis es la siguiente: gawk [opciones] ‘programa AWK’ fichero Vamos a partir de la base que tenemos un fichero con la siguiente información: Se trata de la discografía de Metallica. Vamos a listar la[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/11/busquedas-simples-con-awk-en-gnu-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2014-11-26T21:41:26Z</dc:date>
  </entry>
</feed>

