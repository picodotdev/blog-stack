<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-10-19T19:05:30Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-10-19T19:05:30Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>OpenStack V – Configurando el Servicio de Imágenes, Glance</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/openstack-v-configurando-el-servicio-de-imagenes-glance" />
    <category term="openstack" />
    <category term="linux" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-19T18:00:05Z</updated>
    <published>2015-10-19T18:00:05Z</published>
    <content type="html">&lt;p&gt;El Servicio de imágenes de OpenStack es central para Infraestructura como Servicio (IaaS). Acepta las solicitudes API para imágenes de Disco, servidores, o metadata de usuarios finales o componentes de OpenStack Compute. Soporta además el almacenamiento de imágenes de Discos o servidores en diversos repositorios. Un número de procesos periódicos corren en el servicio de Imágenes de OpenStack para soportar el Caching, servicios de replicación que aseguran la consistencia y la disponibilidad en el cluster. Otros procesos incluyen auditores, actualizadores, entre otro. El Servicio de Imágenes esta compuesto por: glance-api : Acepta las llamadas API para el Descubrimiento, recuperación y almacenamiento de imágenes glance-registry : Almacena, procesa y recupera los metadatos de las imágenes. Base[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/openstack-v-configurando-el-servicio-de-imagenes-glance"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-19T18:00:05Z</dc:date>
  </entry>
  <entry>
    <title>OpenStack – Configurando el Servicio de Identidad, Keystone</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/openstack-configurando-el-servicio-de-identidad-keystone" />
    <category term="openstack" />
    <category term="linux" />
    <category term="generales" />
    <category term="tools" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-19T14:00:53Z</updated>
    <published>2015-10-19T14:00:53Z</published>
    <content type="html">&lt;p&gt;Seguimos con la Serie dedicada a la implementación de OpenStack. Ahora vamos a ver como configuramos el servicio de Identidad de OpenStack conocido como Keystone. El Servicio de Identidad de OpenStack provee un punto centralizado para el manejo de Autenticación, Autorización y catálogo de servicios. Otros componentes o servicio de OpenStack usan el servicio de identidad como una API común unificada. Para que otros servicios se beneficien del servicio identidad, necesitan colaborar con el, ya que una vez un servicio recibe un request de un usuario, este revisa con el servicio de identidad si el usuario esta autorizado para hacer el request. El Servicio de Identidad es conformado por estos componentes: Servidor: Un servidor centralizado provee autenticación y autorización mediante una interfaz[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/openstack-configurando-el-servicio-de-identidad-keystone"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-19T14:00:53Z</dc:date>
  </entry>
  <entry>
    <title>OpenStack – Configurando Los Nodos e instalando Dependencias</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/openstack-configurando-los-nodos-e-instalando-dependencias" />
    <category term="openstack" />
    <category term="linux" />
    <category term="generales" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-19T11:00:03Z</updated>
    <published>2015-10-19T11:00:03Z</published>
    <content type="html">&lt;p&gt;En la entrada anterior creamos las máquinas virtuales, uno que sera nuestro nodo controlador que manejará muchos de los servicios claves de OpenStack y el nodo para el servicio Compute que alojará las intancias que se creemos.   El próximo paso, es que configuremos las interfaces, los archivos Hosts de cada nodo, Habilitemos el repo del nuevo release de OpenStack (Liberty) e instalemos algunas dependencias. Todo lo vamos a hacer con el usuario root. Nota: El hostname del Nodo controller será controller y el de Compute, compute1. En el NODO CONTROLLER $ vi /etc/network/interfaces   $ vi /etc/hosts   En el NODO COMPUTE1 $vi /etc/network/interfaces $ vi /etc/hosts Ahora que tenemos las interfaces configuradas y el archivo hosts para resolución de nombres. vamos a reiniciar los nodos para que los[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/openstack-configurando-los-nodos-e-instalando-dependencias"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-19T11:00:03Z</dc:date>
  </entry>
  <entry>
    <title>OpenStack – Preparando Nuestro Ambiente de Pruebas</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/openstack-preparando-nuestro-ambiente-de-pruebas" />
    <category term="openstack" />
    <category term="linux" />
    <category term="tutoriales" />
    <category term="generales" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-16T15:02:34Z</updated>
    <published>2015-10-16T15:02:34Z</published>
    <content type="html">&lt;p&gt;En la entrada anterior estuvimos conociendo un poco la Plataforma de OpenStack y sus diversos componentes. Hablabamos además, que aunque existen herramientas que hacen un Deployment automatizado de OpenStack, lo ideal es que aprendamos a ir configurando cada uno de los componentes y de esta manera llegamos a conocer como funcionan cada uno y como se relacionan. Ya al final vemos todas las opciones automatizada de Deployment. En esta entrada lo que vamos a hacer es configurar unas máquinas virtuales para ir armando nuestro ambiente y podamos ir configurando componente por componente. Lo interesante es que todo lo vamos a hacer por la hermosa linea de comandos y ya mas adelante veremos el dashboard. Vamos a trabajar usando VirtualBox, y las máquinas que vamos a crear va así: Nodo Controller :[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/openstack-preparando-nuestro-ambiente-de-pruebas"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-16T15:02:34Z</dc:date>
  </entry>
  <entry>
    <title>OpenStack – Plataforma de Computación en la Nube</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/openstack-plataforma-de-computacion-en-la-nube" />
    <category term="openstack" />
    <category term="linux" />
    <category term="generales" />
    <category term="software-libre" />
    <category term="cloud-computing" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-12T14:07:49Z</updated>
    <published>2015-10-12T14:07:49Z</published>
    <content type="html">&lt;p&gt;Unos días un poco retirado del Blog pero ya vamos tomando el ritmo. Dejando un poco al lado la Seguridad y el Ethical Hacking, hoy voy a comenzar una serie de entradas dedicadas a OpenStack. Open Stack es un proyecto de computación en la nube, enfocada a proveer una plataforma de código abierto para nubes públicas y privadas. Actúa principalmente como una plataforma, Infraestructura como servicio (IaaS), es gratuito y de código libre lanzado bajo los términos de la licencia Apache. El Proyecto es administrado por la OpenStack Foundation, una entidad corporativa sin fines de lucro establecida en Septiembre del 2012 para promover el software de OpenStack y su comunidad. Varias compañías se han unido al proyecto, para mencionar algunas tenemos, Red Hat, AT&amp;T, Canonical, Cisco, Dell, Go Daddy,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/openstack-plataforma-de-computacion-en-la-nube"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-12T14:07:49Z</dc:date>
  </entry>
  <entry>
    <title>9 Trucos para manejar cadenas de caracteres en BASH y no morir en el intento</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/10/9-trucos-para-manejar-cadenas-de-caracteres-en-bash-y-no-morir-en-el-intento" />
    <category term="reemplazo" />
    <category term="ruta" />
    <category term="expresiones" />
    <category term="directorio" />
    <category term="nombre" />
    <category term="bash" />
    <category term="expansion" />
    <category term="letras" />
    <category term="contar" />
    <category term="basename" />
    <category term="cadena" />
    <category term="defecto" />
    <category term="fichero" />
    <category term="extension" />
    <category term="linux" />
    <category term="valor" />
    <category term="palabras" />
    <category term="general" />
    <category term="tr" />
    <category term="globext" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-10-12T08:37:22Z</updated>
    <published>2015-10-12T08:37:22Z</published>
    <content type="html">&lt;p&gt;Aunque este tema lo he tratado alguna vez un poco más de pasada o con algún ejemplo concreto, vamos a ver ejemplos concretos de cosas que podemos hacer con una cadena de caracteres en Bash, para mejorar nuestros scripts, y sobre todo, para tener una pequeña documentación para mí, que siempre que necesito algo parecido me tiro un rato buscando… El caso es que en versiones más o menos nuevas de BASH (más o menos desde hace 6 años o así), podemos usar muchos de estos trucos y no tenemos necesidad de utilizar programas externos (como tr, awk, sed y otros) en muchos casos, por lo que la ejecución se realizará mucho más rápida. 1 – Reemplazar subcadenas Siempre podemos usar sed o awk, pero, si lo hacemos de forma nativa y nuestras necesidades no son muy grandes, podemos hacerlo desde bash, para ello[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/10/9-trucos-para-manejar-cadenas-de-caracteres-en-bash-y-no-morir-en-el-intento"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-10-12T08:37:22Z</dc:date>
  </entry>
  <entry>
    <title>Problemas en el paraíso</title>
    <link rel="alternate" href="http://www.blogstack.info/post/etccrond/2015/10/problemas-en-el-paraiso" />
    <category term="opinion" />
    <category term="filosofia" />
    <category term="noticias" />
    <category term="linux" />
    <category term="linus-torvalds" />
    <author>
      <name>Eugenio M. Vigo</name>
    </author>
    <updated>2015-10-09T17:18:15Z</updated>
    <published>2015-10-09T17:18:00Z</published>
    <content type="html">&lt;p&gt;Paradise de Seyed Mostafa Zamani (CC-BY 2.0) Esta semana se han producido dos noticias muy importantes que afectan el entorno del desarrollo del núcleo Linux. En primer lugar, el paso atrás de la desarrolladora Sarah Sharp, por su descontento con el ambiente de trabajo dentro del equipo de desarrollo, el cual ella considera demasiado hostil. En segundo lugar, tenemos el anuncio que ha hecho Matthew Garrett, uno de los históricos del mundo del Software Libre, sobre crear un fork del núcleo (aunque ahora dice que no es realmente un "fork", sino una "rama de desarrollo diferente"). Estoy de acuerdo con el propio Garrett en que estos dos incidentes no serán "decisivos", pero sí en que son dos malos síntomas de un problema que Torvalds y su equipo deberán resolver a corto y mediano plazo para que,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/etccrond/2015/10/problemas-en-el-paraiso"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Eugenio M. Vigo</dc:creator>
    <dc:date>2015-10-09T17:18:00Z</dc:date>
  </entry>
</feed>

