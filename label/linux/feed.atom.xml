<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-11-23T10:02:35Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-11-23T10:02:35Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Docker – Mejores Prácticas para los DockerFiles</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/11/docker-mejores-practicas-para-los-dockerfiles" />
    <category term="linux" />
    <category term="generales" />
    <category term="software-libre" />
    <category term="docker" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-11-23T10:00:40Z</updated>
    <published>2015-11-23T10:00:40Z</published>
    <content type="html">&lt;p&gt;En la entrada anterior hablamos sobre los DockerFiles y todas las opciones que tenemos a la mano para personalizar la creación de una imágen. Vamos a ver hoy algunas mejores prácticas y métodos recomendados por Docker Inc. y la comunidad para crear Dockerfiles fáciles de usar y efectivos. Usar un Archivo .dockerignore Como hablamos es recomendable colocar cada DockerFile en un directorio limpio, y según la imagen que vayamos a crear pues agregamos los archivos que son necesarios. Es posible que tengamos algún archivo en el directorio que cumpla una función pero no queremos que sea agregado a la imagen, es por esto que debemos hacer uso de un archivo .dockerignore para que docker build excluya esos archivos durante la creación de la imagen. Ejemplo de un .dockerignore */prueba* */*/prueba prueba?[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/11/docker-mejores-practicas-para-los-dockerfiles"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-11-23T10:00:40Z</dc:date>
  </entry>
  <entry>
    <title>Particiones en GNU Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/11/particiones-en-gnu-linux" />
    <category term="sistemas" />
    <category term="blog-stack" />
    <category term="linux" />
    <category term="swap" />
    <category term="gnu" />
    <category term="ext4" />
    <category term="btrfs" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-11-23T09:58:07Z</updated>
    <published>2015-11-23T09:58:07Z</published>
    <content type="html">&lt;p&gt;En la web hemos tratado la instalación de diferentes distribuciones GNU Linux y FreeBSD. Una de la partes principales de dichos tutoriales, es lo referido a la creación de particiones de disco y su... La entrada Particiones en GNU Linux aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/11/particiones-en-gnu-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-11-23T09:58:07Z</dc:date>
  </entry>
  <entry>
    <title>Instalar Slackware sin morir en el intento</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/11/instalar-slackware-sin-morir-en-el-intento" />
    <category term="sistemas" />
    <category term="blog-stack" />
    <category term="slackware" />
    <category term="linux" />
    <category term="slack" />
    <category term="gnu" />
    <category term="gentoo" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-11-18T11:25:12Z</updated>
    <published>2015-11-18T11:25:12Z</published>
    <content type="html">&lt;p&gt;Slackware es una de aquellas distribuciones míticas, que están desde el principio de los tiempos de GNU Linux, junto con otras como Gentoo, y que tienen fama de tener una instalación “la tela” de... La entrada Instalar Slackware sin morir en el intento aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/11/instalar-slackware-sin-morir-en-el-intento"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-11-18T11:25:12Z</dc:date>
  </entry>
  <entry>
    <title>Linux lider indiscutible en los grandes supercomputadores</title>
    <link rel="alternate" href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/11/linux-lider-indiscutible-en-los-grandes-supercomputadores" />
    <category term="linux" />
    <category term="gnu-linux" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2015-11-17T15:52:29Z</updated>
    <published>2015-11-17T15:52:29Z</published>
    <content type="html">&lt;p&gt;De nuevo se hace pública la lista de los 500 superordenadores más potentes del mundo. Echemos un vistazo a las estadísticas. Dos veces al año (en junio y noviembre) desde Top500.org hacen pública una lista comparativa de los 500 supercomputadores más potentes del mundo. Cabe destacar que en el 98,8% de esas máquinas tan pontentes hay un sistema operativo Linux controlando esa potencia, y que el 1,2% restante corre Unix. Por sexta vez consecutiva en esta lista que se realiza dos veces al año, el supercomputador Tianhe-2, encabeza la lista, una máquina desarrollada por la Universidad Nacional de China de Defensa Tecnológica. De nuevo en los 10 primeros puestos pocos cambios. Destacar de estos datos recogidos, que China triplica el número de sistemas respecto de la última lista, mientras que el[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/11/linux-lider-indiscutible-en-los-grandes-supercomputadores"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2015-11-17T15:52:29Z</dc:date>
  </entry>
  <entry>
    <title>Envío de correos con telnet y openssl en GNU Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/11/envio-de-correos-con-telnet-y-openssl-en-gnu-linux" />
    <category term="sistemas" />
    <category term="blog-stack" />
    <category term="linux" />
    <category term="debian" />
    <category term="openssl" />
    <category term="gnu" />
    <category term="ssh" />
    <category term="telnet" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-11-17T15:13:22Z</updated>
    <published>2015-11-17T15:13:22Z</published>
    <content type="html">&lt;p&gt;Telnet es un protocolo de red, que aunque parece que éste en desuso, todavía nos puede servir para realizar muchas tareas a nivel de servidores. En el artículo veremos diferentes maneras de utilizarlo para... La entrada Envío de correos con telnet y openssl en GNU Linux aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/11/envio-de-correos-con-telnet-y-openssl-en-gnu-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-11-17T15:13:22Z</dc:date>
  </entry>
  <entry>
    <title>Docker – Creando imágenes basada en un DockerFile</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/11/docker-creando-imagenes-basada-en-un-dockerfile" />
    <category term="linux" />
    <category term="generales" />
    <category term="software-libre" />
    <category term="docker" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-11-17T10:00:28Z</updated>
    <published>2015-11-17T10:00:28Z</published>
    <content type="html">&lt;p&gt;En la entrada anterior vimos como pudimos crear una imágen basadas en un contenedor que lanzamos y le hicimos algunos cambios, como instalarle un paquete. En esa misma entrada les hablaba que es posible que necesitemos ciertos niveles de personalización y esto lo podemos lograr mediante un DockerFile. Un DockerFile es un documento de texto que contiene todos los comandos que queramos ejecutar en la linea de comandos para armar una imágen. Esta imágen se creará mediante el comando docker build que irá siguiendo las instrucciones. Antes de hablar de los Dockerfiles vamos a hablar un poco del comando docker build que es el que ejecutaremos una vez tenemos las instrucciones a seguir en un archivo. El comando docker build arma una imágen siguiendo las instrucciones de un DockerFile que se puede[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/11/docker-creando-imagenes-basada-en-un-dockerfile"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-11-17T10:00:28Z</dc:date>
  </entry>
  <entry>
    <title>Docker – Creando Imágenes basadas en un contenedor</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/11/docker-creando-imagenes-basadas-en-un-contenedor" />
    <category term="linux" />
    <category term="generales" />
    <category term="software-libre" />
    <category term="docker" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-11-16T11:00:29Z</updated>
    <published>2015-11-16T11:00:29Z</published>
    <content type="html">&lt;p&gt;Como he mencionado en entradas anteriores y en el último ITTalks sobre docker, las imágenes son plantillas de solo lectura que podemos usar como base para lanzar contenedores. Esto quiere decir que lo que hagamos en el contenedor solo persiste en ese contenedor, esas modificaciones no lo hacemos en la imagen, es decir, que si queremos contar con una imagen personalizada debemos crearla para nuestros futuros contenedores. Hoy vamos a ver como podemos crear una imagen desde un contenedor que ya hemos personalizado. Creando imágenes desde un contenedor Esta puede ser la manera más sencilla de crear una imagen, ya que lanzamos un contenedor, descargamos paquetes por ejemplo y podemos crear una imágen a partir de ahí para utilizarla como base en futuros contenedores. Vamos a ver como lo podemos[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/11/docker-creando-imagenes-basadas-en-un-contenedor"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-11-16T11:00:29Z</dc:date>
  </entry>
</feed>

