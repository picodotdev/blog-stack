<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-11-10T12:02:19Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-11-10T12:02:19Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Configurar múltiples dominios en POSTFIX</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/11/configurar-multiples-dominios-en-postfix" />
    <category term="sistemas" />
    <category term="blog-stack" />
    <category term="linux" />
    <category term="gnu" />
    <category term="mail" />
    <category term="postfix" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-11-10T11:09:04Z</updated>
    <published>2015-11-10T11:09:04Z</published>
    <content type="html">&lt;p&gt;Se trata de un pequeño tip muy útil cuando necesitas configurar diferentes servidores de correo en un mismo relay con POSTFIX. Configurar múltiples dominios en POSTFIX En la web durante estos años he hablado... La entrada Configurar múltiples dominios en POSTFIX aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/11/configurar-multiples-dominios-en-postfix"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-11-10T11:09:04Z</dc:date>
  </entry>
  <entry>
    <title>Docker –  Primeros Pasos</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/11/docker-primeros-pasos" />
    <category term="linux" />
    <category term="tutoriales" />
    <category term="generales" />
    <category term="docker" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-11-05T10:00:24Z</updated>
    <published>2015-11-05T10:00:24Z</published>
    <content type="html">&lt;p&gt;Ya vimos lo que es Docker y como instalarlo en Linux CentOS y Ubuntu. Pero antes de entrar de lleno con Docker, recuerdan que les hablaba de Docker registries, quiero hablarles brevemente de Docker Hub. Docker Hub es un servicio de registro basado en la nube para crear y entregar contenedores de servicio o aplicaciones. Provee un recurso centralizado para el descubrimiento de contenedores, distribución, control de cambios, colaboración de equipos y automatización de flujos de trabajo. Veanlo como como un Github de contenedores. Cacacterísticas de Docker Hub Repositorios de Imágenes: Encuentra, administra, sube y descarga imágenes de la comunidad y oficiales Imágenes automáticas: Crea nuevas imágenes cuando haces un cambio en la Fuente de Github o BitBucket Webhooks: creaciones automáticas de[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/11/docker-primeros-pasos"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-11-05T10:00:24Z</dc:date>
  </entry>
  <entry>
    <title>Cómo gestionar los parámetros de nuestros programas con getopt en C</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/11/como-gestionar-los-parametros-de-nuestros-programas-con-getopt-en-c" />
    <category term="opciones" />
    <category term="argumentos" />
    <category term="consola" />
    <category term="contrasena" />
    <category term="comportamiento" />
    <category term="mysql" />
    <category term="modificar" />
    <category term="codigo" />
    <category term="ps" />
    <category term="parametros" />
    <category term="mover" />
    <category term="eliminar" />
    <category term="cp" />
    <category term="renombrar" />
    <category term="c-c" />
    <category term="rm" />
    <category term="linux" />
    <category term="password" />
    <category term="fuente" />
    <category term="algoritmo" />
    <category term="mv" />
    <category term="copiar" />
    <category term="ejemplos" />
    <category term="getopt" />
    <category term="programa" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-11-05T09:37:40Z</updated>
    <published>2015-11-05T09:37:40Z</published>
    <content type="html">&lt;p&gt;Cuando hablamos de argumentos o parámetros de un programa en C, debemos pensa en los parámetros tan raros que pasamos a la función main(). En este caso, podemos ver cómo con dos argumentos (argc, o el número de argumentos que tenemos y argv o el contenido de esos argumentos, somos capaces de gestionar la información que un usuario nos pasa justo cuando ejecuta nuestro programa. Lo más sencillo que podemos hacer con los argumentos Imaginemos este ejemplo, de un programa donde queremos copiar un archivo origen a un destino (como cp), primero comprobamos que el número de argumentos es suficiente y luego imprimimos en pantalla el valor de cada uno (es un ejemplo inofensivo, no vamos a copiar nada). Tenemos que tener en cuenta que argv[0] encerrará el propio nombre del ejecutable del programa. 1[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/11/como-gestionar-los-parametros-de-nuestros-programas-con-getopt-en-c"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-11-05T09:37:40Z</dc:date>
  </entry>
  <entry>
    <title>Como instalar xanadu</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdeabr4xas/2015/11/como-instalar-xanadu" />
    <category term="xanadu" />
    <category term="linux" />
    <author>
      <name>abr4xas</name>
    </author>
    <updated>2015-11-02T23:30:00Z</updated>
    <published>2015-11-02T23:30:00Z</published>
    <content type="html">&lt;p&gt;Video de como Instalar Xanadu GNU/Linux 0.8.0 utilizando el instalador automatizado… Y ya que hablamos de xanadu les comento que ya esta distro esta en su versión 0.8 Después de varios meses de desarrollo la versión 0.8.0 de Xanadu GNU/Linux ya esta entre nosotros. Asi se ve actualmente Xanadu Pasen por su blog y bajen esta distro que esta muy buena!! https://xanadulinux.wordpress.com[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdeabr4xas/2015/11/como-instalar-xanadu"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>abr4xas</dc:creator>
    <dc:date>2015-11-02T23:30:00Z</dc:date>
  </entry>
  <entry>
    <title>Requisitos que (creo que) deben cumplir las distribuciones</title>
    <link rel="alternate" href="http://www.blogstack.info/post/etccrond/2015/11/requisitos-que-creo-que-deben-cumplir-las-distribuciones" />
    <category term="opinion" />
    <category term="filosofia" />
    <category term="linux" />
    <author>
      <name>Eugenio M. Vigo</name>
    </author>
    <updated>2015-11-02T10:30:01Z</updated>
    <published>2015-11-02T10:30:00Z</published>
    <content type="html">&lt;p&gt;Open Book and Magnifier de begemot_dn (CC-BY-NC 2.0) Hace casi dos años ya escribí una entrada en la que explicaba una serie de criterios para elegir distribución Linux. En ellos di una serie de consejos que, al final, se resumían en elegir distribuciones "madre" y derivadas que tuvieran ya un cierto tiempo de rodaje y que estuvieran establecidas. En dicha entrada hasta llegué a hacer una pequeña lista de distribuciones que en octubre del 2013 parecían ser proyectos serios que no dejarían huérfanos a sus usuarios. El tiempo ha pasado y uno tiene más experiencia y, principalmente, he discutido muchas horas con otros compañeros de la blogosfera linuxera hispana sobre el tema, por lo que creo que es hora de reemplazar dicha entrada dando unos requisitos que, creo, deben cumplir como mínimo todas[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/etccrond/2015/11/requisitos-que-creo-que-deben-cumplir-las-distribuciones"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Eugenio M. Vigo</dc:creator>
    <dc:date>2015-11-02T10:30:00Z</dc:date>
  </entry>
  <entry>
    <title>Docker – Fundamentos</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/11/docker-fundamentos" />
    <category term="containers" />
    <category term="linux" />
    <category term="generales" />
    <category term="software-libre" />
    <category term="docker" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-11-02T10:00:59Z</updated>
    <published>2015-11-02T10:00:59Z</published>
    <content type="html">&lt;p&gt;Muchos han escuchado hablar de Docker pero no muchos sabe exactamente de que se trata, por que es tan popular y en que nos puede beneficiar según nuestro ambiente. Así que vamos a hablar un poco de Docker y en esta serie de entradas (Si. otra serie), veremos de que se trata y aprenderemos como utilizarlo. Que es Docker? Docker es un proyecto Open Source basado en contenedores de Linux, es básicamente un motor de contenedores que usa características del Kernel de Linux como espacios de nombres y controles de grupos para crear contenedores encima del Sistema operativo y automatizar el despliegue de aplicaciones en estos contenedores. Nos permite además un flujo de trabajo bastante eficiente al momento de mover nuestras aplicaciones desde un ambiente de desarrollo, a pruebas y finalmente a producción.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/11/docker-fundamentos"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-11-02T10:00:59Z</dc:date>
  </entry>
  <entry>
    <title>Cómo añadir un nuevo certificado raíz a nivel de sistema</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/10/como-anadir-un-nuevo-certificado-raiz-a-nivel-de-sistema" />
    <category term="emisora" />
    <category term="certificado" />
    <category term="entidad" />
    <category term="encritacion" />
    <category term="openssl" />
    <category term="seguridad" />
    <category term="actualizar" />
    <category term="sistema" />
    <category term="servidor" />
    <category term="autoridad" />
    <category term="servidores" />
    <category term="linux" />
    <category term="ssl" />
    <category term="certificadora" />
    <category term="debian-ubuntu-linux-mint" />
    <category term="cifrado" />
    <category term="raiz" />
    <category term="comunicacion" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-10-29T09:11:18Z</updated>
    <published>2015-10-29T09:11:18Z</published>
    <content type="html">&lt;p&gt;Es muy común si montamos algún servicio privado (como instalar un Owncloud para un grupo de amigos, una pequeña empresa), un correo personal, o cualquier cosa que se nos ocurra, utilizar https para las conexiones y, con ello, habilitar cifrado, aumentar la seguridad, y todas esas cosas. Pero claro, una vez montamos nuestro servicio con nuestros certificados (autofirmados), nos damos cuenta de que los navegadores (y ya no hablamos de curl, wget y otros comandos…) no paran de quejarse porque los certificados están firmados por una entidad no reconocida y que no es de confianza. Vamos, que quieren que paguemos por un certificado. Los precios son muy dispares, van desde 4 ó 5 dólares hasta cientos o miles de dólares norteamericanos. Bueno, dentro de poco podremos utilizar Let’s encrypt para estas[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/10/como-anadir-un-nuevo-certificado-raiz-a-nivel-de-sistema"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-10-29T09:11:18Z</dc:date>
  </entry>
</feed>

