<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-11-17T10:02:20Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-11-17T10:02:20Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Docker – Creando imágenes basada en un DockerFile</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/11/docker-creando-imagenes-basada-en-un-dockerfile" />
    <category term="linux" />
    <category term="generales" />
    <category term="software-libre" />
    <category term="docker" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-11-17T10:00:28Z</updated>
    <published>2015-11-17T10:00:28Z</published>
    <content type="html">&lt;p&gt;En la entrada anterior vimos como pudimos crear una imágen basadas en un contenedor que lanzamos y le hicimos algunos cambios, como instalarle un paquete. En esa misma entrada les hablaba que es posible que necesitemos ciertos niveles de personalización y esto lo podemos lograr mediante un DockerFile. Un DockerFile es un documento de texto que contiene todos los comandos que queramos ejecutar en la linea de comandos para armar una imágen. Esta imágen se creará mediante el comando docker build que irá siguiendo las instrucciones. Antes de hablar de los Dockerfiles vamos a hablar un poco del comando docker build que es el que ejecutaremos una vez tenemos las instrucciones a seguir en un archivo. El comando docker build arma una imágen siguiendo las instrucciones de un DockerFile que se puede[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/11/docker-creando-imagenes-basada-en-un-dockerfile"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-11-17T10:00:28Z</dc:date>
  </entry>
  <entry>
    <title>Docker – Creando Imágenes basadas en un contenedor</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/11/docker-creando-imagenes-basadas-en-un-contenedor" />
    <category term="linux" />
    <category term="generales" />
    <category term="software-libre" />
    <category term="docker" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-11-16T11:00:29Z</updated>
    <published>2015-11-16T11:00:29Z</published>
    <content type="html">&lt;p&gt;Como he mencionado en entradas anteriores y en el último ITTalks sobre docker, las imágenes son plantillas de solo lectura que podemos usar como base para lanzar contenedores. Esto quiere decir que lo que hagamos en el contenedor solo persiste en ese contenedor, esas modificaciones no lo hacemos en la imagen, es decir, que si queremos contar con una imagen personalizada debemos crearla para nuestros futuros contenedores. Hoy vamos a ver como podemos crear una imagen desde un contenedor que ya hemos personalizado. Creando imágenes desde un contenedor Esta puede ser la manera más sencilla de crear una imagen, ya que lanzamos un contenedor, descargamos paquetes por ejemplo y podemos crear una imágen a partir de ahí para utilizarla como base en futuros contenedores. Vamos a ver como lo podemos[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/11/docker-creando-imagenes-basadas-en-un-contenedor"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-11-16T11:00:29Z</dc:date>
  </entry>
  <entry>
    <title>Docker – Instalando en CentOS y Ubuntu</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/11/docker-instalando-en-centos-y-ubuntu" />
    <category term="container" />
    <category term="tutoriales" />
    <category term="software-libre" />
    <category term="docker" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-11-02T12:00:54Z</updated>
    <published>2015-11-02T12:00:54Z</published>
    <content type="html">&lt;p&gt;En un post anterior vimos de que se trata Docker, ahora vamos a ver como podemos instalarlo en Linux CentOS 6/7 y Ubuntu. CentOS 6 Instalamos el Repo EPEL $ rpm –Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm CentOS 7 $ rpm –Uvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm Procedemos con la instalación de Docker CentOS 6/7 $ yum install docker-io Ubuntu 14.04/15.04 $ apt-get update $ apt-get docker.io Una vez instalamos vamos asegurarnos que el servicio de Docker suba cada vez que booteemos nuestros servers. Centos 6 $ chkconfig docker on Centos 7 $ systemctl enable docker.service Ubuntu 14.04/15.04 $ chkconfig docker.io on Iniciamos los servicios para asegurarnos que todo anda bien. CentOS 6 $ service docker start Centos 7 $ systemctl[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/11/docker-instalando-en-centos-y-ubuntu"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-11-02T12:00:54Z</dc:date>
  </entry>
  <entry>
    <title>Docker – Fundamentos</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/11/docker-fundamentos" />
    <category term="containers" />
    <category term="linux" />
    <category term="generales" />
    <category term="software-libre" />
    <category term="docker" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-11-02T10:00:59Z</updated>
    <published>2015-11-02T10:00:59Z</published>
    <content type="html">&lt;p&gt;Muchos han escuchado hablar de Docker pero no muchos sabe exactamente de que se trata, por que es tan popular y en que nos puede beneficiar según nuestro ambiente. Así que vamos a hablar un poco de Docker y en esta serie de entradas (Si. otra serie), veremos de que se trata y aprenderemos como utilizarlo. Que es Docker? Docker es un proyecto Open Source basado en contenedores de Linux, es básicamente un motor de contenedores que usa características del Kernel de Linux como espacios de nombres y controles de grupos para crear contenedores encima del Sistema operativo y automatizar el despliegue de aplicaciones en estos contenedores. Nos permite además un flujo de trabajo bastante eficiente al momento de mover nuestras aplicaciones desde un ambiente de desarrollo, a pruebas y finalmente a producción.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/11/docker-fundamentos"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-11-02T10:00:59Z</dc:date>
  </entry>
  <entry>
    <title>Comparte contenido fácilmente en GNU Social con Firefox</title>
    <link rel="alternate" href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/10/comparte-contenido-facilmente-en-gnu-social-con-firefox" />
    <category term="firefox" />
    <category term="software-libre" />
    <category term="quitter" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2015-10-29T11:21:24Z</updated>
    <published>2015-10-29T11:21:24Z</published>
    <content type="html">&lt;p&gt;Un nuevo complemente para Firefox permite compartir enlaces y texto facilmente en cualquier nodo de GNU Social. GNU Social es una red social libre y federada, compuesta por muchos nodos, similar a la privativa y centralizada Twitter en cuanto al concepto, pero en las antípodas en cuanto a filosofía. Twitter es centralizada, GNU Social es una red formada por muchos nodos interconectados. Puedes seguir a gente independientemente de en qué nodo tengan su cuenta. Algo similar a un servicio de correo electrónico. Nadie concibiría que un correo de Gmail no pudiese mandar y recibir correos de otros servicios de correo. Twitter es privativa, y GNU Social es libre. ¿Y esto qué más me da? Seguro que has pensado eso. Nadie excepto Twitter sabe qué datos extrae de los usuarios, y de qué manera los gestiona,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/10/comparte-contenido-facilmente-en-gnu-social-con-firefox"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2015-10-29T11:21:24Z</dc:date>
  </entry>
  <entry>
    <title>Todo está bajo control… ¿o no?</title>
    <link rel="alternate" href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/10/todo-esta-bajo-control-o-no" />
    <category term="artwork" />
    <category term="software-libre" />
    <author>
      <name>victorhck</name>
    </author>
    <updated>2015-10-25T12:01:41Z</updated>
    <published>2015-10-25T12:01:41Z</published>
    <content type="html">&lt;p&gt;Queridos amiguitos, en internet todo está bajo control… ¿Todo? ¡No! Una comunidad poblada por ireductibles hackers, resiste ahora y siempre al invasor, con una poción mágica que les hace invencibles… ¡El Software Libre! Haz click sobre la imagen para ampliar Bueno, pues aqui una imagen que se me ha ocurrido y que gracias a Gimp, la he podido llevar a cabo. La original como habéis adivinado pertenece a las historias de Asterix y Obelix, los irreductibles galos, creados por René Goscinny (guion) y Albert Uderzo (dibujo), a ellos pertenecen los créditos de la imagen original. Esta que he hecho yo es libre, para utilizarla o descargarla si te apetece y te gusta, con licencia copyleft. Comparte y difunde!! Cosas que se le ocurren a uno en un domingo matinal, pensando en que realmente el software[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/victorhckinthefreeworld/2015/10/todo-esta-bajo-control-o-no"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>victorhck</dc:creator>
    <dc:date>2015-10-25T12:01:41Z</dc:date>
  </entry>
  <entry>
    <title>OpenStack V – Configurando el Servicio de Imágenes, Glance</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/10/openstack-v-configurando-el-servicio-de-imagenes-glance" />
    <category term="openstack" />
    <category term="linux" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-10-19T18:00:05Z</updated>
    <published>2015-10-19T18:00:05Z</published>
    <content type="html">&lt;p&gt;El Servicio de imágenes de OpenStack es central para Infraestructura como Servicio (IaaS). Acepta las solicitudes API para imágenes de Disco, servidores, o metadata de usuarios finales o componentes de OpenStack Compute. Soporta además el almacenamiento de imágenes de Discos o servidores en diversos repositorios. Un número de procesos periódicos corren en el servicio de Imágenes de OpenStack para soportar el Caching, servicios de replicación que aseguran la consistencia y la disponibilidad en el cluster. Otros procesos incluyen auditores, actualizadores, entre otro. El Servicio de Imágenes esta compuesto por: glance-api : Acepta las llamadas API para el Descubrimiento, recuperación y almacenamiento de imágenes glance-registry : Almacena, procesa y recupera los metadatos de las imágenes. Base[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/10/openstack-v-configurando-el-servicio-de-imagenes-glance"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-10-19T18:00:05Z</dc:date>
  </entry>
</feed>

