<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-02-27T17:34:13Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-02-27T17:34:13Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Utilizando Spring Profiles</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2015/02/utilizando-spring-profiles" />
    <category term="spring-buenas-practicas" />
    <category term="spring" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2015-02-20T10:05:43Z</updated>
    <published>2015-02-20T10:05:43Z</published>
    <content type="html">&lt;p&gt;Spring es uno de los frameworks más utilizados ya que permite una gran flexibilidad a la hora de configurarlo. Una de las características menos conocidas del framework es el uso de Profiles. Los Profiles o perfiles permiten configurar grupos de elementos del framework para un “perfil” de ejecución predeterminado. Vamos a verlos a traves de un ejemplo sencillo. Para ello usaremos Maven y las siguientes dependencias: 

&lt;dependency&gt;
&lt;groupId&gt;org.springframework&lt;/groupId&gt;
&lt;artifactId&gt;spring-core&lt;/artifactId&gt;
&lt;version&gt;3.2.13.RELEASE&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
&lt;groupId&gt;org.springframework&lt;/groupId&gt;
&lt;artifactId&gt;spring-context&lt;/artifactId&gt;
&lt;version&gt;3.2.13.RELEASE&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
&lt;groupId&gt;org.springframework&lt;/groupId&gt;
&lt;artifactId&gt;spring-beans&lt;/artifactId&gt;
&lt;version&gt;3.2.13.RELEASE&lt;/version&gt;
&lt;/dependency&gt;

[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2015/02/utilizando-spring-profiles"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2015-02-20T10:05:43Z</dc:date>
  </entry>
  <entry>
    <title>Java EE 6 vs Spring Framework 4 (Video)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/10/java-ee-6-vs-spring-framework-4-video" />
    <category term="patrones" />
    <category term="spring" />
    <category term="jee" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-10-31T11:14:24Z</updated>
    <published>2014-10-31T11:14:24Z</published>
    <content type="html">&lt;p&gt;Comparativa entre Java EE 6 y Spring Framework 4 .Otros videos relacionados con Java EE 6 vs Spring Framework 4: Spring MVC vs JSF ,POJOS, DTO y VO   La entrada Java EE 6 vs Spring Framework 4 (Video) aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/10/java-ee-6-vs-spring-framework-4-video"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-10-31T11:14:24Z</dc:date>
  </entry>
  <entry>
    <title>Spring @Inject  CDI y standards</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/09/spring-inject-cdi-y-standards" />
    <category term="anotaciones" />
    <category term="spring" />
    <category term="jee" />
    <category term="standards" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-09-19T13:57:42Z</updated>
    <published>2014-09-19T13:57:42Z</published>
    <content type="html">&lt;p&gt;La competencia entre los standares de Java EE y el framework Spring es cada vez más dura ya que las similitudes entre ambos son muchas. Elegir uno u otro depende de muchas cosas. En estos momentos existen muchos proyectos de Spring y algunos de ellos están valorando pasarse a Java EE en futuras evoluciones. Por ejemplo proyectos con JSF ya que la integración en Java EE es más sencilla al pertenecer al propio estandar. Si nos encontramos en situaciones como estas o similares. Podemos programar la aplicación de Spring para que use anotaciones que están dentro de los standares de de Java EE y nos facilite las migraciones. Spring @Inject Los servicios serán anotados con las siguientes anotaciones  del standard y no con las de Spring: @Named: Identifica una clase para que sea registrada y accesible[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/09/spring-inject-cdi-y-standards"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-09-19T13:57:42Z</dc:date>
  </entry>
  <entry>
    <title>JSF, Spring MVC y Java EE 8</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/08/jsf-spring-mvc-y-java-ee-8" />
    <category term="spring" />
    <category term="spring-mvc" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-08-26T10:25:38Z</updated>
    <published>2014-08-26T10:25:38Z</published>
    <content type="html">&lt;p&gt;Comparar JSF con Spring MVC es algo que ocurre muy habitualmente ya que son las dos tecnologías de capa de presentación mas utilizadas en los proyectos Java EE. La última vez que leí las estadísticas Spring MVC tenía un 40% y JSF un 22% . Con lo que mas del 60% de las aplicaciones se realizan con estos dos frameworks.   JSF Servidor y Controles JSF destaca por ser un framework orientado a controles y disponer de varias librerías de controles como RitchFaces, IceFaces y PrimeFaces cada una de las cuales aporta su enfoque particular. Eso sí todas bajo el paraguas del standard y de como este funciona.     La última evolución del standard ha aportado cosas muy interesantes como data-atributos y Stateless Views que permiten una gran integración con HTML5. Spring MVC Por el contrario Spring MVC ha[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/08/jsf-spring-mvc-y-java-ee-8"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-08-26T10:25:38Z</dc:date>
  </entry>
  <entry>
    <title>¿Que es Spring Framework? y un poco de Javascript para GenBetaDev</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/08/que-es-spring-framework-y-un-poco-de-javascript-para-genbetadev" />
    <category term="sin-categoria" />
    <category term="genbetadev" />
    <category term="spring" />
    <category term="javascript" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-08-22T14:37:12Z</updated>
    <published>2014-08-22T14:37:12Z</published>
    <content type="html">&lt;p&gt;He escrito la semana pasada un par de artículos como siempre para GenBetaDev. Aquí os dejo los enlaces ya que pienso que os pueden ser de interés. El primero es una breve introducción a Spring Framework que espero ayude a la gente a entender mejor como este framework funciona. El segundo artículo es un repaso al mundo de los objetos de Javascript La entrada ¿Que es Spring Framework? y un poco de Javascript para GenBetaDev aparece primero en Arquitectura Java.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/08/que-es-spring-framework-y-un-poco-de-javascript-para-genbetadev"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-08-22T14:37:12Z</dc:date>
  </entry>
  <entry>
    <title>Spring Anotaciones vs XML</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/08/spring-anotaciones-vs-xml" />
    <category term="flexibilidad" />
    <category term="anotaciones" />
    <category term="spring" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-08-18T13:37:35Z</updated>
    <published>2014-08-18T13:37:35Z</published>
    <content type="html">&lt;p&gt;Muchas veces la gente me pregunta si es mejor usar Anotaciones o ficheros XML a nivel de framework Spring . En un primer momento es más que evidente que el uso de ficheros XML hace que a veces la  propia aplicación sea un poco inmanejable. Esto es debido a que cada uno de los Beans que utilizamos debe registrarse en el fichero XML. Cuantos más beans tengamos más inmanejable será el fichero ApplicatiónContext.xml .Imaginemonos que tenemos los siguientes Beans (ServicioA,ServicioB) a continuación se muestra el fichero ApplicationContext.xml.   

&lt;beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans

http://www.springframework.org/schema/beans/spring-beans-4.0.xsd


http://www.springframework.org/schema/context


http://www.springframework.org/schema/context/spring-context.xsd"&gt;

&lt;bean[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/08/spring-anotaciones-vs-xml"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-08-18T13:37:35Z</dc:date>
  </entry>
  <entry>
    <title>Spring Framework y aislamiento</title>
    <link rel="alternate" href="http://www.blogstack.info/post/arquitecturajava/2014/07/spring-framework-y-aislamiento" />
    <category term="weblogic" />
    <category term="spring" />
    <category term="jboss" />
    <author>
      <name>Cecilio Álvarez Caules</name>
    </author>
    <updated>2014-07-28T11:08:47Z</updated>
    <published>2014-07-28T11:08:47Z</published>
    <content type="html">&lt;p&gt;Hoy en día dos de las tecnologías más habituales en el mundo Java para trabajar son los EJBs y Spring Framework. Entre ambas se reparten una cuota de mercado importante. En muchas ocasiones me he encontrado opiniones muy favorables al uso de EJB debido a que es el standard. Esto en teoría facilita sobre manera la migración de las aplicaciones entre un servidor de aplicaciones y otro.     EJBs y Standards Si bien lo anteriormente expuesto es cierto, la realidad es que  es un “cierto” relativo ya que muchas veces los servidores de aplicaciones nos aportan funcionalidades aparte que les diferencian de la competencia. Temas como Caches, Persistencias Avanzadas, Cluster etc etc. Características que vamos a querer usar en muchas ocasiones y que pueden convertir a nuestra aplicación en una aplicación[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/arquitecturajava/2014/07/spring-framework-y-aislamiento"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Cecilio Álvarez Caules</dc:creator>
    <dc:date>2014-07-28T11:08:47Z</dc:date>
  </entry>
</feed>

