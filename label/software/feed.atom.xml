<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2014-04-30T20:06:16Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2014-04-30T20:06:16Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Ejemplo lista de tareas con Marionette</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-lista-de-tareas-con-marionette" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-25T22:59:42Z</updated>
    <published>2013-08-30T12:28:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Marionette" src="http://2.bp.blogspot.com/-ODdQesCGeKg/UiCFBR7_Z_I/AAAAAAAACmg/an6e-SJv-jA/s200/marionette.png" height="200" title="Marionette" width="146" /&gt; 
&lt;/div&gt;Como comentaba en el 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;ejemplo de una aplicaci&amp;oacute;n de una lista de tareas en una aplicaci&amp;oacute;n javascript&lt;/a&gt;&amp;nbsp;Backbone es una herramienta que nos puede ayudar mucho a evitar que el c&amp;oacute;digo se nos convierta en dif&amp;iacute;cil de manejar facilit&amp;aacute;ndonos como estructurarlo con los modelos, colecciones y vistas y permiti&amp;eacute;ndonos separar el modelo de la vista actualizando estas &amp;uacute;ltimas a trav&amp;eacute;s de los eventos que produce el modelo y escuchados en las vistas. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;a href="http://backbonejs.org/"&gt;Backbone&lt;/a&gt; es una herramienta que nos da bastante libertad en cuanto a como queremos hacer las cosas y de lo que ofrece podemos usar solo lo que queramos. En algunos casos podemos considerar que Backbone ya es de por si una soluci&amp;oacute;n suficiente pero pero en otros podemos necesitar algo que nos facilite la tarea un poco m&amp;aacute;s, de hecho hay muchas&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-lista-de-tareas-con-marionette"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-08-30T12:28:00Z</dc:date>
  </entry>
  <entry>
    <title>Introducción a Elasticsearch</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/introduccion-a-elasticsearch" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-25T15:15:05Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/elasticsearch.png" alt="Elasticsearch" title="Elasticsearch" /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;Continuando con la forma de &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/busquedas-de-texto-completo-en-objetos-de-dominio.html"&gt;como dar soluci&amp;oacute;n a la b&amp;uacute;squedas en las entidades de dominio&lt;/a&gt; en esta entrada profundizar&amp;eacute; en la soluci&amp;oacute;n que comentaba de usar &lt;a href="http://www.elasticsearch.org"&gt;Elasticsearch&lt;/a&gt; (ES). ES se basa en &lt;a href="http://lucene.apache.org/core/"&gt;Lucene&lt;/a&gt; pero expone su funcionalidad a trav&amp;eacute;s de una interfaz REST recibiendo y enviando datos en formato JSON y oculta mediante esta interfaz los detalles internos de lucene. Esta interfaz permite que pueda ser utilizada por cualquier plataforma no solo Java, puede usarse desde Python, .NET, PHP o incluso desde un navegador con Javascript. Es persistente, es decir, que lo que indexemos en ella sobrevivir&amp;aacute; a un reinicio del servidor.&lt;/p&gt; 
&lt;p&gt;Como comentaba en &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/busquedas-de-texto-completo-en-objetos-de-dominio.html"&gt;el art&amp;iacute;culo anterior de b&amp;uacute;squedas sobre entidades de dominio&lt;/a&gt; ES nos puede servir para hacer b&amp;uacute;squedas a texto completo pero tambi&amp;eacute;n podemos hacer otra serie de cosas adicionales que no podemos con una base de datos relacional aunque soporte en su lenguaje SQL b&amp;uacute;squeda a texto completo, por ejemplo, resaltado (highlight) y facetas (facets), tambi&amp;eacute;n permite hacer b&amp;uacute;squedas vagas (fuzzy) y soporta diferentes analizadores seg&amp;uacute;n el idioma de la propiedad en que se busque. El indexar y desindexar los datos en elasticsearch para que luego puedan ser buscados es responsabilidad nuestra y adem&amp;aacute;s de insertarlos o eliminarlos en la base de datos debemos hacer lo mismo en ES ya sea haci&amp;eacute;ndolo en ambos sitios a la vez o mediante un proceso de fondo que se encargue de ello.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/introduccion-a-elasticsearch"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Backbone y React</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-11T14:33:28Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/backbone.png" alt="Backbone" title="Backbone" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/react.png" alt="React" title="React" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En anteriores entradas explicaba como hacer el t&amp;iacute;pico ejemplo que se suele usar como demostraci&amp;oacute;n en los framework MVC de Javascript que consiste en una lista de tareas en la que se pueden a&amp;ntilde;adir nuevas, marcarlas como completadas y eliminarlas. Realice este ejemplo en uno de ellos &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;usando solo Backbone&lt;/a&gt; y posteriormente &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;usando Marionette&lt;/a&gt;. Estos ejemplos eran parte de una serie de art&amp;iacute;culos sobre Javascript que la que mostaba como usar muchas otras herramientas como &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;Require JS&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html"&gt;Mustache&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html"&gt;logging con javscript&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/capturar-errores-de-javascript.html"&gt;capturar errores en javascript&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html"&gt;introducci&amp;oacute;n a Backbone&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;lista de tarea con Backbone, RESTEasy y Tapestry&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html"&gt;pruebas unitarias con Jasmine y Sinon&lt;/a&gt;, &lt;a href="http://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/"&gt;Usar Grunt para ejecutar teses unitarios de c&amp;oacute;digo Javascript&lt;/a&gt; y que constituyen parte del actual &amp;laquo;estado del arte&amp;raquo; en cuanto a desarrollo con Javascript.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Backbone, RESTEasy y Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/04/ejemplo-lista-de-tareas-con-backbone-resteasy-y-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T16:11:56Z</updated>
    <published>2013-04-26T19:38:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Backbone.js" src="http://2.bp.blogspot.com/-SMyoDvx_-j8/UXFvpfyC7iI/AAAAAAAACec/LiLs_goZU4Y/s320/backbone.png" height="56" title="Backbone.js" width="320" /&gt; 
&lt;/div&gt;Normalmente escribo art&amp;iacute;culos con ejemplos que tratan sobre una &amp;uacute;nica tecnolog&amp;iacute;a, al tratar cada tecnolog&amp;iacute;a por separado entender que puede ofrecer es m&amp;aacute;s sencillo pero en una aplicaci&amp;oacute;n real normalmente se usan varias tecnolog&amp;iacute;as combinadas y al mismo tiempo. Esta entrada aunque sigue siendo un ejemplo es mucho m&amp;aacute;s parecido a lo que podr&amp;iacute;a ser una aplicaci&amp;oacute;n real que lo que he explicado durante las &amp;uacute;ltimas entradas. En esta serie sobre javascript he explicado un mont&amp;oacute;n de cosas por separado entre ellas 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;RequireJS&lt;/a&gt;,&amp;nbsp; 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html"&gt;Mustache&lt;/a&gt;,&amp;nbsp; 
&lt;a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html"&gt;Backbone&lt;/a&gt;, 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/integracion-tapestry-con-resteasy.htm.html"&gt;servicios rest con Tapestry&lt;/a&gt; y 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/02/ejemplo-sencillo-de-web-service-con-resteasy.html"&gt;RESTEasy&lt;/a&gt;. En esta entrada har&amp;eacute; un ejemplo haciendo uso de todas las anteriores y alguna cosa m&amp;aacute;s adicional como 
&lt;a href="http://twitter.github.io/bootstrap/"&gt;twitter bootstrap&lt;/a&gt;. 
&lt;br /&gt; 
&lt;br /&gt;El ejemplo consiste en una lista de tareas, pudi&amp;eacute;ndose introducir nuevas tareas y marcarlas como realizadas. Tambi&amp;eacute;n se podr&amp;aacute; eliminar de la lista las tareas completadas y ver un resumen con el n&amp;uacute;mero de tareas completadas y de tareas totales.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/04/ejemplo-lista-de-tareas-con-backbone-resteasy-y-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-04-26T19:38:00Z</dc:date>
  </entry>
  <entry>
    <title>Usar Grunt para ejecutar teses unitarios de código Javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T14:43:23Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/grunt.png" alt="Grunt" title="Grunt" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En la &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;serie de art&amp;iacute;culos que escrib&amp;iacute; sobre javascript&lt;/a&gt; hice un ejemplo m&amp;aacute;s o menos complejo y parecido a lo que podr&amp;iacute;a ser una aplicaci&amp;oacute;n real usando muchas de las herramientas que ahora se consideran una buena opci&amp;oacute;n para desarrollar aplicaciones javascript como &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;RequireJS&lt;/a&gt;, &lt;a href="http://www.genbetadev.com/desarrollo-web/patron-de-diseno-mvc-del-lado-cliente-con-backbonejs"&gt;Backbone&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;Marionette&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html"&gt;Jasmine y Sinon&lt;/a&gt;. En el &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;ejemplo de la lista de tareas con estas herramientas&lt;/a&gt; hice unas cuantas pruebas unitarias para mostrar en un ejemplo como son y la forma de usar &lt;a href="http://jasmine.github.io/"&gt;Jasmine&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Sin embargo, para ejecutar las pruebas unitarias se necesitaba un navegador y hacerlo de forma manual cuando quisi&amp;eacute;ramos comprobar el estado de las pruebas. Lo ideal tal y como se comenta en el libro &lt;a href="http://www.amazon.es/gp/product/B000SEGEKI/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=3626&amp;amp;creative=24822&amp;amp;creativeASIN=B000SEGEKI&amp;amp;linkCode=as2&amp;amp;tag=blobit-21"&gt;The Pragmatic Programmer&lt;/a&gt;&lt;img src="http://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;amp;l=as2&amp;amp;o=30&amp;amp;a=B000SEGEKI" width="1" height="1" alt="" style="border:none !important; margin:0px !important;" /&gt; es que las pruebas unitarias se ejecuten de forma automatizada con la herramienta de construcci&amp;oacute;n que usemos, esto evitar&amp;aacute; que se nos olvide ejecutarlas en cada cambio y as&amp;iacute; descubriremos los errores pronto, tambi&amp;eacute;n podremos hacer que se ejecuten en un entorno de integraci&amp;oacute;n continua como podr&amp;iacute;a ser &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Novedades y nuevas características de Java 8</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-03-28T20:00:00Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/java.png" alt="Java" title="Java" /&gt; 
&lt;/div&gt; 
&lt;p&gt;El 18 de marzo de 2014 se public&amp;oacute; la nueva versi&amp;oacute;n de la plataforma &lt;a href="http://www.oracle.com/technetwork/java/javase/overview/java8-2100321.html"&gt;Java 8&lt;/a&gt;, Java 7 fue liberada el en julio de 2011. Java 8 incorporar&amp;aacute; varias novedades siguiendo la tendencia de otros lenguajes como la incorporaci&amp;oacute;n de lambdas o closures o una demandada nueva API para el manejo de fechas entre otras muchas caracter&amp;iacute;sticas m&amp;aacute;s. La &lt;a href="http://openjdk.java.net/projects/jdk8/features"&gt;lista completa de novedades&lt;/a&gt; es bastante amplia, a continuaci&amp;oacute;n pondr&amp;eacute; lo que me ha parecido m&amp;aacute;s destacable:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Se a&amp;ntilde;aden las expresiones lambda o closures y se adapta la API para usarlas en los sitios que se pueda.&lt;/li&gt; 
 &lt;li&gt;Se definen nuevos perfiles compactos para dispositivos que no necesitan toda la API Java, esto es una alternativa a la modularizaci&amp;oacute;n. Inicialmente la modularizaci&amp;oacute;n era una caracter&amp;iacute;stica que estaba planificada para Java 8 pero finalmente se ha aplazado a posteriores versiones.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Guía para la creación de un blog con Octopress</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/03/guia-para-la-creacion-de-un-blog-con-octopress" />
    <category term="planeta-codigo" />
    <category term="blog" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-03-14T18:19:24Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/octopress.png" alt="Octopress" title="Octopress" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En la &lt;a href="http://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/"&gt;primera entrada de este blog usando Octopress&lt;/a&gt; ya comentaba las razones por las que he pasado de usar &lt;a href="http://www.blogger.com"&gt;Blogger&lt;/a&gt; a usar &lt;a href="http://octopress.org/"&gt;Octopress&lt;/a&gt;. Entre las razones del cambio estaban la posibilidad en Octopress de escribir en markdown, edici&amp;oacute;n desconectado (para textos e im&amp;aacute;genes), dise&amp;ntilde;o adaptable y m&amp;aacute;s personalizable, git y control de versiones, alojamiento en cualquier servidor web. A&amp;uacute;n sin ser Octpress tambi&amp;eacute;n tiene cosas mejorables pero desde luego me est&amp;aacute; resultando mucho mejor que blogger.&lt;/p&gt; 
&lt;p&gt;En esta entrada quiero escribir una gu&amp;iacute;a con los pasos necesarios para crear un blog en Octopress de forma r&amp;aacute;pida y algunas funcionalidades a tener en cuenta o que deberemos realizar.&lt;/p&gt; 
&lt;p&gt;Antes de empezar supondr&amp;eacute; que ya tenemos en nuestro sistema &lt;a href="https://www.archlinux.org/packages/extra/x86_64/ruby/"&gt;ruby&lt;/a&gt; y &lt;a href="https://www.archlinux.org/packages/extra/x86_64/git/"&gt;git&lt;/a&gt; instalados. En Linux basta con buscar el paquete correspondiente para nuestra distribuci&amp;oacute;n e instalarlo con el gestor de paquetes. Con &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/03/guia-para-la-creacion-de-un-blog-con-octopress"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Introducción y ejemplo sencillo de Java Message Service (JMS)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-03-08T00:00:00Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/java.png" alt="Java" title="Java" /&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition"&gt;La plataforma Java EE&lt;/a&gt; (Java Enterprise Edition) pone a disposici&amp;oacute;n de los desarrolladores varias especificaciones, estas especificaciones describen las funcionalidades y la API que deben proporcionar las implementaciones y proporcionan al desarrollador herramientas para facilitar, hacer mejor las aplicaciones y de forma est&amp;aacute;ndar seg&amp;uacute;n estas especificaciones. Haciendo uso de una de estas especificaciones es posible cambiar de una implementaci&amp;oacute;n a otra de forma transparente y sin modificar ninguna l&amp;iacute;nea de c&amp;oacute;digo de la aplicaci&amp;oacute;n (en teor&amp;iacute;a). Hay especificaciones para persistencia en base de datos (JPA), para transaccionalidad (JTA), para servicios web (JAX-WS ) y REST (JAX-RS) entre otras. En el siguiente enlace puede encontrarse el &lt;a href="https://glassfish.java.net/downloads/ri/"&gt;listado completo de especificaciones y sus versiones de JEE 7&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Configurar SSL en un servidor Tomcat, JBoss, WildFly, Lighttpd, nginx o Apache</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-o-apache" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-02-28T15:58:17Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/openssl.png" alt="OpenSSL" title="OpenSSL" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En entradas anteriores he explicado &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html"&gt;en que consiste la criptograf&amp;iacute;a y GPG&lt;/a&gt; y como podemos usarlo a nivel personal para firmar y cifrar archivos y &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/como-usar-gpg-con-evolution.html"&gt;firmar correos electr&amp;oacute;nicos con el cliente de correo Evolution&lt;/a&gt;. Tambi&amp;eacute;n he comentado &lt;a href="http://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/"&gt;como crer un certificado con OpenSSL y como convertirlo a diferentes formatos&lt;/a&gt;. En esta entrada explicar&amp;eacute; como usar un certificdo creado con OpenSSL para proporcionar acceso SSL al sevidor web o servidor de aplicaciones, explicar&amp;eacute; cual es la configuraci&amp;oacute;n necesaria para los servidores &lt;a href="http://tomcat.apache.org/"&gt;Tomcat&lt;/a&gt;, &lt;a href="http://www.lighttpd.net/"&gt;Lighttpd&lt;/a&gt;, &lt;a href="http://www.jboss.org/jbossas"&gt;JBoss&lt;/a&gt;/&lt;a href="http://wildfly.org/"&gt;WildFly&lt;/a&gt;, &lt;a href="http://nginx.org/"&gt;nginx&lt;/a&gt; y &lt;a href="http://www.apache.org/"&gt;Apache&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Usar una conexi&amp;oacute;n SSL y un certificado de servidor evita que los datos entre el navegador del usuario y el servidor sean legibles para una tercera parte siendo mayor la seguridad en nuestras aplicaciones o dando mayor confianza al usuario y usando algunos certificados al aparecer en la barra de navegaci&amp;oacute;n del navegador en verde el nombre de la entidad detr&amp;aacute;s de la p&amp;aacute;gina evitando problemas de suplantaci&amp;oacute;n de identidad.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-o-apache"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Introducción a la criptografía e inicio con GPG</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/11/introduccion-a-la-criptografia-e-inicio-con-gpg" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="tecnologia" />
    <category term="arch-linux" />
    <category term="software-libre" />
    <category term="gnulinux" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-02-23T01:13:34Z</updated>
    <published>2013-11-15T20:18:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;div style="clear: both; text-align: center;"&gt; 
  &lt;img alt="GnuPG" src="http://4.bp.blogspot.com/-wnNsw8HqDxE/UoZZ15a-ZOI/AAAAAAAACrc/c4ZId2hHNqs/s320/gnupg.png" height="105" title="GnuPG" width="320" /&gt; 
 &lt;/div&gt; 
&lt;/div&gt;Internet est&amp;aacute; formado por una red de m&amp;aacute;quinas interconectadas que en conjunto permiten que un par de m&amp;aacute;quinas de esa red puedan comunicarse entre si aunque no est&amp;eacute;n directamente conectadas, el 
&lt;a href="http://es.wikipedia.org/wiki/Transmission_Control_Protocol"&gt;protocolo TCP/IP&lt;/a&gt; es el que posibilita esa comunicaci&amp;oacute;n. En la comunicaci&amp;oacute;n entre las m&amp;aacute;quinas que no est&amp;aacute;n directamente conectadas la informaci&amp;oacute;n de la m&amp;aacute;quina origen ha de ser transportada por un camino de varias m&amp;aacute;quinas hasta llegar a a la m&amp;aacute;quina destino y posteriormente de vuelta por el mismo camino u otro. En muchos casos la informaci&amp;oacute;n que viaja a lo largo de ese camino de terceras m&amp;aacute;quinas no es relevante ni sensible pero en otros casos podemos necesitar o queremos evitar que esas terceras m&amp;aacute;quinas puedan acceder a la informaci&amp;oacute;n que se est&amp;aacute; transmitiendo. En este &amp;uacute;ltimo caso es donde entra en acci&amp;oacute;n la criptograf&amp;iacute;a.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/11/introduccion-a-la-criptografia-e-inicio-con-gpg"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-11-15T20:18:00Z</dc:date>
  </entry>
  <entry>
    <title>Generar y convertir claves y certificados con OpenSSL</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl" />
    <category term="programacion" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-02-21T16:36:21Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/openssl.png" alt="OpenSSL" title="OpenSSL" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Para un uso personal como enviar correos o archivos cifrados o firmados digitalmente usar &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html"&gt;GnuPG&lt;/a&gt; es una buena opci&amp;oacute;n. En Internet los servidores tambi&amp;eacute;n se aprovechan del uso de criptograf&amp;iacute;a para realizar comunicaciones seguras entre el usuario y el servidor.&lt;/p&gt; 
&lt;p&gt;Para hacer uso en un servidor de una comunicaci&amp;oacute;n https donde los datos viajan cifrados y sin que otras partes salvo el usuario y el servidor puedan acceder a los datos necesitamos un certificado digital. Un certificado es un archivo que contiene la clave p&amp;uacute;blica sirvi&amp;eacute;ndonos para verificar su autenticidad. Un certificado autofirmado es un certificado firmado con la misma clave privada asociada a la clave p&amp;uacute;blica que contiene el certificado. Un certificado autofirmado es suficiente para un entorno de pruebas pero en un servidor para proporcionar confianza a los usuarios deberemos solicitar que una autoridad de certificados que nos firme con su clave nuestro certificado, si el usuario conf&amp;iacute;a en esa autoridad de certificado puede de esta manera confiar en nuestro certificado y clave p&amp;uacute;blica.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Libro sobre desarrollo de aplicaciones con Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/07/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="planeta-linux" />
    <category term="tecnologia" />
    <category term="software-libre" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-02-14T20:12:44Z</updated>
    <published>2013-07-24T17:06:00Z</published>
    <content type="html">&lt;p&gt;Recientemente he publicado 
&lt;a href="http://goo.gl/Vx8icI"&gt;PlugIn Tapestry&lt;/a&gt;, un libro acerca del desarrollo de aplicaciones web en el lenguaje Java y con el framework 
&lt;a href="http://tapestry.apache.org/"&gt;Apache Tapestry&lt;/a&gt;. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;div&gt; 
 &lt;div style="clear: both; text-align: center;"&gt; 
  &lt;a href="http://goo.gl/WFQgY"&gt;&lt;img alt="PlugIn Tapestry" src="http://1.bp.blogspot.com/-CUcQ3fWr9Yw/Ue7FYGDd_SI/AAAAAAAACls/eLuRuVvRz7w/s320/PlugInTapestry.png" height="320" style="border-color: red; border-style: solid; border-width: 1px;" title="PlugIn Tapestry" width="226" /&gt;&lt;/a&gt; 
 &lt;/div&gt;Apache Tapestry es un framework orientado a componentes para crear aplicaciones web r&amp;aacute;pidas, din&amp;aacute;micas, robustas y altamente escalables en la plataforma Java. Al basarse en componentes es distinto de los muchos basados en acciones similares en esencia a Struts que podemos encontrar en la plataforma Java como SpringMVC, Grails y Play! y tambi&amp;eacute;n de los muchos otros en los que la principal diferencia es el lenguaje como Django (Python), Symfony (PHP), .NET MVC (C#) o Ruby On Rails (Ruby). 
 &lt;br /&gt; 
 &lt;br /&gt;Incluyendo la descripci&amp;oacute;n de las caracter&amp;iacute;sticas del framework el libro trata la mayor&amp;iacute;a de aspectos que puede necesitar una aplicaci&amp;oacute;n o p&amp;aacute;gina web, entre ellos: 
&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/07/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-07-24T17:06:00Z</dc:date>
  </entry>
  <entry>
    <title>Libro sobre desarrollo de aplicaciones con Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-02-14T19:10:34Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/tapestry.png" alt="Apache Tapestry" title="Apache Tapestry" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Hace unos meses publiqu&amp;eacute; el libro PlugIn Tapestry, un libro acerca del desarrollo de aplicaciones y p&amp;aacute;ginas web en el lenguaje Java y con el framework &lt;a href="http://tapestry.apache.org/"&gt;Apache Tapestry&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;PlugIn Tapestry&lt;/h2&gt; 
&lt;p&gt;Apache Tapestry es un framework orientado a componentes para crear aplicaciones web r&amp;aacute;pidas, din&amp;aacute;micas, robustas y altamente escalables en la plataforma Java. Al basarse en componentes es distinto de los muchos basados en acciones similares en esencia a Struts que podemos encontrar en la plataforma Java como &lt;a href="http://projects.spring.io/spring-framework/"&gt;Spring&lt;/a&gt;, &lt;a href="http://grails.org/"&gt;Grails&lt;/a&gt; y &lt;a href="http://www.playframework.com/"&gt;Play!&lt;/a&gt; y tambi&amp;eacute;n de los muchos otros en los que la principal diferencia es el lenguaje como &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; (Python), &lt;a href="http://symfony.com/"&gt;Symfony&lt;/a&gt; (PHP), &lt;a href="http://www.asp.net/mvc"&gt;ASP.NET MVC&lt;/a&gt; (C#) o &lt;a href="http://rubyonrails.org/"&gt;Ruby On Rails&lt;/a&gt; (Ruby).&lt;/p&gt; 
&lt;div style="text-align: center;"&gt; 
 &lt;a href="http://picodotdev.github.io/blog-bitix/images/custom/posts/12/portada-PugInTapestry.png" title="Libro sobre Apache Tapestry"&gt;&lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/posts/12/portada-PugInTapestry-thumb.png" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Incluyendo la descripci&amp;oacute;n de las caracter&amp;iacute;sticas del framework el libro trata la mayor&amp;iacute;a de aspectos que puede necesitar una aplicaci&amp;oacute;n o p&amp;aacute;gina web, entre ellos:&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Presentación sobre Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/02/presentacion-sobre-apache-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-02-14T15:05:53Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/tapestry.png" alt="Apache Tapestry" title="Apache Tapestry" /&gt; 
&lt;/div&gt; 
&lt;p&gt;El 10 de febrero tuve la oportunidad de dar una charla, la primera, sobre &lt;a href="http://tapestry.apache.org/"&gt;Apache Tapestry&lt;/a&gt; para el equipo de desarrolladores de la empresa en la que trabajo. Que en el equipo de desarrollo tengamos la posibilidad de vez en cuando dedicar un par de horas para juntarnos y compartir conocimiento es una buena iniciativa ya que siendo ya un equipo bastante grande de personas y con un nivel t&amp;eacute;cnico elevado cada uno tiene un conocimiento que los dem&amp;aacute;s pueden estar interesados en conocer al menos a nivel superficial, es motivador tener estas oportunidades.&lt;/p&gt; 
&lt;div style="text-align: center;"&gt; 
 &lt;a href="http://picodotdev.github.io/blog-bitix/images/custom/posts/11/presentacion-apache-tapestry.jpg" title="Presentaci&amp;oacute;n sobre Apache Tapestry"&gt;&lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/posts/11/presentacion-apache-tapestry-thumb.jpg" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Fue una charla simplemente como cultura general ya que el framework y el lenguaje que usamos como pila tecnol&amp;oacute;gica es &lt;a href="http://grails.org/"&gt;Grails&lt;/a&gt; y &lt;a href="http://groovy.codehaus.org/"&gt;Groovy&lt;/a&gt; y eso es complicado que cambie. Otro motivo fue poder compartir el conocimiento de este framework para el desarrollo de aplicaciones y p&amp;aacute;ginas web que a mi me gusta mucho. Si est&amp;aacute;s suscrito al &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/02/presentacion-sobre-apache-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Servidor de aplicaciones JBoss/WildFly</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/02/servidor-de-aplicaciones-jbosswildfly" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-02-07T21:35:31Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/wildfly.png" alt="WildFly" title="WildFly" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Para una peque&amp;ntilde;a (o no tan peque&amp;ntilde;a) aplicaci&amp;oacute;n web desarrollada en la plataforma Java un servidor como &lt;a href="http://tomcat.apache.org/"&gt;Tomcat&lt;/a&gt; o &lt;a href="http://www.eclipse.org/jetty/"&gt;Jetty&lt;/a&gt; es suficiente. Pero una aplicaci&amp;oacute;n grande o un entorno empresarial probablemente empiece a requerir funcionalidades que Tomcat no proporciona de por si. En algunos casos una librer&amp;iacute;a puede suplir esta carencia, este podr&amp;iacute;a ser el caso de &lt;a href="http://hibernate.org/"&gt;Hibernate&lt;/a&gt; para la persistencia o &lt;a href="http://shiro.apache.org/"&gt;Apache Shiro&lt;/a&gt; para la seguridad de la aplicaci&amp;oacute;n. Sin embargo, cuando sea posible y tenga sentido es buena idea seguir alguna de las especificaciones o &lt;a href="http://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition"&gt;APIs que proporciona la plataforma JEE&lt;/a&gt; ya que de esta manera podremos cambiar de implementaci&amp;oacute;n sin necesidad de modificar el c&amp;oacute;digo de la aplicaci&amp;oacute;n y permite integrar dos sistemas diferentes si ambos siguen una determinada especificaci&amp;oacute;n. Un ejemplo podr&amp;iacute;a ser el caso de Hibernate con la especificaci&amp;oacute;n JPA que proporciona una funcionalidad equivalente (de hecho esta especificaci&amp;oacute;n se basa en Hibernate y se puede usar Hibernate como implementaci&amp;oacute;n a trav&amp;eacute;s de la API que define JPA) o de integraci&amp;oacute;n de sistemas con JMS.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/02/servidor-de-aplicaciones-jbosswildfly"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Logging usando marcadores con slf4j y logback</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/01/logging-usando-marcadores-con-slf4j-y-logback" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-01-31T16:10:17Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/java.png" alt="Java" title="Java" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Un sistema de logging en una aplicaci&amp;oacute;n es indispensable para saber lo que est&amp;aacute; sucediendo en la aplicaci&amp;oacute;n en el mismo momento o pasado un tiempo. Es de gran utilidad tanto para en el momento de desarrollar la aplicaci&amp;oacute;n como para una vez puesta en producci&amp;oacute;n. Con el registro de las trazas podemos obtener informaci&amp;oacute;n que nos permitir&amp;aacute; descubrir un error o averiguar m&amp;aacute;s f&amp;aacute;cilmente y r&amp;aacute;pidamente porque sucede alg&amp;uacute;n comportamiento que no es como se espera.&lt;/p&gt; 
&lt;p&gt;En Java hay varios sistemas de logging entre los m&amp;aacute;s utilizados est&amp;aacute;n &lt;a href="http://logging.apache.org/log4j/1.2/"&gt;log4j&lt;/a&gt;, &lt;a href="http://logback.qos.ch/"&gt;logback&lt;/a&gt;, &lt;a href="http://docs.oracle.com/javase/7/docs/api/java/util/logging/package-summary.html"&gt;java.util.logging&lt;/a&gt; y la capa de abstracci&amp;oacute;n &lt;a href="http://www.slf4j.org/"&gt;slf4j&lt;/a&gt; sobre varios de estas librer&amp;iacute;as. En estas librer&amp;iacute;as de logging las trazas se emiten a trav&amp;eacute;s de un logger que normalmente se corresponde con el nombre de la clase en la que se emite la traza. De esta forma las trazas se pueden filtrar por el nivel de importancia de la traza (debug, info, warn, …) y por el nombre del logger de forma que podemos obtener un registro de las trazas emitidas por los loggers que deseamos.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/01/logging-usando-marcadores-con-slf4j-y-logback"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Ejemplo del patrón de diseño State</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-del-patron-de-diseno-state" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-01-24T21:16:44Z</updated>
    <published>2013-08-24T20:17:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Java" height="200" src="http://2.bp.blogspot.com/-hC2-QuC33AU/TBeztET3lAI/AAAAAAAAAZ8/EzZnNZw5do0/s200/java.png" title="Java" width="107" /&gt; 
&lt;/div&gt;Un patr&amp;oacute;n de dise&amp;ntilde;o aplicado adecuadamente para resolver un problema puede ayudar enormemente a simplificar el c&amp;oacute;digo y facilitar el mantenimiento. Si tenemos un c&amp;oacute;digo que es dif&amp;iacute;cil de mantener y entender, hay c&amp;oacute;digo duplicado y no tiene ninguna organizaci&amp;oacute;n puede que aplicar un patr&amp;oacute;n de dise&amp;ntilde;o nos resuelva el problema en gran parte. 
&lt;br /&gt; 
&lt;br /&gt;Hace ya un tiempo comente 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2012/03/patrones-de-diseno-en-la-programacion.html"&gt;cuales son los principales patrones de dise&amp;ntilde;o&lt;/a&gt; y hice una entrada con un 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2012/04/ejemplo-del-patron-de-diseno-command-y.html"&gt;ejemplo del patr&amp;oacute;n de dise&amp;ntilde;o Command&lt;/a&gt;. En esta entrada pondr&amp;eacute; un ejemplo del patr&amp;oacute;n de dise&amp;ntilde;o State. 
&lt;br /&gt; 
&lt;br /&gt;El patr&amp;oacute;n de dise&amp;ntilde;o State nos puede ser de mucha utilidad en los casos que por ejemplo una entidad tenga asociado un grafo de estados con transiciones permitidas y no permitidas entre algunos estados. En funci&amp;oacute;n del estado, sus datos y la transici&amp;oacute;n la entidad puede comportarse de forma diferente. Por ejemplo, supongamos que tenemos una entidad Compra que a lo largo de su vida en la aplicaci&amp;oacute;n pasa por diferentes estados:&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-del-patron-de-diseno-state"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-08-24T20:17:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo del patrón de diseño No Operation</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/01/ejemplo-del-patron-de-diseno-no-operation" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-01-24T15:48:40Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/java.png" alt="Java" title="Java" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Hasta el momento ya he escrito alguna entrada sobre los &lt;a href="http://elblogdepicodev.blogspot.com.es/2012/03/patrones-de-diseno-en-la-programacion.html"&gt;patrones de dise&amp;ntilde;o&lt;/a&gt; en general, sobre algunos casos particulares como el &lt;a href="http://elblogdepicodev.blogspot.com.es/2012/04/ejemplo-del-patron-de-diseno-command-y.html"&gt;patr&amp;oacute;n de dise&amp;ntilde;o Command&lt;/a&gt; relacionado con la programaci&amp;oacute;n concurrente y sobre el &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-del-patron-de-diseno-state.html"&gt;patr&amp;oacute;n de dise&amp;ntilde;o State&lt;/a&gt; para hacer m&amp;aacute;quinas de estados. En esta entrada hablar&amp;eacute; sobre otro patr&amp;oacute;n de dise&amp;ntilde;o, el patr&amp;oacute;n No Operation y de que forma podemos aprovecharlo para resolver alg&amp;uacute;n problema y hacer nuestro c&amp;oacute;digo m&amp;aacute;s simple.&lt;/p&gt; 
&lt;p&gt;En un programa que emplea un lenguaje de programaci&amp;oacute;n orientado a objetos estos est&amp;aacute;n constantemente relacion&amp;aacute;ndose entre si a trav&amp;eacute;s de llamadas a m&amp;eacute;todos y a trav&amp;eacute;s de las referencias que un objeto posee de otros. Sin embargo, es habitual que un determinado m&amp;eacute;todo devuelva un null en vez de una referencia a un objeto. Esta referencia null puede ser un problema ya que nos obliga en el c&amp;oacute;digo hacer una comprobaci&amp;oacute;n antes de poder llamarlo. Si un m&amp;eacute;todo devuelve un null puede dar como resultado un &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/01/ejemplo-del-patron-de-diseno-no-operation"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Iniciar la Raspberry Pi desde un disco o memoria USB</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="hardware" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-01-10T11:41:33Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/raspberrypi.jpg" alt="Raspberry Pi" title="Raspberry Pi" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Por defecto la Raspberry Pi se instala en una tarjeta SD y se inicia desde ella, sin embargo, la tarjeta SD es muy lenta tanto en la lectura como en la escritura de datos y cuando tiene que hacerlo de forma intensiva el sistema queda sin responder y aparentemente atascado. Para aumentar muy notablemente el rendimiento de la Raspberry Pi podemos instalar la partici&amp;oacute;n del sistema en una memoria USB o disco duro externo.&lt;/p&gt; 
&lt;p&gt;En la gu&amp;iacute;a de &lt;a href="http://elblogdepicodev.blogspot.com.es/2012/06/guia-instalacion-raspberry-pi-con-arch.html"&gt;Instalaci&amp;oacute;n de la Raspberry Pi&lt;/a&gt; expliqu&amp;eacute; como instalar la distribuci&amp;oacute;n &lt;a href="http://archlinuxarm.org/"&gt;Arch Linux ARM&lt;/a&gt; en una tarjeta SD, esa gu&amp;iacute;a ser&amp;aacute; el punto de partida para esta entrada. La Raspberry Pi inicia el sistema desde la tarjeta SD por lo que aunque instalemos el sistema en un dispositivo USB seguiremos necesitando la tarjeta SD para que contenga al menos la partici&amp;oacute;n de arranque (boot).&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Raspberry Pi como Media Center con GeeXboX</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/01/raspberry-pi-como-media-center-con-geexbox" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="hardware" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-01-03T19:00:00Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/geexbox.png" alt="GeeXboX" title="GeeXboX" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/raspberrypi.jpg" alt="Raspberry Pi" title="Raspberry Pi" /&gt; 
&lt;/div&gt; 
&lt;p&gt;La Raspberry Pi es un computador del tama&amp;ntilde;o de una tarjeta de cr&amp;eacute;dito que se puede usar para diferentes prop&amp;oacute;sitos. Hasta hace no mucho a mi me serv&amp;iacute;a para descargar pel&amp;iacute;culas mediante torrent, sin embargo, puede usarse perfectamente para otros prop&amp;oacute;sitos muy interesantes como usarla como Media Center en una televisi&amp;oacute;n que no es una Smart TV o como Media Center con m&amp;aacute;s opciones.&lt;/p&gt; 
&lt;p&gt;Dada la popularidad que tiene la Raspberry Pi disponemos de varias distribuciones con soporte para usar la Raspberry Pi como centro multimedia de nuestro sal&amp;oacute;n. Las principales son:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://www.geexbox.org/"&gt;GeeXboX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.raspbmc.com/"&gt;RaspBMC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://openelec.tv/"&gt;OpenELEC&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Las tres opciones tienen la similitud que son muy f&amp;aacute;cilmente instalables (tambi&amp;eacute;n para alguien sin muchos conocimientos t&amp;eacute;cnicos) y que se basan en el programa &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/01/raspberry-pi-como-media-center-con-geexbox"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Enviar correos electrónicos firmados con el DNIe y Evolution</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="hardware" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-12-21T11:00:00Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/archlinux.png" alt="Arch Linux" title="Arch Linux" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/dnie.jpg" alt="DNIe" title="DNIe" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/evolution.png" alt="Evolution" title="Evolution" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Otra forma de la que podemos sacar partido al DNI electr&amp;oacute;nico adem&amp;aacute;s de para &lt;a href="http://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/"&gt;identificarnos en sitios web&lt;/a&gt; que lo soporten como medio de autenticaci&amp;oacute;n es usarlo para firmar digitalmente los correos electr&amp;oacute;nicos que enviamos. Ya he comentado &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/como-usar-gpg-con-evolution.html"&gt;como firmar correos electr&amp;oacute;nicos con GPG&lt;/a&gt; pero hacerlo con el DNI electr&amp;oacute;nico tiene la ventaja de que no necesitaremos &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html"&gt;crear una par de claves GPG&lt;/a&gt; sino que con tener el DNI e &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/instalar-un-lector-de-tarjetas-inteligentes-en-arch-linux.html"&gt;instalar un lector de tarjetas inteligentes&lt;/a&gt; ser&amp;aacute; suficiente.&lt;/p&gt; 
&lt;p&gt;En esta entrada explicar&amp;eacute; como usar el DNI electr&amp;oacute;nico para firmar digitalmente correos usando el cliente de correo &lt;a href="https://projects.gnome.org/evolution/"&gt;Evolution&lt;/a&gt;. Primeramente necesitaremos hacer una configuraci&amp;oacute;n adicional a la que hemos necesitado para poder usar el lector de tarjetas inteligentes y el DNIe en Linux. Y es usar el siguiente comando tal y como est&amp;aacute; comentado en &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Usar el DNI electrónico con Firefox en Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="hardware" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-12-21T11:00:00Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/archlinux.png" alt="Arch Linux" title="Arch Linux" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/dnie.jpg" alt="DNIe" title="DNIe" /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/firefox.png" alt="Firefox" title="Firefox" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Una vez hemos conseguido &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/instalar-un-lector-de-tarjetas-inteligentes-en-arch-linux.html"&gt;instalar el DNIe en Linux&lt;/a&gt; correctamente podemos empezar a darle alguna utilidad m&amp;aacute;s all&amp;aacute; de cuando se nos require para acreditar nuestra identidad. Como veremos en esta entrada podemos usar el DNI electr&amp;oacute;nico para hacer varios tr&amp;aacute;mites administrativos y consultas con la administraci&amp;oacute;n p&amp;uacute;blica, empresas o entidades que en su web soporten el DNIe como medio de autenticaci&amp;oacute;n.&lt;/p&gt; 
&lt;p&gt;En esta entrada explicar&amp;eacute; como usar el DNIe electr&amp;oacute;nico con la combinaci&amp;oacute;n del navegador &lt;a href="http://www.mozilla.org/es-ES/"&gt;Firefox&lt;/a&gt; y &lt;a href="http://www.linux.com/"&gt;Linux&lt;/a&gt;. Para ello primeramente debemos hacer que Firefox detecte el lector de tarjetas inteligentes, desde el men&amp;uacute; de Firefox vamos a &amp;laquo;Preferencias &amp;gt; Avanzado &amp;gt; Certificados &amp;gt; Dispositivos de seguridad&amp;raquo;.&lt;/p&gt; 
&lt;div style="text-align: center;"&gt; 
 &lt;a href="http://picodotdev.github.io/blog-bitix/images/custom/posts/1/preferencias-firefox.png" title="Preferencias de Firefox"&gt;&lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/posts/1/preferencias-firefox-thumb.png" alt="Preferencias de Firefox" title="Preferencias de Firefox" /&gt; &lt;/a&gt; 
 &lt;a href="http://picodotdev.github.io/blog-bitix/images/custom/posts/1/administrador-dispositivos-1.png" title="Administrador de dispositivos (1)"&gt;&lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/posts/1/administrador-dispositivos-1-thumb.png" alt="Administrador de dispositivos (1)" title="Administrador de dispositivos (1)" /&gt;&lt;/a&gt; 
 &lt;a href="http://picodotdev.github.io/blog-bitix/images/custom/posts/1/administrador-dispositivos-2.png" title="Administrador de dispositivos (2)"&gt;&lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/posts/1/administrador-dispositivos-2-thumb.png" alt="Administrador de dispositivos (2)" title="Administrador de dispositivos (2)" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;En esta pantalla pulsamos el bot&amp;oacute;n &amp;laquo;Cargar&amp;raquo; e introducimos los siguientes datos:&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Firmar digitalmente documentos con el DNIe y Sinadura</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="hardware" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-12-21T10:34:55Z</updated>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/dnie.jpg" alt="DNIe" title="DNIe" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/sinadura.png" alt="Sinadura" title="Sinadura" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Ya he comentado &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/instalar-un-lector-de-tarjetas-inteligentes-en-arch-linux.html"&gt;como instalar un lector de tarjetas inteligentes en linux para usar el DNI electr&amp;oacute;nico&lt;/a&gt; y que una vez instalado como podemos darle alg&amp;uacute;n uso &amp;uacute;til como por ejemplo &lt;a href="http://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/"&gt;autenticarnos con en DNI&lt;/a&gt; en las p&amp;aacute;ginas que lo soporten como medio de autenticaci&amp;oacute;n y el navegador Firefox. Tambi&amp;eacute;n he comentado &lt;a href="http://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/"&gt;como usar el DNI con el cliente de correo Evolution para enviar correos firmados digitalmente&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;En esta entrada voy a comentar como firmar digitalmente documentos en cualquier formato electr&amp;oacute;nico con la aplicaci&amp;oacute;n de software libre &lt;a href="http://www.sinadura.net/es/"&gt;Sinadura&lt;/a&gt;. La firma que hagamos con el DNIe sobre estos documentos puede tener la misma validez legal que la firma manuscrita.&lt;/p&gt; 
&lt;p&gt;Primeramente deberemos descargar la &amp;uacute;ltima versi&amp;oacute;n de &lt;a href="http://www.sinadura.net/es/"&gt;Sinadura&lt;/a&gt; seg&amp;uacute;n la arquitectura de nuestro procesador, de 32 bits o de 64 bits y la plataforma linux o windows. El archivo descargado es un instalador que deberemos ejecutarlo, como es un programa Java deberemos tener instalado previamente un entorno de ejecuci&amp;oacute;n de Java como el &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
  </entry>
  <entry>
    <title>Instalar un lector de tarjetas inteligentes y usar el DNIe en Arch Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/11/instalar-un-lector-de-tarjetas-inteligentes-y-usar-el-dnie-en-arch-linux" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="tecnologia" />
    <category term="arch-linux" />
    <category term="hardware" />
    <category term="software-libre" />
    <category term="gnulinux" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-12-14T09:59:03Z</updated>
    <published>2013-11-29T17:34:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Arch Linux" src="http://3.bp.blogspot.com/-XVsmee9V9Vo/S_LjDl4iWZI/AAAAAAAAAQI/LcBAWOoav-s/s1600/archlinux-official-dark.png" height="106" title="Arch Linux" width="320" /&gt; 
&lt;/div&gt;Ya desde hace un tiempo los documentos nacionales de indentidad que emite la administraci&amp;oacute;n p&amp;uacute;blica espa&amp;ntilde;ola son en el formato de tarjeta inteligente (SmartCard), conocido como DNI electr&amp;oacute;nico o DNIe. Estas tarjetas inteligentes tienen la ventaja de que incluyen un certificado digital que nos permiten identificarnos en sitios que lo soporten y realizar diversos tr&amp;aacute;mites y acciones. 
&lt;br /&gt; 
&lt;br /&gt;El DNI electr&amp;oacute;nico nos puede servir para identificarnos en varias p&amp;aacute;ginas de la administraci&amp;oacute;n p&amp;uacute;blica, en las p&amp;aacute;ginas de varios bancos y realizar diferentes tr&amp;aacute;mites electr&amp;oacute;nicos. El DNIe como medio de identificaci&amp;oacute;n en una p&amp;aacute;gina tiene la ventaja de que no necesitamos tener un usuario y una contrase&amp;ntilde;a espec&amp;iacute;fica para ese sitio sino que con el DNI f&amp;iacute;sico y el PIN nos ser&amp;aacute; suficiente. Para identificarnos necesitamos algo que poseemos (el DNI) y algo que conocemos (PIN) con lo que las posibilidades que de alguien que quiera realizar alguna acci&amp;oacute;n en nuestro nombre suplantando nuestra identidad ser&amp;aacute; m&amp;aacute;s complicado, la seguridad es mayor ya que no basta con conocer &amp;uacute;nicamente el usuario y clave sino que se necesita algo f&amp;iacute;sico. Conseguir ambas cosas es m&amp;aacute;s dif&amp;iacute;cil que solo la clave. Realizar tramites administrativos de forma electr&amp;oacute;nica tiene la ventaja que no necesitamos desplazarnos hasta la correspondiente ventanilla para realizar el tr&amp;aacute;mite. Algunos bancos que permiten identificarnos con el DNIe son el&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/11/instalar-un-lector-de-tarjetas-inteligentes-y-usar-el-dnie-en-arch-linux"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-11-29T17:34:00Z</dc:date>
  </entry>
  <entry>
    <title>Como usar GPG con Evolution</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/11/como-usar-gpg-con-evolution" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="tecnologia" />
    <category term="arch-linux" />
    <category term="software-libre" />
    <category term="gnulinux" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-11-29T18:05:13Z</updated>
    <published>2013-11-22T20:42:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="GnuPG" src="http://2.bp.blogspot.com/-wnNsw8HqDxE/UoZZ15a-ZOI/AAAAAAAACrg/PTAsi1g0Imw/s1600/gnupg.png" height="107" title="GnuPG" width="320" /&gt; 
&lt;/div&gt; 
&lt;div style="background-color: #dddddd; clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Evolution" src="http://3.bp.blogspot.com/-6ffS27mB8Lc/Uo-5N40RfbI/AAAAAAAACuc/5MO4GXbgPbM/s1600/evolution.png" title="Evolution" /&gt; 
&lt;/div&gt;Despu&amp;eacute;s de la 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html"&gt;introducci&amp;oacute;n a la criptograf&amp;iacute;a y crear una clave GPG&lt;/a&gt; ya sea a trav&amp;eacute;s de la linea de comandos en la terminal o con la herramienta Contrase&amp;ntilde;as y claves de GNOME adem&amp;aacute;s de usarla para cifrar y firmar documentos desde la terminal podemos usarla para firmar y cifrar los correos electr&amp;oacute;nicos que enviemos usando nuestro cliente de correo. La firma de los correos electr&amp;oacute;nicos permitir&amp;aacute; conocer al receptor si el correo ha sido modificado por una tercera parte, comprobar la autenticidad del mensaje y si tenemos la clave p&amp;uacute;blica del destinatario podremos enviarle el correo cifrado evitando que pueda ser le&amp;iacute;do salvo por el destinatario. 
&lt;br /&gt; 
&lt;br /&gt;En esta entrada explicar&amp;eacute; como firmar y cifrar el correo electr&amp;oacute;nico que enviemos usando nuestra clave GPG y el cliente de correo por defecto de GNOME,&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/11/como-usar-gpg-con-evolution"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-11-22T20:42:00Z</dc:date>
  </entry>
  <entry>
    <title>Integración y transacciones con Spring en Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/11/integracion-y-transacciones-con-spring-en-apache-tapestry-" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-11-10T11:41:35Z</updated>
    <published>2013-11-08T20:04:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Apache Tapestry" height="133" src="http://4.bp.blogspot.com/-OGvCbjBk0zU/TOq7Y6w6wfI/AAAAAAAAAiU/Pfuzt5kkDBQ/s320/tapestry.png" title="Apache Tapestry" width="320" /&gt; 
&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Spring" src="http://1.bp.blogspot.com/-z3Uf7rZosVk/Un04HYeUy3I/AAAAAAAACq0/JxaGVTEux-E/s1600/spring.png" title="Spring" /&gt; 
&lt;/div&gt;En otra entrada comentaba como hacer transacciones en una base de datos relacional con Apache Tapestry y como mejorar el soporte que ofrece de por si con la anotaci&amp;oacute;n CommitAfter mediante con una 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/transacciones-en-apache-tapestry.html"&gt;soluci&amp;oacute;n propia que proporciona la anotaci&amp;oacute;n Transactional&lt;/a&gt;. La soluci&amp;oacute;n propia mejora la anotaci&amp;oacute;n CommitAfter y es usable en m&amp;aacute;s casos como cuando dos servicios distintos necesitan colaborar en una transaccion y compartirla. Sin embargo, si el correcto funcionamiento de las transacciones es una parte importante de la aplicaci&amp;oacute;n (y en una aplicaci&amp;oacute;n grande lo ser&amp;aacute;) podemos evaluar si optar por Spring o los EJB en vez de la soluci&amp;oacute;n propia o la anotaci&amp;oacute;n CommitAfter. 
&lt;br /&gt; 
&lt;br /&gt;Unos buenos motivos para optar tanto por Spring como por los EJB es que son soluciones ya desarrolladas con lo que solo tendremos que integrarlo en nuestros proyectos y no tendremos que preocuparnos de mantener nuestra soluci&amp;oacute;n en caso de que tenga errores, adem&amp;aacute;s ambas son ampliamente usadas incluso en proyectos grandes y complejos y est&amp;aacute;n ya probadas lo que es una garant&amp;iacute;a. Entre optar por Spring o los EJB depende de varios factores como puede ser si la aplicaci&amp;oacute;n va ha ser desplegada en un servidor de aplicaciones con soporte para EJB (como&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/11/integracion-y-transacciones-con-spring-en-apache-tapestry-"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-11-08T20:04:00Z</dc:date>
  </entry>
  <entry>
    <title>Transacciones en Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/11/transacciones-en-apache-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-11-09T16:00:18Z</updated>
    <published>2013-11-01T22:14:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: both; text-align: center;"&gt;&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Apache Tapestry" height="133" src="http://4.bp.blogspot.com/-OGvCbjBk0zU/TOq7Y6w6wfI/AAAAAAAAAiU/Pfuzt5kkDBQ/s320/tapestry.png" title="Apache Tapestry" width="320" /&gt; 
&lt;/div&gt;Tapestry no proporciona de por s&amp;iacute; un soporte completo a las aplicaciones que necesitan realizar operaciones en una base de datos relacional de forma transaccional. La dependencia tapestry-hibernate provee la anotaci&amp;oacute;n 
&lt;a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/hibernate/annotations/CommitAfter.html"&gt;@CommitAfter para Hibernate&lt;/a&gt; y la dependencia tapestry-jpa otra del mismo nombre para JPA pero esta anotaci&amp;oacute;n en ambos casos proporciona una funcionalidad muy b&amp;aacute;sica y probablemente no no sirva en casos de uso complejos. Esto ha sido objeto de discusi&amp;oacute;n varias veces en la lista de distribuci&amp;oacute;n de los usuarios 
&lt;a href="http://apache-tapestry-mailing-list-archives.1045711.n5.nabble.com/Transactions-and-AfterCommit-td5722996.html"&gt;[1]&lt;/a&gt; 
&lt;a href="http://apache-tapestry-mailing-list-archives.1045711.n5.nabble.com/Re-Transactions-and-AfterCommit-td5723025.html"&gt;[2]&lt;/a&gt; y el JIRA de Tapestry&amp;nbsp; 
&lt;a href="https://issues.apache.org/jira/browse/TAP5-2159"&gt;[3]&lt;/a&gt;. 
&lt;br /&gt; 
&lt;br /&gt;Con la anotaci&amp;oacute;n CommitAfter si se produce una excepci&amp;oacute;n no controlada (&amp;laquo;unchecked&amp;raquo;) se har&amp;aacute; un rollback de la transacci&amp;oacute;n y, esto es importante, a&amp;uacute;n produciendose una excepci&amp;oacute;n controlada (&amp;laquo;checked&amp;raquo;) se har&amp;aacute; el commit de la transacci&amp;oacute;n y es responsabilidad del programador tratar la excepci&amp;oacute;n adecuadamente. Se puede usar en los m&amp;eacute;todos de los servicios y en los m&amp;eacute;todos manejadores de eventos de los componentes.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/11/transacciones-en-apache-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-11-01T22:14:00Z</dc:date>
  </entry>
  <entry>
    <title>Solución al doble envío de peticiones en aplicaciones web</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/10/solucion-al-doble-envio-de-peticiones-en-aplicaciones-web" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-11-01T19:29:38Z</updated>
    <published>2013-10-11T17:25:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: both; text-align: center;"&gt;&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Apache Tapestry" height="133" src="http://4.bp.blogspot.com/-OGvCbjBk0zU/TOq7Y6w6wfI/AAAAAAAAAiU/Pfuzt5kkDBQ/s320/tapestry.png" title="Apache Tapestry" width="320" /&gt; 
&lt;/div&gt;Las aplicaciones web pueden recibir informaci&amp;oacute;n del usuario a trav&amp;eacute;s de formularios o en los par&amp;aacute;metros de los enlaces. Los formularios o enlaces pueden desencadenar en la aplicaci&amp;oacute;n diversas acciones. Dada la naturaleza de las aplicaciones web en ciertas ocasiones la latencia de la red o el tiempo que toma procesar la petici&amp;oacute;n un usuario puede tener la oportunidad de hacer clic varias veces en un bot&amp;oacute;n o enlace tambi&amp;eacute;n cuando ve que tarda mucho en obtener la respuesta o simplemente por su desconocimiento al estar acostumbrado a hacer doble clic al trabajar con otras aplicaciones o la interfaz de su sistema operativo. En ocasiones el problema puede producirse tambi&amp;eacute;n haciendo un refrescar con el bot&amp;oacute;n del navegador si no se hace un redirect despu&amp;eacute;s del env&amp;iacute;o del formulario (&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/10/solucion-al-doble-envio-de-peticiones-en-aplicaciones-web"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-10-11T17:25:00Z</dc:date>
  </entry>
  <entry>
    <title>Solución al problema de seguridad CSRF en Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/10/solucion-al-problema-de-seguridad-csrf-en-apache-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-11-01T19:29:26Z</updated>
    <published>2013-10-18T18:20:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: both; text-align: center;"&gt;&lt;/div&gt; 
&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Apache Tapestry" height="133" src="http://4.bp.blogspot.com/-OGvCbjBk0zU/TOq7Y6w6wfI/AAAAAAAAAiU/Pfuzt5kkDBQ/s320/tapestry.png" title="Apache Tapestry" width="320" /&gt; 
&lt;/div&gt;Al desarrollar una aplicaci&amp;oacute;n el problema de seguridad 
&lt;a href="http://en.wikipedia.org/wiki/Cross-site_scripting"&gt;XSS&lt;/a&gt; (Cross-site scripting) puede afectar a los usuarios de nuestra aplicaci&amp;oacute;n. XSS consiste en que la aplicaci&amp;oacute;n permite la inyecci&amp;oacute;n de c&amp;oacute;digo malicioso que posteriormente otros usuarios obtienen al acceder a nuestra aplicaci&amp;oacute;n. Se produce porque nuestra aplicaci&amp;oacute;n no realiza el escapado correctamente de lo que env&amp;iacute;a al usuario y porque el usuario conf&amp;iacute;a en lo que obtiene del servidor. Para evitar este problema 
&lt;a href="http://tapestry.apache.org/"&gt;Apache Tapestry&lt;/a&gt; por defecto realiza un escapado de lo que emite al cliente con lo que si no hacemos lo contrario la aplicaci&amp;oacute;n estar&amp;aacute; a salvo de este problema. 
&lt;br /&gt; 
&lt;br /&gt;Otro problema de seguridad es 
&lt;a href="https://owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29"&gt;CSRF&lt;/a&gt; (Cross-site request forgery) en el que b&amp;aacute;sicamente un sitio al que se accede devuelve un enlace malicioso que provoca una acci&amp;oacute;n en otro, el atacado. El enlace devuelto puede producir cualquier acci&amp;oacute;n que el sitio atacado permita, el ejemplo que se suele poner es el de un sitio bancario y el intento de hacer una transferencia de la cuenta del usuario que tiene iniciada una sesi&amp;oacute;n en la p&amp;aacute;gina de su banco a la cuenta del atacante pero podr&amp;iacute;a ser la realizaci&amp;oacute;n de un cambio de contrase&amp;ntilde;a a una que conozca el atacante y de esta forma posteriormente este pueda autenticarse con la cuenta de ese usuario en el sitio atacado. En la&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/10/solucion-al-problema-de-seguridad-csrf-en-apache-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-10-18T18:20:00Z</dc:date>
  </entry>
  <entry>
    <title>Relaciones jerárquicas en bases de datos relacionales</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/10/relaciones-jerarquicas-en-bases-de-datos-relacionales" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2013-10-26T21:51:45Z</updated>
    <published>2013-10-25T16:23:00Z</published>
    <content type="html">&lt;p&gt;Otro de los problemas que se suele presentar al trabajar con bases de datos relacionales adem&amp;aacute;s de 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2011/11/internacionalizacion-i18n-de-campos-con.html"&gt;como internacionalizar las entidades del dominio&lt;/a&gt; o 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/busquedas-de-texto-completo-en-objetos-de-dominio.html"&gt;como hacer b&amp;uacute;squedas de texto completo&lt;/a&gt; es como modelar las relaciones jer&amp;aacute;rquicas. Para resolver el problema de las b&amp;uacute;squedas en las bases de datos relacionales con datos jer&amp;aacute;rquicos hay varias soluciones posibles cada una con sus ventajas y desventajas y una m&amp;aacute;s ideal si la base de datos lo soporta, son: 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Listas adjacentes&lt;/li&gt; 
 &lt;li&gt;Nested Sets&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://stackoverflow.com/questions/4048151/what-are-the-options-for-storing-hierarchical-data-in-a-relational-database"&gt;Variaciones de las anteriores&lt;/a&gt; &lt;/li&gt; 
 &lt;li&gt;Queries recursivas (necesita soporte de la base de datos)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Listas adjacentes&lt;/h3&gt;En este modelo se crea una campo adicional que indicar&amp;aacute; el nodo padre de la relaci&amp;oacute;n jer&amp;aacute;rquica, los nodos ra&amp;iacute;z tendr&amp;aacute;n este campo a null al no tener padre.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/10/relaciones-jerarquicas-en-bases-de-datos-relacionales"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-10-25T16:23:00Z</dc:date>
  </entry>
</feed>

