<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-02-21T02:03:45Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-02-21T02:03:45Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Filtros asíncronos en MVC 6</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2014/12/filtros-asincronos-en-mvc-6" />
    <category term="novedades" />
    <category term="aspnet5" />
    <category term="aspnetmvc" />
    <category term="asp-net" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2015-02-01T18:20:38Z</updated>
    <published>2014-12-16T12:45:00Z</published>
    <content type="html">&lt;p&gt;Como ya hemos visto por aquí en alguna ocasión, hace tiempo que MVC soporta controladores asíncronos, permitiendo la implementación de acciones muy eficientes desde el punto de vista de la utilización de los recursos del servidor. Sin embargo, en cuanto pretendíamos llevar a los action filters la misma filosofía nos encontrábamos con que la infraestructura no estaba preparada, es decir, no teníamos una forma clara de introducir llamadas asíncronas en el cuerpo de los filtros. Como consecuencia, todas las tareas que se realizaban en su interior eran puramente síncronas y dejaban bloqueados los hilos destinados a procesar peticiones mientras se completaban las operaciones, lo cual es especialmente un despilfarro cuando se trata de tareas de entrada/salida. Afortunadamente esto parece que va a[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2014/12/filtros-asincronos-en-mvc-6"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2014-12-16T12:45:00Z</dc:date>
  </entry>
  <entry>
    <title>Quo vadis, ASP.NET MVC?</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2014/12/quo-vadis-asp-net-mvc" />
    <category term="novedades" />
    <category term="aspnetmvc" />
    <category term="asp-net" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2014-12-03T09:25:51Z</updated>
    <published>2014-12-03T09:15:00Z</published>
    <content type="html">&lt;p&gt;Aunque aún en beta e inmersa en un intenso proceso de desarrollo, la próxima versión de ASP.NET MVC está tomando forma en los hornos de Microsoft, y, sin ser definitivas, ya se pueden ver cuáles serán las novedades principales que la acompañarán. En futuros posts iremos entrando en mayor detalle, pero de momento vamos a echar un vistazo desde una cierta distancia para tener la idea general sobre dónde estamos y la evolución que vamos a encontrar en las nuevas versiones de tecnologías y plataformas, de forma que podamos ver en qué nos afectará como desarrolladores y, en definitiva, para qué tenemos que irnos preparando. Disclaimer: estamos aún en una fase en la que algunas cosas pueden cambiar y aún no existe información exhaustiva de muchos detalles, por lo que pueden existir ausencias o imprecisiones.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2014/12/quo-vadis-asp-net-mvc"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2014-12-03T09:15:00Z</dc:date>
  </entry>
  <entry>
    <title>Localización en aplicativos .NET</title>
    <link rel="alternate" href="http://www.blogstack.info/post/destinodotnet/2014/10/localizacion-en-aplicativos-net" />
    <category term="asp-net" />
    <category term="localization" />
    <category term="net" />
    <category term="localizacion" />
    <category term="tutoriales" />
    <author>
      <name>Joel Martinez</name>
    </author>
    <updated>2014-10-04T17:21:11Z</updated>
    <published>2014-10-04T17:21:11Z</published>
    <content type="html">&lt;p&gt;Facebook0 Twitter0 Google+0 Linkedin0 E-Mail0 Este artículo trata un tema muy interesante que quiero abordar: cómo aplicar la localización en aplicativos .NET. En los últimos años, la globalización ha tomado mucha fuerza en los sistemas de información, ya no es raro tener a usuarios que sean, culturalmente, diferentes o que estén ubicados en diferentes regiones. Por esto es muy importante que nuestro aplicativo tenga en cuenta esta característica, y más importante aún es que su implementación se dé desde el principio, ya que nos puede ahorrar mucho trabajo comparándolo si lo implementáramos de forma posterior. Conceptos ¿Qué es Globalización? La globalización es la generación de un esquema en nuestro aplicativo que controle y gestione la interface de usuario de forma localizada, basándose en[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/destinodotnet/2014/10/localizacion-en-aplicativos-net"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Joel Martinez</dc:creator>
    <dc:date>2014-10-04T17:21:11Z</dc:date>
  </entry>
  <entry>
    <title>ASP .NET MVC: Tutorial inicial</title>
    <link rel="alternate" href="http://www.blogstack.info/post/destinodotnet/2014/08/asp-net-mvc-tutorial-inicial" />
    <category term="asp-net" />
    <category term="desarrollo" />
    <category term="asp-net-mvc" />
    <category term="tutoriales" />
    <author>
      <name>Joel Martinez</name>
    </author>
    <updated>2014-08-30T17:27:38Z</updated>
    <published>2014-08-30T17:27:38Z</published>
    <content type="html">&lt;p&gt;Facebook0 Twitter0 Google+0 Linkedin0 E-Mail0 Estaba elaborando un artículo sobre autenticación/autorización, pero reparé que es mejor primero hacer uno completo como tutorial introductorio sobre ASP .NET MVC. Sé que hay muuuuchos artículos en la web sobre esto, pero en este trato de darle un estilo particular y un orden que no encontré en otros. Aquí vamos entonces con un primer acercamiento a esta maravillosa tecnología. Un poco de teoría Definición MVC son las siglas de Model View Controller, o Modelo Vista Controlador en español. Es un patrón de arquitectura de software que se ha vuelto muy común en estos años, pero sus orígenes se remontan a la década del 70. Lo que propone este patrón es la separación de la interfaz de usuario con lógica de negocio y el manejo de los datos. Para esto[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/destinodotnet/2014/08/asp-net-mvc-tutorial-inicial"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Joel Martinez</dc:creator>
    <dc:date>2014-08-30T17:27:38Z</dc:date>
  </entry>
  <entry>
    <title>#if DEBUG en Javascript (bueno, o algo así)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2014/07/if-debug-en-javascript-bueno-o-algo-asi" />
    <category term="asp-net" />
    <category term="depuracion" />
    <category term="javascript" />
    <category term="trucos" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2014-07-22T11:55:00Z</updated>
    <published>2014-07-22T11:55:00Z</published>
    <content type="html">&lt;p&gt;Hay veces que desde Javascript nos interesa ejecutar un código u otro en función de si la ejecución se está produciendo en un servidor de desarrollo o en uno de producción. Por ejemplo, en el primer caso suele ser interesante disponer de logs o herramientas de ayuda a la depuración, mientras que en el segundo lo normal es que queramos introducir código más eficiente y sin este tipo de condimentos. En este post vamos a ver algunas técnicas muy básicas que nos permitirán ejecutar un código u otro en el lado cliente de aplicaciones ASP.NET MVC (o ASP.NET en general) en función del modo de compilación. 1. El lado servidorEn el lado servidor es bastante fácil de conseguir porque disponemos de directivas de compilación que nos permiten detectar si estamos generando los binarios en modo depuración:[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2014/07/if-debug-en-javascript-bueno-o-algo-asi"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2014-07-22T11:55:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejecutar tareas en segundo plano en ASP.NET 4.5.2</title>
    <link rel="alternate" href="http://www.blogstack.info/post/variablenotfound/2014/06/ejecutar-tareas-en-segundo-plano-en-asp-net-4-5-2" />
    <category term="trucos" />
    <category term="novedades" />
    <category term="asp-net" />
    <author>
      <name>José M. Aguilar</name>
    </author>
    <updated>2014-06-17T10:57:59Z</updated>
    <published>2014-06-10T16:10:00Z</published>
    <content type="html">&lt;p&gt;Hay muchos escenarios, y relativamente habituales, en los que es interesante lanzar una tarea desatendida, en segundo plano, desde una aplicación ASP.NET: manipulación de archivos, envío de mensajes, acceso a recursos externos costosos, procesos de colas, generación de archivos, etc. En general, es un enfoque que puede interesarnos siempre que se trate de realizar un trabajo pesado, que no requiera intervención alguna por parte del usuario ni siquiera para darle feedback del progreso o terminación, y que pueda ejecutarse de forma independiente a las peticiones HTTP que acceden a la aplicación. Imaginad una acción como la siguiente, donde se recibe un texto y se llama al método SendEmailToAllMyContacts() para hacérselo llegar, por ejemplo, a 1.000 contactos: [HttpPost] public ActionResult EmailEverybody(string[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/variablenotfound/2014/06/ejecutar-tareas-en-segundo-plano-en-asp-net-4-5-2"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>José M. Aguilar</dc:creator>
    <dc:date>2014-06-10T16:10:00Z</dc:date>
  </entry>
</feed>

