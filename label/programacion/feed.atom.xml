<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2016-05-06T18:04:14Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2016-05-06T18:04:14Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Extraer elementos de una cadena con una expresión regular</title>
    <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-05-06T16:00:00Z</updated>
    <published>2016-05-06T16:00:00Z</published>
    <content type="html">&lt;p&gt;Las expresiones regulares son muy útiles para comprobar si una cadena de texto o un subconjunto de ella cumple un determinado patrón. Un uso común de las expresiones regulares es para validar cadenas de texto pero también pueden usarse para obtener coincidencias de la cadena, esto se hace con los grupos de captura. Por ejemplo, supongamos que tenemos un código de un producto formateado de la siguiente forma 123-123456/1, usando guiones y una barra para separar tres grupos de números. Y ahora aparte de validar el formato correcto del código del producto nos interesa obtener los tres grupos de números. En vez de separar la cadena con un split por el caracter guión y barra de una forma que sería más laboriosa y difícil de mantener si hay algún cambio, vamos a usar los grupos de captura para obtener[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-05-06T16:00:00Z</dc:date>
  </entry>
  <entry>
    <title>El componente Grid de Apache Tapestry</title>
    <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="tapestry" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-04-30T10:00:00Z</updated>
    <published>2016-04-30T10:00:00Z</published>
    <content type="html">&lt;p&gt;En la mayoría de aplicaciones no solo es habitual sino algo muy usado el mostrar listados de elementos de forma tabular con paginación y columnas ordenables. En estos listados el complejo componente internamente Grid de Apache Tapestry pero a la vez muy sencillo de usar puede marcar una diferencia significativa en el número de líneas de código necesarias a escribir, la flexibilidad, funcionalidad ofrecida, la productividad al hacer la implementación o modificarla comparándolo con lo necesario en otros frameworks web en los que no hay nada comparable de serie. Apache Tapestry es uno de los muchos frameworks disponibles en Java para el desarrollo de aplicaciones y páginas web. A diferencia de la mayoría se basa en componentes y proporciona una larga lista de ellos listos para usar de serie, pero[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-04-30T10:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Tutorial sobre los tipos genéricos de Java</title>
    <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/04/tutorial-sobre-los-tipos-genericos-de-java/" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-04-24T11:00:00Z</updated>
    <published>2016-04-22T22:00:00Z</published>
    <content type="html">&lt;p&gt;Hace ya más de una década que en Java 5 se introdujeron los generics para dotar al lenguaje de una mejor comprobación de tipos en tiempo de compilación y al mismo tiempo eliminar los cast que hasta entonces eran necesarios al usar las colecciones. Dada la lentitud de adopción que suele haber en la plataforma Java en los grandes entornos empresariales puede que aún no los hayamos usado extensamente o tengamos alguna duda en su uso. Hay unos cuantos conceptos sobre los generics que son convenientes conocer. Los generics fueron introducidos en la versión 5 de Java en 2004 junto con otras muchas novedades suponiendo en su historia una de las mayores modificaciones o al mismo nivel de las novedades introducidas con Java 8 más recientemente al lenguaje Java. Los generics son importantes ya que permiten[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://picodotdev.github.io/blog-bitix/2016/04/tutorial-sobre-los-tipos-genericos-de-java/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-04-22T22:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Usar Twitter desde Java con twitter4j</title>
    <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/04/usar-twitter-desde-java-con-twitter4j/" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-04-16T10:30:00Z</updated>
    <published>2016-04-16T10:30:00Z</published>
    <content type="html">&lt;p&gt;Twitter ofrece una API para realizar las mismas acciones que como usuarios hacemos con su cliente web, desde publicar tweets, hacer retweets, enviar mensajes directos, leer timelines, … Con la API REST de twitter podemos desde un programa de forma automatizada realizar cualquiera de las anteriores acciones. Por ejemplo, en Blog Stack cada vez que agrega un artículo de cualquiera de las fuentes se publica un tweet con el título del artículo y el enlace al mismo en la cuenta de Twitter de Blog Stack. En este artículo mostraré como desde lenguaje de programación Java podemos usar la API de Twitter para realizar las acciones que deseemos con la librería twitter4j. twitter4j nos ofrece una API Java para acceder a la API REST de Twitter de forma más cómoda. Primeramente deberemos crear y registrar[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://picodotdev.github.io/blog-bitix/2016/04/usar-twitter-desde-java-con-twitter4j/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-04-16T10:30:00Z</dc:date>
  </entry>
  <entry>
    <title>Aplicación de ejemplo usando varias especificaciones de Java EE 7</title>
    <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/04/aplicacion-de-ejemplo-usando-varias-especificaciones-de-java-ee-7/" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-04-10T10:00:00Z</updated>
    <published>2016-04-08T15:00:00Z</published>
    <content type="html">&lt;p&gt;Más lentamente que otras tecnologías Java EE en cada nueva versión sigue adaptándose a las nuevas tendencias en el desarrollo y facilitando la programación de aplicaciones de entidad empresarial. Java EE está formado por un conjunto de especificaciones que resuelven en gran medida muchas de las necesidades funcionales de las aplicaciones ya sean de persistencia, seguridad, mensajería, lógica de negocio, transaccionalidad, inyección de dependencias, presentación HTML, JSON, WebSockets, conexión a base de datos, envío de correos electrónicos o concurrencia. En este artículo mostraré un ejemplo usando varias de estas especificaciones y proporcionaré el código fuente completo. Comentaba las novedades y nuevas características de Java EE 7 que en el 2013 trajo esta nueva versión para el desarrollo[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://picodotdev.github.io/blog-bitix/2016/04/aplicacion-de-ejemplo-usando-varias-especificaciones-de-java-ee-7/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-04-08T15:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Cómo hacer pequeñas operaciones matemáticas al reemplazar texto en Emacs</title>
    <link rel="alternate" href="http://totaki.com/poesiabinaria/2016/03/como-hacer-pequenas-operaciones-matematicas-al-reemplazar-texto-en-emacs/" />
    <category term="programacion" />
    <category term="multiplicaciones" />
    <category term="php" />
    <category term="restas" />
    <category term="seguridad" />
    <category term="expresiones-regulares" />
    <category term="backup" />
    <category term="dump" />
    <category term="lisp" />
    <category term="cuentas" />
    <category term="copia" />
    <category term="sustituciones" />
    <category term="wordpress" />
    <category term="mayusculas" />
    <category term="facil" />
    <category term="general" />
    <category term="texto" />
    <category term="divisiones" />
    <category term="reemplazo" />
    <category term="regulares" />
    <category term="expresiones" />
    <category term="numeros" />
    <category term="migracion" />
    <category term="mysql" />
    <category term="aritmetica" />
    <category term="siguiente" />
    <category term="emacs" />
    <category term="sumas" />
    <category term="ejemplo" />
    <category term="editor" />
    <category term="minusculas" />
    <category term="regexp" />
    <category term="practico" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2016-03-23T09:50:42Z</updated>
    <published>2016-03-23T09:50:42Z</published>
    <content type="html">&lt;p&gt;Me encanta Emacs, y como me encanta Emacs, no paro de aprender todos los días cosas nuevas. Una de esas cosas nuevas, que más me ha llamado la atención es, como dice el título, la posibilidad de hacer pequeñas operaciones matemáticas al reemplazar texto en Emacs. En concreto, dentro de las expresiones regulares. Esto, en la práctica serán sumas o restas, o cualquier operación que podemos hacer a los números que encontramos en una expresión regular. Aunque, si nos lo curramos mucho, podremos hacer muchas más cosas (y muy interesantes) Para más información con las expresiones regulares y con cómo utilizarlas en Emacs, pulsar sobre los enlaces que acabo de poner. Lo básico Cuando queremos buscar y reemplazar texto en Emacs, lo hacemos de la siguiente manera: M-x replace-string Escribimos el texto[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://totaki.com/poesiabinaria/2016/03/como-hacer-pequenas-operaciones-matematicas-al-reemplazar-texto-en-emacs/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2016-03-23T09:50:42Z</dc:date>
  </entry>
  <entry>
    <title>Cómo firmar correos electrónicos con GPG y JavaMail</title>
    <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/03/como-firmar-correos-electronicos-con-gpg-y-javamail/" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="seguridad" />
    <category term="java" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-03-19T09:00:00Z</updated>
    <published>2016-03-19T09:00:00Z</published>
    <content type="html">&lt;p&gt;El correo electrónico es un medio muy utilizado para realizar ataques de phising, algunos son muy burdos pero seguramente algunos usuarios sin muchos conocimientos caen víctimas de ellos y aún los usuarios con conocimientos también pueden serlo si están bien realizados y muestran un correo electrónico exactamente igual que el que intentan suplantar. Los usuarios son las víctimas pero si los sitios web que envían los correos electrónicos legítimos los firmasen digitalmente sería una garantía más para proteger a sus usuarios, pudiendo detectar de otra forma el spam y phising. En este artículo muestro a modo de ejemplo como firmar un correo electrónico con GPG y JavaMail e igualmente podría utilizarse para cifrarlo, aunque usar DKIM sería lo más apropiado. Los sitios de comercio electrónico y[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://picodotdev.github.io/blog-bitix/2016/03/como-firmar-correos-electronicos-con-gpg-y-javamail/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-03-19T09:00:00Z</dc:date>
  </entry>
</feed>

