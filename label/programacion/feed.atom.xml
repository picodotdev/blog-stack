<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2016-01-04T22:02:16Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2016-01-04T22:02:16Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Hemeroteca #8</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2016/01/hemeroteca-8" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="gnu-linux" />
    <category term="tapestry" />
    <category term="hemeroteca" />
    <category term="software-libre" />
    <category term="java" />
    <category term="software" />
    <category term="blog" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-01-04T21:00:00Z</updated>
    <published>2016-01-02T12:00:00Z</published>
    <content type="html">&lt;p&gt;Seis meses más de artículos la mayoría sobre programación en Java tratando algunas de las nuevas tendencias de programación con las posibilidades de la plataforma de la JVM. Unos pocos artículos más continuando la serie sobre Docker y uno de opinión sobre las licencias de Microsoft. El 2015 pasó, a mi muy rápido. En cuanto a la bitácora toca recapitular cuáles han sido los artículos que he escrito, de que temas principales he hablado, un poco cómo han evolucionado las visitas y que tengo preparado para publicar durante los siguientes meses ya de 2016. Muchos de los artículos que he escrito han estado relacionados con la programación en la plataforma Java, en los que destacaría prácticamente todos empezando por los relacionados con Spring Boot, Spring Cloud Config y Spring Boot Actuator que[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2016/01/hemeroteca-8"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-01-02T12:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Publicado Apache Tapestry 5.4</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/12/publicado-apache-tapestry-5-4" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="tapestry" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-12-24T14:00:00Z</updated>
    <published>2015-12-24T14:00:00Z</published>
    <content type="html">&lt;p&gt;Después 38 betas (han sido tantas porque era barato hacerlas) y una única candidata a publicación, 4 años desde la anterior versión mayor (5.3) y varias versiones menores de esta, la versión final de Apache Tapestry 5.4 ha sido publicada. Esta nueva versión incorpora más de 300 correcciones de errores, casi 200 mejoras y varias novedades destacadas centradas en la integración con JavaScript siguiendo la evolución actual de las aplicaciones web con un peso mayor en el lado del cliente. De esta manera el JavaScript se basa en el uso de RequireJS proporcionando a las aplicaciones todas las bondades que los módulos proporcionan como organizar mejor el JavaScript de las aplicaciones, no polucionar el ámbito global evitando conflictos entre librerías y carga de dependencias de forma dinámica. También[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/12/publicado-apache-tapestry-5-4"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-12-24T14:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Callbacks en C++11, ejemplos con argumentos por referencia y templates (III)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/12/callbacks-en-c-11-ejemplos-con-argumentos-por-referencia-y-templates-iii" />
    <category term="programacion" />
    <category term="referencia" />
    <category term="flexibilidad" />
    <category term="closuer" />
    <category term="llamada" />
    <category term="parametros" />
    <category term="argumento" />
    <category term="callback" />
    <category term="lamda" />
    <category term="valor" />
    <category term="facilidad" />
    <category term="usuario" />
    <category term="c-11" />
    <category term="anonima" />
    <category term="c" />
    <category term="general" />
    <category term="funcion" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-12-21T09:20:58Z</updated>
    <published>2015-12-21T09:20:58Z</published>
    <content type="html">&lt;p&gt;Volvemos a dar guerra con el tema que empezamos hace unas semanas, si no has seguido esta serie de posts te recomiendo echar un ojo a Callbacks en C++11 nuevas posibilidades para un software más potente y Callbacks en C++11, llamando a métodos con un objeto asociado. En ellos pongo muchos ejemplos de cómo asociar funciones o métodos a variables. Argumentos por referencia Es un tema que hemos dejado un poco de lado, pero sólo quiero hacer una pequeña puntualización. Y ya de paso, vemos que bind() no sólo vale para métodos con un objeto, también para funciones normales, lo único que no ponemos el objeto, y la clase sólo la pondremos si es un método estático. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include &lt;iostream&gt; #include &lt;string&gt; #include &lt;functional&gt; using namespace std;[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/12/callbacks-en-c-11-ejemplos-con-argumentos-por-referencia-y-templates-iii"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-12-21T09:20:58Z</dc:date>
  </entry>
  <entry>
    <title>Monitorizar estado de sitios web con Uptime Robot</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-12-15T17:00:00Z</updated>
    <published>2015-12-11T16:00:00Z</published>
    <content type="html">&lt;p&gt;Los sitios web que ofrecen su servicio de forma ininterrumpida por diferentes causas pueden dejar de funcionar ya sea porque se ha perdido la conexión con la base de datos, se ha llenado el disco de la máquina impidiendo su normal funcionamiento u otras causas. En algunos tipos de servicio como páginas de presencia en internet puede dar una mala imagen pero en los sitios de comercio electrónico la pérdida del servicio es especialmente importante ya que además implica perder ventas o clientes. Para conocer de la forma más inmediata posible el mal funcionamiento y poder restaurar el servicio podemos usar alguna herramienta que monitorice su estado. Para monitorizar el funcionamiento de sitios web una de ellas muy sencilla es Uptime Robot. Uptime Robot Una vez registrados y con acceso al panel[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-12-11T16:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Información y métricas de la aplicación con Spring Boot Actuator</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-12-11T22:25:00Z</updated>
    <published>2015-12-04T16:30:00Z</published>
    <content type="html">&lt;p&gt;Desarrollar una aplicación no solo implica implementar su funcionalidad, esa aplicación ha de mantenerse funcionando en su entorno de producción. Monitorizar y disponer de información sobre el estado ayuda a mantenerla funcionando sin ninguna caída de servicio u obtener métricas para mejorar su funcionamiento. Entre las numerosas funcionalidades ofrecidas por Spring para las aplicaciones Java está Spring Boot Actuator que precisamente nos proporcionará métricas e información interesantes de serie pudiendo implementar nueva según la necesidades. Es conveniente tener monitorizado el estado de una aplicación para conocer si el servicio que ofrece está funcionando o en caso de que no conocerlo cuanto antes para restaurarlo además de conocer otra serie de métricas básicas como la cantidad de CPU[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-12-04T16:30:00Z</dc:date>
  </entry>
  <entry>
    <title>Configuración de una aplicación en diferentes entornos con Spring Cloud Config</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-12-11T21:00:00Z</updated>
    <published>2015-11-28T10:00:00Z</published>
    <content type="html">&lt;p&gt;La configuración de una aplicación suele varíar según el entorno en el que se ejecuta, la opción recomendada es que este externalizada y que el artefacto que se despliega en cada entorno sea el mismo. Con Spring Cloud Config en vez de guardar la configuración en un archivo de la propia máquina donde se instala podemos guardar de forma centralizada en un repositorio y que la aplicación obtenga la versión más actualizada cuando se inicia. En este ejemplo explicaré como crear el servidor de configuraciones con Spring Cloud Config y un ejemplo de cliente con Spring Boot que le solicita su configuración según su entorno. Desarrollar una aplicación no consiste solo en programar el código que proporciona su funcionalidad, con igual de importancia está como poner en producción esa aplicación para que[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-11-28T10:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Programación multiplataforma con MonoDevelop</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/12/programacion-multiplataforma-con-monodevelop" />
    <category term="blog-stack" />
    <category term="programacion" />
    <category term="mono" />
    <category term="miguel-de-icaza" />
    <category term="gnome" />
    <category term="monodevelop" />
    <category term="programas" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-12-09T12:43:33Z</updated>
    <published>2015-12-09T12:43:33Z</published>
    <content type="html">&lt;p&gt;Imaginaos un sistema que permita de manera sencilla, realizar programas que puedan funcionar en todas la plataformas de escritorio, sin tener que realizar complejos procesos o cambios drásticos de lenguaje. Hablamos del proyecto Mono... La entrada Programación multiplataforma con MonoDevelop aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/12/programacion-multiplataforma-con-monodevelop"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-12-09T12:43:33Z</dc:date>
  </entry>
</feed>

