<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2014-07-07T19:02:34Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2014-07-07T19:02:34Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Modelo «push» contra modelo «pull» en frameworks web</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-07-07T18:00:00Z</updated>
    <published>2014-07-06T08:58:10Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/tapestry.png" alt="Apache Tapestry" title="Apache Tapestry" /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;En la mayor&amp;iacute;a de frameworks de desarrollo de aplicaciones o p&amp;aacute;ginas web para producir el contenido HTML que se env&amp;iacute;a al cliente se emplea un modelo en el que el controlador proporciona los datos que combinados con una plantilla producen el HTML. Este modelo tambi&amp;eacute;n es el empleado habitualmente en muchos motores de plantillas (&lt;a href="http://www.thymeleaf.org/"&gt;thymeleaf&lt;/a&gt;, &lt;a href="http://mustache.github.io/"&gt;mustache&lt;/a&gt;, …). Sin embargo, hay dos modelos que se pueden seguir para producir un texto como resultado dada una plantilla y datos:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Push: este es el modelo comentado. El controlador recupera de antemano todos los datos que necesita la vista, el controlador tambi&amp;eacute;n determina la vista o plantilla que se usar. Combinando los datos y la plantilla se produce el resultado.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div style="text-align: center;"&gt; 
 &lt;a href="http://picodotdev.github.io/blog-bitix/images/custom/posts/30/modelo-push.png" title="Modelo push"&gt;&lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/posts/30/modelo-push.png" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Los pasos que se siguen en este modelo son:&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-07-06T08:58:10Z</dc:date>
  </entry>
  <entry>
    <title>Mi receta para aprobar la Oracle Certified Professional, Java SE 7 Programmer</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdejose/2014/07/mi-receta-para-aprobar-la-oracle-certified-professional-java-se-7-programmer" />
    <category term="ocpjp-7" />
    <category term="ocpjp" />
    <category term="scjp-7" />
    <category term="scjp" />
    <category term="programacion" />
    <category term="java-se" />
    <category term="java" />
    <category term="certificaciones" />
    <category term="1z-8-4" />
    <category term="1z-8-5" />
    <category term="cert" />
    <category term="certificacion" />
    <category term="certification" />
    <category term="java-7" />
    <category term="java-se-7" />
    <author>
      <name>admin</name>
    </author>
    <updated>2014-07-03T20:31:43Z</updated>
    <published>2014-07-03T20:31:43Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Ayer presente el examen 1Z0-805 de Oracle para obtener la Oracle Certified Professional, Java SE 7 Programmer y con mucho orgullo (producto de muchas horas de estudio) puedo decirles que la he aprobado con 80%. Llevaba preparandome unos 8 meses, con alguno que otro descanso bien merecido en navidad y semana santa, pero en general fui constante y cada semana dedicaba al menos una (1) o dos (2) horas a hacer ejercicios y/o leer al respecto.&lt;/p&gt; 
&lt;p&gt;Debo admitir que aunque consideraba que habia repasado bastante, el examen fue mas dificil de lo que yo esperaba, pero como ya ven no es imposible. Los objetivos a evaluar en el examen en resumen son&amp;nbsp;los siguientes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Language Enhancements (Mejoras en el lenguaje), que no es m&amp;aacute;s que el &lt;a title="project coin" href="http://openjdk.java.net/projects/coin/"&gt;project coin&lt;/a&gt;: diamond operator (operador &amp;lt;&amp;gt;), try-with-resources, sentencia swith con variables tipo String, etc…&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdejose/2014/07/mi-receta-para-aprobar-la-oracle-certified-professional-java-se-7-programmer"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2014-07-03T20:31:43Z</dc:date>
  </entry>
  <entry>
    <title>Hemeroteca #5</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/06/hemeroteca-5" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="linux" />
    <category term="software" />
    <category term="planeta-linux" />
    <category term="software-libre" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-06-27T19:10:29Z</updated>
    <published>2014-06-27T19:10:29Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/octopress.png" alt="Octopress" title="Octopress" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Cada seis meses hago un recopilatorio de los art&amp;iacute;culos que he publicado durante este periodo de tiempo. En estos seis meses he mantenido mi ritmo de publicaci&amp;oacute;n de una entrada a la semana que publico casi siempre los viernes a la tarde, en total han sido 26 nuevos art&amp;iacute;culos con este. Los temas tratados durante este tiempo han sido en gran medida la programaci&amp;oacute;n, un poco de linux y la Raspberry Pi y el an&amp;aacute;lisis de un SSD.&lt;/p&gt; 
&lt;p&gt;A destacar durante este semestre ha sido que he publicado un proyecto personal, Blog Stack. &lt;a href="http://www.blogstack.info/"&gt;Blog Stack&lt;/a&gt; es una agregador o planeta de bit&amp;aacute;coras sobre desarrollo, programaci&amp;oacute;n, gnu/linux y tecnolog&amp;iacute;a. A casi todos los bloggeros que le he propuesto agregarle a Blog Stack me han contestado positivamente. 17 son las bit&amp;aacute;coras agregadas actualmente y aunque no son muchas hacen que pr&amp;aacute;cticamente todos los d&amp;iacute;as haya algo nuevo que leer. En un art&amp;iacute;culo hac&amp;iacute;a la presentaci&amp;oacute;n del proyecto y en otro explicaba cual es el funcionamiento en cuanto a hospedaje y arquitectura (interesante para aquellos que quieran realizar un proyecto en internet con un coste m&amp;iacute;nimo). Son los siguientes art&amp;iacute;culos:&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/06/hemeroteca-5"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-06-27T19:10:29Z</dc:date>
  </entry>
  <entry>
    <title>Iniciar rápidamente aplicación con Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/06/iniciar-rapidamente-aplicacion-con-apache-tapestry" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-06-20T21:08:07Z</updated>
    <published>2014-06-20T21:08:07Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/tapestry.png" alt="Apache Tapestry" title="Apache Tapestry" /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;Un proyecto web en Java requiere de unos cuantos archivos con cierta estructura que nos puede llevar un tiempo en crearlos. Normalmente cuando empezamos uno nuevo proyecto solemos basarnos en otro existente copiando y pegando contenido de &amp;eacute;l. Pero ademas de tiempo podemos cometer errores o no seguir algunas convenciones propias de Java o del framework web que usemos. Para un proyecto grande esa dedicaci&amp;oacute;n al inicio del proyecto no nos importar&amp;aacute; pero para un proyecto peque&amp;ntilde;o o para hacer una prueba puede que queramos tener algo m&amp;aacute;s r&amp;aacute;pido y con menos esfuerzo para estar en disposici&amp;oacute;n de empezar a desarrollar en muy poco tiempo.&lt;/p&gt; 
&lt;p&gt;Para crear el esqueleto de una aplicaci&amp;oacute;n r&amp;aacute;pidamente en Tapestry hay disponible un arquetipo de &lt;a href="http://maven.apache.org/"&gt;Maven&lt;/a&gt; que puede generar una aplicaci&amp;oacute;n en unos pocos minutos. Para usarlo deberemos instalar maven previamente. Una vez instalado Maven basta con que usemos el siguiente comando.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/06/iniciar-rapidamente-aplicacion-con-apache-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-06-20T21:08:07Z</dc:date>
  </entry>
  <entry>
    <title>Acelerar tu página web retardando la carga de ciertos contenidos secundarios</title>
    <link rel="alternate" href="http://www.blogstack.info/post/placerdigital/2014/06/acelerar-tu-pagina-web-retardando-la-carga-de-ciertos-contenidos-secundarios" />
    <category term="blog-stack" />
    <category term="programacion" />
    <category term="tutoriales" />
    <category term="html" />
    <category term="javascript" />
    <author>
      <name>Ricardo Barra</name>
    </author>
    <updated>2014-06-17T17:10:26Z</updated>
    <published>2014-06-17T17:10:26Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Cuando en una p&amp;aacute;gina web o blog hay muchos comentarios, cada uno de ellos tiene un avatar asociado. Cada avatar es una imagen distinta y si el post o art&amp;iacute;culo es popular, podemos tener decenas de im&amp;aacute;genes al final de la p&amp;aacute;gina que &lt;strong&gt;retrasar&amp;aacute;n la velocidad de carga de &amp;eacute;sta&lt;/strong&gt;. Peor a&amp;uacute;n, como en esos casos hay que hacer muchas solicitudes al servidor (HTTP requests) para que cargue cada imagen por separado, eso puede impedir que se carguen antes otros elementos importantes para el aspecto de la p&amp;aacute;gina, tales como estilos CSS u otras im&amp;aacute;genes.&lt;/p&gt; 
&lt;p&gt;Para acelerar la velocidad de carga de una p&amp;aacute;gina web y as&amp;iacute; ofrecer una mejor experiencia al usuario, &lt;strong&gt;existen formas de lograr que los avatares u otros elementos sean los &amp;uacute;ltimos en cargar&lt;/strong&gt;. Muchas veces no necesitamos que las im&amp;aacute;genes de perfil de los comentaristas se muestren inmediatamente, ya que primero nos interesa leer el contenido principal. Puede incluso que ni siquiera necesitemos ver los comentarios.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/placerdigital/2014/06/acelerar-tu-pagina-web-retardando-la-carga-de-ciertos-contenidos-secundarios"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Ricardo Barra</dc:creator>
    <dc:date>2014-06-17T17:10:26Z</dc:date>
  </entry>
  <entry>
    <title>Página Dashboard de Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/06/pagina-dashboard-de-apache-tapestry" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-06-13T15:37:24Z</updated>
    <published>2014-06-13T15:37:24Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/tapestry.png" alt="Apache Tapestry" title="Apache Tapestry" /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;Con la versi&amp;oacute;n 5.4 de Tapestry las &lt;a href="http://elblogdepicodev.blogspot.com.es/2012/08/paginas-pagecatalog-servicestatus-e.html"&gt;p&amp;aacute;ginas PageCatalog, ServiceStatus e HibernateStaticstis&lt;/a&gt; han sido unificadas en la p&amp;aacute;gina T5Dashboard por lo que ahora en una s&amp;oacute;la p&amp;aacute;gina tendremos toda la informaci&amp;oacute;n. Una de las caracter&amp;iacute;sticas m&amp;aacute;s importantes de Tapestry es ser muy informativo proporcionando mucha y descriptiva informaci&amp;oacute;n, esto se nota con la p&amp;aacute;gina de &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/07/personalizar-la-pagina-de-informe-de-error.html"&gt;informe de error incluso para las peticiones ajax&lt;/a&gt;, los mensajes de logging y con est&amp;aacute;s p&amp;aacute;ginas de informaci&amp;oacute;n de estado.&lt;/p&gt; 
&lt;p&gt;La p&amp;aacute;gina &lt;a href="http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/corelib/pages/T5Dashboard.html"&gt;T5Dashboard&lt;/a&gt; est&amp;aacute; incluida en el propio core de &lt;a href="http://tapestry.apache.org/"&gt;Apache Tapestry&lt;/a&gt; y disponible en todas las aplicaciones en modo desarrollo y accediendo de forma local al servidor de aplicaciones. Si se incluye en la aplicaci&amp;oacute;n la dependencia tapestry-hibernate adem&amp;aacute;s en T5Dashboard podremos ver estad&amp;iacute;sticas de uso de Hibernate. La p&amp;aacute;gina T5Dashboard nos puede resultar muy &amp;uacute;til ya que nos proporciona mucha informaci&amp;oacute;n y alguna acci&amp;oacute;n interesante.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/06/pagina-dashboard-de-apache-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-06-13T15:37:24Z</dc:date>
  </entry>
  <entry>
    <title>Detectar problema N+1 y obtener estadísticas de Hibernate con Grails</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/05/detectar-problema-n-1-y-obtener-estadisticas-de-hibernate-con-grails" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="grails" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-06-13T14:00:00Z</updated>
    <published>2014-05-30T18:30:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/grails.png" alt="Grails" title="Grails" /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;Una base de datos relacional guarda los datos de forma diferente al modelo orientado a objetos que utilizamos en lenguajes como &lt;a href="http://www.oracle.com/us/technologies/java/overview/index.html"&gt;Java&lt;/a&gt;, &lt;a href="http://www.microsoft.com/net"&gt;C#&lt;/a&gt; o &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;. Los &lt;a href="http://en.wikipedia.org/wiki/Object-relational_mapping"&gt;ORM (Object-relational mapping)&lt;/a&gt; tratan de hacer una correspondencia entre los dos modelos, el relacional de las bases de datos y el orientado a objetos de los lenguajes. Una de las ventajas de usar en una aplicaci&amp;oacute;n un ORM para acceder a la base de datos es que podemos hacer una correspondencia entre los datos de una base de datos relacional y trabajar con esos datos utilizando el modelo orientado a objetos del lenguaje de programaci&amp;oacute;n que usemos.&lt;/p&gt; 
&lt;p&gt;Sin embargo, el ORM env&amp;iacute;a sentencias SQL para recuperar los datos de la base de datos relacional seg&amp;uacute;n vamos navegando con los m&amp;eacute;todos de acceso a otros objetos y sus relaciones. Depende de como el ORM haga las consultas para recuperar los datos de la base de datos relacional puede generar muchas SQL, producir un bajo rendimiento en la aplicaci&amp;oacute;n y una carga de trabajo considerable para la base de datos.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/05/detectar-problema-n-1-y-obtener-estadisticas-de-hibernate-con-grails"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-05-30T18:30:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejecutar Apache Tapestry en el servidor de aplicaciones WildFly</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/06/ejecutar-apache-tapestry-en-el-servidor-de-aplicaciones-wildfly" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-06-06T18:58:25Z</updated>
    <published>2014-06-06T18:58:25Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/tapestry.png" alt="Apache Tapestry" title="Apache Tapestry" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/wildfly.png" alt="WildFly" title="WildFly" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Los class loaders del &lt;a href="http://picodotdev.github.io/blog-bitix/2014/02/servidor-de-aplicaciones-jboss-slash-wildfly/"&gt;servidor de aplicaciones JBoss)/WildFly&lt;/a&gt; habitualmente han dado alg&amp;uacute;n problema en la ejecuci&amp;oacute;n de las aplicaciones y la carga de clases. En versiones antiguas como la 4 se pod&amp;iacute;an producir conflictos entre las librer&amp;iacute;as de las aplicaciones y las librer&amp;iacute;as instaladas en el servidor ya que en &lt;a href="http://jbossas.jboss.org/"&gt;JBoss&lt;/a&gt; se buscaba las clases por defecto y primero en el class loader del servidor en vez de en el classloader de la aplicaci&amp;oacute;n (war). Ya en las &amp;uacute;ltimas versiones como JBoss 7 y &lt;a href="http://wildfly.org/"&gt;WildFly&lt;/a&gt; la forma de cargar las clases es m&amp;aacute;s parecido al modelo habitual que se sigue en las aplicaciones Java EE y en servidores como Tomcat buscando primero en el directorio classes WEB-INF/classes y entre las librer&amp;iacute;as de la carpeta WEB-INF/lib del archivo war. Adem&amp;aacute;s, con la inclusi&amp;oacute;n de JBoss Modules se puede seguir un esquema OSGi con lo que incluso podr&amp;iacute;amos usar simultaneamente en el servidor diferentes versiones de la misma librer&amp;iacute;a.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/06/ejecutar-apache-tapestry-en-el-servidor-de-aplicaciones-wildfly"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-06-06T18:58:25Z</dc:date>
  </entry>
  <entry>
    <title>Página de excepción de Grails</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/05/pagina-de-excepcion-de-grails" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="grails" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-05-30T18:00:00Z</updated>
    <published>2014-05-23T18:00:19Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/grails.png" alt="Grails" title="Grails" /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;No es la primera vez que comento algo similar (&lt;a href="http://elblogdepicodev.blogspot.com.es/2012/08/paginas-pagecatalog-servicestatus-e.html"&gt;I&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2011/08/motivos-para-elegir-apache-tapestry.html"&gt;II&lt;/a&gt;) disponer de la mayor cantidad de informaci&amp;oacute;n cuando se produce una excepci&amp;oacute;n o un error en la aplicaci&amp;oacute;n es vital para determinar r&amp;aacute;pidamente la causa del error y para solucionarlo correctamente. Para disponer de esta informaci&amp;oacute;n podemos generar un archivo de log que nos permita revisar lo que pas&amp;oacute; en la aplicaci&amp;oacute;n en un determinado momento. En el momento de desarrollo tambi&amp;eacute;n nos puede interesar tener una p&amp;aacute;gina de excepci&amp;oacute;n informativa.&lt;/p&gt; 
&lt;p&gt;La p&amp;aacute;gina de error de &lt;a href="http://grails.org/"&gt;Grails&lt;/a&gt; por defecto da poca informaci&amp;oacute;n, a poco m&amp;aacute;s da la traza de la excepci&amp;oacute;n y un extracto de los archivos relacionados donde se ha producido, podr&amp;iacute;a ser mejor. Podr&amp;iacute;a informar de los par&amp;aacute;metros que se enviaron en la petici&amp;oacute;n, las cabeceras http o las cookies adem&amp;aacute;s de los par&amp;aacute;metros de sesi&amp;oacute;n, a veces esta informaci&amp;oacute;n nos puede servir para identificar la causa m&amp;aacute;s r&amp;aacute;pidamente ya que la excepci&amp;oacute;n puede estar produci&amp;eacute;ndose con el valor de un determinado par&amp;aacute;metro o un determinado navegador, esta informaci&amp;oacute;n no la tenemos en una simple traza de la excepci&amp;oacute;n.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/05/pagina-de-excepcion-de-grails"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-05-23T18:00:19Z</dc:date>
  </entry>
  <entry>
    <title>Arquitectura y hospedaje de Blog Stack</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/05/arquitectura-y-hospedaje-de-blog-stack" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="software-libre" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-05-16T22:10:00Z</updated>
    <published>2014-05-16T15:21:55Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/blogstack.png" alt="Blog Stack" title="Blog Stack" /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;Normalmente en esta bit&amp;aacute;cora suelo poner ejemplos para explicar como funciona una determinada herramienta, son ejemplos que podr&amp;iacute;an aprovecharse para algo productivo pero para mantenerlos simples por si mismos no suelen serlo. En esta entrada voy a comentar cual es la arquitectura y como est&amp;aacute; alojado &lt;a href="http://www.blogstack.info/"&gt;Blog Stack&lt;/a&gt;, que es un ejemplo de algo pr&amp;aacute;ctico y real por si la experiencia de este ejemplo le sirve de ayuda o de inspiraci&amp;oacute;n a alguien. En la red he encontrado comentada la experiencia de &lt;a href="http://damog.nl/blog/the-new-planeta-linux-engine.html"&gt;Planeta Linux&lt;/a&gt; y &lt;a href="http://gallir.wordpress.com/2009/12/30/como-montamos-meneame-en-amazon-ec2/"&gt;Meneame&lt;/a&gt;, otros proyectos web.&lt;/p&gt; 
&lt;p&gt;Blog Stack (BS) es una agregador, planeta, o fuente de informaci&amp;oacute;n de bit&amp;aacute;coras sobre programaci&amp;oacute;n, desarrollo, desarrollo &amp;aacute;gil, software, software libre, hardware, gnu/linux o en general temas relacionados con la tecnolog&amp;iacute;a, en definitiva es un servicio que est&amp;aacute; disponible en una direcci&amp;oacute;n de internet, &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/05/arquitectura-y-hospedaje-de-blog-stack"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-05-16T15:21:55Z</dc:date>
  </entry>
  <entry>
    <title>Como configurar un relay de correo para nuestra empresa con Postfix</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2012/07/como-configurar-un-relay-de-correo-para-nuestra-empresa-con-postfix" />
    <category term="servidor-correo" />
    <category term="debian" />
    <category term="virtualbox" />
    <category term="programacion" />
    <category term="ibm-lotus-notes" />
    <category term="postfix" />
    <category term="gnu-linux" />
    <category term="wietse-venema" />
    <category term="correo" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-05-07T14:05:40Z</updated>
    <published>2012-07-10T12:27:34Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;a href="http://www.ochobitshacenunbyte.com/wp-content/uploads/2012/07/mysza.gif"&gt;&lt;img title="mysza" src="http://www.ochobitshacenunbyte.com/wp-content/uploads/2012/07/mysza.gif" alt="" width="130" height="91" /&gt;&lt;/a&gt;&amp;Uacute;ltimamente en la empresa donde trabajo hemos tenido que configurar un nuevo servidor de “relay” de correo para sustituir al que ten&amp;iacute;amos, que era un viejo &lt;a title="IBM Lotus Notes" href="http://es.wikipedia.org/wiki/Lotus_Notes"&gt;IBM Lotus Notes&lt;/a&gt;. Por suerte yo ya hab&amp;iacute;a o&amp;iacute;do hablar del servicio de correo de c&amp;oacute;digo abierto Postfix, creado por el programador&lt;a title="Wietse Venema" href="http://es.wikipedia.org/wiki/Wietse_Venema"&gt; Wietse Venema&lt;/a&gt;. Lo cierto es que he tenido que investigar un poco, mirando manuales en Internet, y visitando asiduamente la p&amp;aacute;gina web del &lt;a title="Postfix" href="http://www.postfix.org/"&gt;proyecto&lt;/a&gt;, para as&amp;iacute; de paso practicar mi ingl&amp;eacute;s.&lt;/p&gt; 
&lt;p&gt;Bueno. Una vez explicado esto, os explico como lo instal&amp;eacute; y configur&amp;eacute;.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Primero de todo, decid&amp;iacute; usar una distribuci&amp;oacute;n GNU/Linux, me decid&amp;iacute; por Debian, sin interfaz gr&amp;aacute;fica, para as&amp;iacute; ahorrar recursos al sistema. Una vez descargada la &amp;uacute;ltima versi&amp;oacute;n estable de su web: &amp;nbsp;&lt;a href="http://www.debian.org/CD/http-ftp/#stable"&gt;http://www.debian.org/CD/http-ftp/#stable&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2012/07/como-configurar-un-relay-de-correo-para-nuestra-empresa-con-postfix"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2012-07-10T12:27:34Z</dc:date>
  </entry>
  <entry>
    <title>Presentación de Blog Stack</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/05/presentacion-de-blog-stack" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="linux" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-05-06T19:00:00Z</updated>
    <published>2014-05-04T09:51:38Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/blogstack.png" alt="Blog Stack" title="Blog Stack" /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;Con este art&amp;iacute;culo quiero presentar un nuevo proyecto, Blog Stack. &lt;a href="http://www.blogstack.info/"&gt;Blog Stack&lt;/a&gt; (BS) es una agregador, planeta, o fuente de informaci&amp;oacute;n de bit&amp;aacute;coras sobre programaci&amp;oacute;n, desarrollo, desarrollo &amp;aacute;gil, software, software libre, hardware, gnu/linux o en general temas relacionados con la tecnolog&amp;iacute;a.&lt;/p&gt; 
&lt;div style="text-align: center;"&gt; 
 &lt;a href="http://picodotdev.github.io/blog-bitix/images/custom/posts/23/blogstack-portada.png" title="Portada de Blog Stack"&gt;&lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/posts/23/blogstack-portada-thumb.png" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Otro agregador o planeta no es ninguna idea nueva pero BS incorpora alguna cosa adicional como poder suscribirse a &amp;uacute;nicamente el contenido etiquetado en que cada uno est&amp;eacute; interesando (programaci&amp;oacute;n, desarrollo-&amp;aacute;gil, java, python, linux, ubuntu, …) o recibir el contenido publicado en todas las bit&amp;aacute;coras agregadas sin tener que suscribirse individualmente a cada una de ellas. BS a&amp;uacute;n est&amp;aacute; en desarrollo y posiblemente vaya incorporando nuevas ideas que me surjan o se me propongan pero en el estado actual ya cumple con la funci&amp;oacute;n b&amp;aacute;sica de agregador.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/05/presentacion-de-blog-stack"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-05-04T09:51:38Z</dc:date>
  </entry>
  <entry>
    <title>Introducción a Elasticsearch</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/introduccion-a-elasticsearch" />
    <category term="blog-stack" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-05-01T11:00:00Z</updated>
    <published>2014-04-25T15:15:05Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/elasticsearch.png" alt="Elasticsearch" title="Elasticsearch" /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;Continuando con la forma de &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/busquedas-de-texto-completo-en-objetos-de-dominio.html"&gt;como dar soluci&amp;oacute;n a la b&amp;uacute;squedas en las entidades de dominio&lt;/a&gt; en esta entrada profundizar&amp;eacute; en la soluci&amp;oacute;n que comentaba de usar &lt;a href="http://www.elasticsearch.org"&gt;Elasticsearch&lt;/a&gt; (ES). ES se basa en &lt;a href="http://lucene.apache.org/core/"&gt;Lucene&lt;/a&gt; pero expone su funcionalidad a trav&amp;eacute;s de una interfaz REST recibiendo y enviando datos en formato JSON y oculta mediante esta interfaz los detalles internos de lucene. Esta interfaz permite que pueda ser utilizada por cualquier plataforma no solo Java, puede usarse desde Python, .NET, PHP o incluso desde un navegador con Javascript. Es persistente, es decir, que lo que indexemos en ella sobrevivir&amp;aacute; a un reinicio del servidor.&lt;/p&gt; 
&lt;p&gt;Como comentaba en &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/busquedas-de-texto-completo-en-objetos-de-dominio.html"&gt;el art&amp;iacute;culo anterior de b&amp;uacute;squedas sobre entidades de dominio&lt;/a&gt; ES nos puede servir para hacer b&amp;uacute;squedas a texto completo pero tambi&amp;eacute;n podemos hacer otra serie de cosas adicionales que no podemos con una base de datos relacional aunque soporte en su lenguaje SQL b&amp;uacute;squeda a texto completo, por ejemplo, resaltado (highlight) y facetas (facets), tambi&amp;eacute;n permite hacer b&amp;uacute;squedas vagas (fuzzy) y soporta diferentes analizadores seg&amp;uacute;n el idioma de la propiedad en que se busque. El indexar y desindexar los datos en elasticsearch para que luego puedan ser buscados es responsabilidad nuestra y adem&amp;aacute;s de insertarlos o eliminarlos en la base de datos debemos hacer lo mismo en ES ya sea haci&amp;eacute;ndolo en ambos sitios a la vez o mediante un proceso de fondo que se encargue de ello.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/introduccion-a-elasticsearch"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-04-25T15:15:05Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Marionette</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-lista-de-tareas-con-marionette" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-25T22:59:42Z</updated>
    <published>2013-08-30T12:28:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Marionette" src="http://2.bp.blogspot.com/-ODdQesCGeKg/UiCFBR7_Z_I/AAAAAAAACmg/an6e-SJv-jA/s200/marionette.png" height="200" title="Marionette" width="146" /&gt; 
&lt;/div&gt;Como comentaba en el 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;ejemplo de una aplicaci&amp;oacute;n de una lista de tareas en una aplicaci&amp;oacute;n javascript&lt;/a&gt;&amp;nbsp;Backbone es una herramienta que nos puede ayudar mucho a evitar que el c&amp;oacute;digo se nos convierta en dif&amp;iacute;cil de manejar facilit&amp;aacute;ndonos como estructurarlo con los modelos, colecciones y vistas y permiti&amp;eacute;ndonos separar el modelo de la vista actualizando estas &amp;uacute;ltimas a trav&amp;eacute;s de los eventos que produce el modelo y escuchados en las vistas. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;a href="http://backbonejs.org/"&gt;Backbone&lt;/a&gt; es una herramienta que nos da bastante libertad en cuanto a como queremos hacer las cosas y de lo que ofrece podemos usar solo lo que queramos. En algunos casos podemos considerar que Backbone ya es de por si una soluci&amp;oacute;n suficiente pero pero en otros podemos necesitar algo que nos facilite la tarea un poco m&amp;aacute;s, de hecho hay muchas&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/08/ejemplo-lista-de-tareas-con-marionette"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-08-30T12:28:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Backbone y React</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-11T14:33:28Z</updated>
    <published>2014-04-11T14:33:28Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right; text-align: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/backbone.png" alt="Backbone" title="Backbone" /&gt; 
 &lt;br /&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/react.png" alt="React" title="React" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En anteriores entradas explicaba como hacer el t&amp;iacute;pico ejemplo que se suele usar como demostraci&amp;oacute;n en los framework MVC de Javascript que consiste en una lista de tareas en la que se pueden a&amp;ntilde;adir nuevas, marcarlas como completadas y eliminarlas. Realice este ejemplo en uno de ellos &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;usando solo Backbone&lt;/a&gt; y posteriormente &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;usando Marionette&lt;/a&gt;. Estos ejemplos eran parte de una serie de art&amp;iacute;culos sobre Javascript que la que mostaba como usar muchas otras herramientas como &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;Require JS&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html"&gt;Mustache&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html"&gt;logging con javscript&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/capturar-errores-de-javascript.html"&gt;capturar errores en javascript&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html"&gt;introducci&amp;oacute;n a Backbone&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html"&gt;lista de tarea con Backbone, RESTEasy y Tapestry&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html"&gt;pruebas unitarias con Jasmine y Sinon&lt;/a&gt;, &lt;a href="http://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/"&gt;Usar Grunt para ejecutar teses unitarios de c&amp;oacute;digo Javascript&lt;/a&gt; y que constituyen parte del actual &amp;laquo;estado del arte&amp;raquo; en cuanto a desarrollo con Javascript.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-04-11T14:33:28Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo lista de tareas con Backbone, RESTEasy y Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/04/ejemplo-lista-de-tareas-con-backbone-resteasy-y-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="tapestry" />
    <category term="java" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T16:11:56Z</updated>
    <published>2013-04-26T19:38:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Backbone.js" src="http://2.bp.blogspot.com/-SMyoDvx_-j8/UXFvpfyC7iI/AAAAAAAACec/LiLs_goZU4Y/s320/backbone.png" height="56" title="Backbone.js" width="320" /&gt; 
&lt;/div&gt;Normalmente escribo art&amp;iacute;culos con ejemplos que tratan sobre una &amp;uacute;nica tecnolog&amp;iacute;a, al tratar cada tecnolog&amp;iacute;a por separado entender que puede ofrecer es m&amp;aacute;s sencillo pero en una aplicaci&amp;oacute;n real normalmente se usan varias tecnolog&amp;iacute;as combinadas y al mismo tiempo. Esta entrada aunque sigue siendo un ejemplo es mucho m&amp;aacute;s parecido a lo que podr&amp;iacute;a ser una aplicaci&amp;oacute;n real que lo que he explicado durante las &amp;uacute;ltimas entradas. En esta serie sobre javascript he explicado un mont&amp;oacute;n de cosas por separado entre ellas 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;RequireJS&lt;/a&gt;,&amp;nbsp; 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html"&gt;Mustache&lt;/a&gt;,&amp;nbsp; 
&lt;a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html"&gt;Backbone&lt;/a&gt;, 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/integracion-tapestry-con-resteasy.htm.html"&gt;servicios rest con Tapestry&lt;/a&gt; y 
&lt;a href="http://elblogdepicodev.blogspot.com.es/2013/02/ejemplo-sencillo-de-web-service-con-resteasy.html"&gt;RESTEasy&lt;/a&gt;. En esta entrada har&amp;eacute; un ejemplo haciendo uso de todas las anteriores y alguna cosa m&amp;aacute;s adicional como 
&lt;a href="http://twitter.github.io/bootstrap/"&gt;twitter bootstrap&lt;/a&gt;. 
&lt;br /&gt; 
&lt;br /&gt;El ejemplo consiste en una lista de tareas, pudi&amp;eacute;ndose introducir nuevas tareas y marcarlas como realizadas. Tambi&amp;eacute;n se podr&amp;aacute; eliminar de la lista las tareas completadas y ver un resumen con el n&amp;uacute;mero de tareas completadas y de tareas totales.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/04/ejemplo-lista-de-tareas-con-backbone-resteasy-y-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-04-26T19:38:00Z</dc:date>
  </entry>
  <entry>
    <title>Introducción y ejemplo de RequireJS</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2013/03/introduccion-y-ejemplo-de-requirejs" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software-libre" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T14:46:44Z</updated>
    <published>2013-03-15T21:18:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="RequireJS" src="http://4.bp.blogspot.com/-M9RUvRUMUuY/UUOEKEfud5I/AAAAAAAACcU/OYXvsfWUBbQ/s1600/requirejs.png" title="RequireJS" /&gt; 
&lt;/div&gt;Las p&amp;aacute;ginas web ha evolucionado mucho desde sus inicios en los que eran simples p&amp;aacute;ginas est&amp;aacute;ticas hechas con el lenguaje de marcas html, pod&amp;iacute;an contener enlaces e im&amp;aacute;genes. Posteriormente adquirieron capacidad de cambiar a trav&amp;eacute;s un lenguaje de programaci&amp;oacute;n que en el servidor genera el c&amp;oacute;digo html de forma din&amp;aacute;mica bas&amp;aacute;ndose en la informaci&amp;oacute;n que el usuario pod&amp;iacute;a enviar en un formulario, tambi&amp;eacute;n se incorpora cierta programaci&amp;oacute;n en el cliente con javascript. Con las nuevas versiones del est&amp;aacute;ndar html, los avances de los navegadores y una explosi&amp;oacute;n de dispositivos m&amp;oacute;viles de gran capacidad las aplicaciones est&amp;aacute;n evolucionando hacia el cliente, haci&amp;eacute;ndose cada vez m&amp;aacute;s complejas en el lado del navegador del usuario y adquiriendo resposabilidades que antes ten&amp;iacute;a la aplicaci&amp;oacute;n en el lado del servidor. Cada vez hay m&amp;aacute;s librer&amp;iacute;as y frameworks javascript que tratan de resolver problemas espec&amp;iacute;ficos de las aplicaciones de internet. Entre estas librer&amp;iacute;as algunas de las m&amp;aacute;s conocidas son, muy resumidamente:&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2013/03/introduccion-y-ejemplo-de-requirejs"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2013-03-15T21:18:00Z</dc:date>
  </entry>
  <entry>
    <title>Usar Grunt para ejecutar teses unitarios de código Javascript</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="javascript" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-04-04T14:43:23Z</updated>
    <published>2014-04-04T14:43:23Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/grunt.png" alt="Grunt" title="Grunt" /&gt; 
&lt;/div&gt; 
&lt;p&gt;En la &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;serie de art&amp;iacute;culos que escrib&amp;iacute; sobre javascript&lt;/a&gt; hice un ejemplo m&amp;aacute;s o menos complejo y parecido a lo que podr&amp;iacute;a ser una aplicaci&amp;oacute;n real usando muchas de las herramientas que ahora se consideran una buena opci&amp;oacute;n para desarrollar aplicaciones javascript como &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html"&gt;RequireJS&lt;/a&gt;, &lt;a href="http://www.genbetadev.com/desarrollo-web/patron-de-diseno-mvc-del-lado-cliente-con-backbonejs"&gt;Backbone&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;Marionette&lt;/a&gt;, &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html"&gt;Jasmine y Sinon&lt;/a&gt;. En el &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html"&gt;ejemplo de la lista de tareas con estas herramientas&lt;/a&gt; hice unas cuantas pruebas unitarias para mostrar en un ejemplo como son y la forma de usar &lt;a href="http://jasmine.github.io/"&gt;Jasmine&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Sin embargo, para ejecutar las pruebas unitarias se necesitaba un navegador y hacerlo de forma manual cuando quisi&amp;eacute;ramos comprobar el estado de las pruebas. Lo ideal tal y como se comenta en el libro &lt;a href="http://www.amazon.es/gp/product/B000SEGEKI/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=3626&amp;amp;creative=24822&amp;amp;creativeASIN=B000SEGEKI&amp;amp;linkCode=as2&amp;amp;tag=blobit-21"&gt;The Pragmatic Programmer&lt;/a&gt;&lt;img src="http://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;amp;l=as2&amp;amp;o=30&amp;amp;a=B000SEGEKI" width="1" height="1" alt="" style="border:none !important; margin:0px !important;" /&gt; es que las pruebas unitarias se ejecuten de forma automatizada con la herramienta de construcci&amp;oacute;n que usemos, esto evitar&amp;aacute; que se nos olvide ejecutarlas en cada cambio y as&amp;iacute; descubriremos los errores pronto, tambi&amp;eacute;n podremos hacer que se ejecuten en un entorno de integraci&amp;oacute;n continua como podr&amp;iacute;a ser &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-04-04T14:43:23Z</dc:date>
  </entry>
  <entry>
    <title>Novedades y nuevas características de Java 8</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-03-28T19:00:00Z</updated>
    <published>2014-03-21T15:03:27Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/java.png" alt="Java" title="Java" /&gt; 
&lt;/div&gt; 
&lt;p&gt;El 18 de marzo de 2014 se public&amp;oacute; la nueva versi&amp;oacute;n de la plataforma &lt;a href="http://www.oracle.com/technetwork/java/javase/overview/java8-2100321.html"&gt;Java 8&lt;/a&gt;, Java 7 fue liberada el en julio de 2011. Java 8 incorporar&amp;aacute; varias novedades siguiendo la tendencia de otros lenguajes como la incorporaci&amp;oacute;n de lambdas o closures o una demandada nueva API para el manejo de fechas entre otras muchas caracter&amp;iacute;sticas m&amp;aacute;s. La &lt;a href="http://openjdk.java.net/projects/jdk8/features"&gt;lista completa de novedades&lt;/a&gt; es bastante amplia, a continuaci&amp;oacute;n pondr&amp;eacute; lo que me ha parecido m&amp;aacute;s destacable:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Se a&amp;ntilde;aden las expresiones lambda o closures y se adapta la API para usarlas en los sitios que se pueda.&lt;/li&gt; 
 &lt;li&gt;Se definen nuevos perfiles compactos para dispositivos que no necesitan toda la API Java, esto es una alternativa a la modularizaci&amp;oacute;n. Inicialmente la modularizaci&amp;oacute;n era una caracter&amp;iacute;stica que estaba planificada para Java 8 pero finalmente se ha aplazado a posteriores versiones.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-03-21T15:03:27Z</dc:date>
  </entry>
  <entry>
    <title>Mejorando mi blog WordPress</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdejose/2014/03/mejorando-mi-blog-wordpress" />
    <category term="programacion" />
    <category term="blog" />
    <category term="uncategorized" />
    <category term="plugins" />
    <category term="social-media" />
    <category term="wordpress" />
    <category term="anti-spam" />
    <category term="herramientas" />
    <category term="seo" />
    <author>
      <name>admin</name>
    </author>
    <updated>2014-03-11T22:40:09Z</updated>
    <published>2014-03-11T22:40:09Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Hace aproximadamente un mes, inicie esta mejora del blog, motivado en un principio por la ley de cookies espa&amp;ntilde;ola, como les conte en mi &amp;uacute;ltima&amp;nbsp;&lt;a href="http://josedeveloper.com/2014/02/17/plugins-wordpress-para-la-ley-de-cookies-espanola/"&gt;entrada&lt;/a&gt;, aunque el paso definitivo que me empujo a llevar a cabo estas mejoras fue el darme cuenta que todas las entradas que inclu&amp;iacute;an segmentos de c&amp;oacute;digo se veian mal, sin estilo, en fin, &amp;nbsp;sencillamente horribles, puedo decirles que me averg&amp;uuml;enza ya que ni siquiera tengo una idea de cuanto tiempo llevaban las entradas en dicho estado. Profundizando un poco mas en el asunto creo que tendr&amp;iacute;a alrededor de 2 a&amp;ntilde;os o mas sin buscar alg&amp;uacute;n plugin novedoso o revisar alg&amp;uacute;n tema nuevo, pero al menos me contenta decirles que estoy satisfecho con el tiempo dedicado, el resultado obtenido y compartirlo con ustedes.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdejose/2014/03/mejorando-mi-blog-wordpress"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2014-03-11T22:40:09Z</dc:date>
  </entry>
  <entry>
    <title>BlueFish, un potente editor para desarrollo web.</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/03/bluefish-un-potente-editor-para-desarrollo-web" />
    <category term="programacion" />
    <category term="web" />
    <category term="gnu-linux" />
    <category term="css" />
    <category term="c" />
    <category term="bluefish" />
    <category term="desarrollo" />
    <category term="php" />
    <category term="python" />
    <category term="html" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-03-10T09:21:25Z</updated>
    <published>2014-03-10T09:17:15Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;a href="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/03/bluefish.png"&gt;&lt;img alt="bluefish" src="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/03/bluefish-150x150.png" width="150" height="150" /&gt;&lt;/a&gt;En castellano usamos frecuentemente la frase “Hay muchos peces en el mar”, seg&amp;uacute;n la circunstancia. Hoy hablaremos de un jugoso pez azul, que nos puede facilitar mucho las cosas, sobre todo para los desarrolladores web.&lt;/p&gt; 
&lt;p&gt;En &lt;a title="GNU/Linux art&amp;iacute;culo" href="http://www.ochobitshacenunbyte.com/?p=31"&gt;GNU/Linux &lt;/a&gt;tenemos un sin fin de editores. Bluefish es un potente editor de texto enfocado al desarrollador.&amp;nbsp; C&amp;oacute;mo caracter&amp;iacute;sticas principales tenemos el resaltado de sintaxis, el apoyo a los proyectos, la sangr&amp;iacute;a, la auto-realizaci&amp;oacute;n, etc&amp;eacute;tera.&amp;nbsp; &amp;iquest;Qu&amp;eacute; diferencia Bluefish de otros editores con funciones similares?&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Partimos de la base que puede editar c&amp;oacute;digo para lenguajes como C, C++, Python entre otros. Pero d&amp;oacute;nde desmarca claramente es para el desarrollo web, ya que tiene soporte para HTML, CSS y PHP, adem&amp;aacute;s proporciona una lista todas las etiquetas HTML, y eso facilita mucha las cosas.&amp;nbsp; &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/03/bluefish-un-potente-editor-para-desarrollo-web"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-03-10T09:17:15Z</dc:date>
  </entry>
  <entry>
    <title>Patrones de diseño en la programación orientada a objetos</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2012/03/patrones-de-diseno-en-la-programacion-orientada-a-objetos" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-03-08T02:25:28Z</updated>
    <published>2012-03-16T19:46:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Java" height="200" src="http://2.bp.blogspot.com/-hC2-QuC33AU/TBeztET3lAI/AAAAAAAAAZ8/EzZnNZw5do0/s200/java.png" title="Java" width="107" /&gt; 
&lt;/div&gt;La programaci&amp;oacute;n orientada a objetos (POO) es un paradigma en la que los sistemas se dise&amp;ntilde;an mediante clases y relaciones entre ellas. Se utilizan conceptos como la herencia, polimorfismo, abstraci&amp;oacute;n, encapsulamiento y ocultaci&amp;oacute;n. Resumidamente estas propiedades son: 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clase: Abstracci&amp;oacute;n que recoge las propiedades y comportamiento de los objetos en el sistema. Una clase puede instanciarse en objetos tantas veces como se necesite.&lt;/li&gt; 
 &lt;li&gt;Objeto: instancia de una clase que se relaciona con el resto de objetos a trav&amp;eacute;s de los m&amp;eacute;todos definidos en sus clases.&lt;/li&gt; 
 &lt;li&gt;Herencia: las clases no est&amp;aacute;n aisladas y se relacionan entre ellas, mediante esta propiedad forman una jerarqu&amp;iacute;a en la que las clases heredan las propiedades y m&amp;eacute;todos de las clases superiores.&lt;/li&gt; 
 &lt;li&gt;Polimorfismo: es la propiedad de las instancias de las clases, los objetos, por la que pueden responder de forma diferente a un mismo nombre de m&amp;eacute;todo en funci&amp;oacute;n de su tipo concreto.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2012/03/patrones-de-diseno-en-la-programacion-orientada-a-objetos"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2012-03-16T19:46:00Z</dc:date>
  </entry>
  <entry>
    <title>Introducción y ejemplo sencillo de Java Message Service (JMS)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="software" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-03-08T00:00:00Z</updated>
    <published>2014-03-07T17:31:22Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/java.png" alt="Java" title="Java" /&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition"&gt;La plataforma Java EE&lt;/a&gt; (Java Enterprise Edition) pone a disposici&amp;oacute;n de los desarrolladores varias especificaciones, estas especificaciones describen las funcionalidades y la API que deben proporcionar las implementaciones y proporcionan al desarrollador herramientas para facilitar, hacer mejor las aplicaciones y de forma est&amp;aacute;ndar seg&amp;uacute;n estas especificaciones. Haciendo uso de una de estas especificaciones es posible cambiar de una implementaci&amp;oacute;n a otra de forma transparente y sin modificar ninguna l&amp;iacute;nea de c&amp;oacute;digo de la aplicaci&amp;oacute;n (en teor&amp;iacute;a). Hay especificaciones para persistencia en base de datos (JPA), para transaccionalidad (JTA), para servicios web (JAX-WS ) y REST (JAX-RS) entre otras. En el siguiente enlace puede encontrarse el &lt;a href="https://glassfish.java.net/downloads/ri/"&gt;listado completo de especificaciones y sus versiones de JEE 7&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-03-07T17:31:22Z</dc:date>
  </entry>
  <entry>
    <title>Primeros pasos con maven Parte I</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdejose/2012/07/primeros-pasos-con-maven-parte-i" />
    <category term="proyecto" />
    <category term="programacion" />
    <category term="java-ee" />
    <category term="compilacion" />
    <category term="java-se" />
    <category term="construccion" />
    <category term="maven" />
    <category term="configuracion" />
    <category term="java" />
    <author>
      <name>admin</name>
    </author>
    <updated>2014-03-06T23:57:28Z</updated>
    <published>2012-07-19T23:20:37Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Desde su nacimiento &lt;strong&gt;Maven&lt;/strong&gt; ha ido consolidando y a su vez aumentando su posici&amp;oacute;n como herramienta de gesti&amp;oacute;n y construcci&amp;oacute;n de software en lenguaje Java, poco a poco quitandole terreno a otra famosa herramienta presente en el mercado desde hace mas tiempo que de seguro mucho de ustedes la habran oido mencionar &lt;strong&gt;Apache Ant&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;A continuaci&amp;oacute;n les dejo unas graficas sacadas con el software de estadistica de google donde se puede observar como ha ido incrementandose el interes de Maven con respecto a Ant en distintas categorias&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.47.12.png?fdae38"&gt;&lt;img src="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.47.12-300x150.png?fdae38" alt="estad&amp;iacute;sticas de Ant vs Maven en la categoria de Programaci&amp;oacute;n " title="estad&amp;iacute;sticas de Ant vs Maven en la categoria de Programaci&amp;oacute;n " width="300" height="150" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt; &lt;a href="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.47.34.png?fdae38"&gt;&lt;img src="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.47.34-300x153.png?fdae38" alt="estad&amp;iacute;sticas de Ant vs Maven en la categoria Herramientas de desarrollo" title="estad&amp;iacute;sticas de Ant vs Maven en la categoria Herramientas de desarrollo" width="300" height="153" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.48.03.png?fdae38"&gt;&lt;img src="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.48.03-300x153.png?fdae38" alt="estad&amp;iacute;sticas de Ant vs Maven en la categor&amp;iacute;a Lenguaje de programaci&amp;oacute;n Java" title="estad&amp;iacute;sticas de Ant vs Maven en la categor&amp;iacute;a Lenguaje de programaci&amp;oacute;n Java" width="300" height="153" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt; &lt;a href="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.48.27.png?fdae38"&gt;&lt;img src="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.48.27-300x153.png?fdae38" alt="estad&amp;iacute;sticas del crecimiento de las b&amp;uacute;squedas de Ant y Maven vs  la categoria Lenguaje de programaci&amp;oacute;n Java" title="estad&amp;iacute;sticas del crecimiento de las b&amp;uacute;squedas de Ant y Maven vs  la categoria Lenguaje de programaci&amp;oacute;n Java" width="300" height="153" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="2"&gt; &lt;a href="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.49.02.png?fdae38"&gt;&lt;img src="http://josedeveloper.com/wp-content/uploads/2012/07/Captura-de-pantalla-2012-07-20-a-las-00.49.02-300x160.png?fdae38" alt="estad&amp;iacute;sticas de las b&amp;uacute;squedas de Ant vs Maven en la categor&amp;iacute;a Software" title="estad&amp;iacute;sticas de las b&amp;uacute;squedas de Ant vs Maven en  la categor&amp;iacute;a Software" width="300" height="160" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Adem&amp;aacute;s es cuesti&amp;oacute;n de revisar ofertas de trabajo para ver como cada vez piden mas el conocer Maven como requisito indispensable o como poco un requisito deseado a poseer por parte del candidato. Dada esta introducci&amp;oacute;n quiero compartir con ustedes lo poco que se y he aprendido de maven con la finalidad de que pueda serles de utilidad o al menos como incentivo a aprender mas de esta poderosa herramienta.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdejose/2012/07/primeros-pasos-con-maven-parte-i"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2012-07-19T23:20:37Z</dc:date>
  </entry>
  <entry>
    <title>Caused by: java.io.IOException: DerInputStream.getLength(): lengthTag=109, too big.</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdejose/2012/08/caused-by-java-io-ioexception-derinputstream-getlength-lengthtag-1-9-too-big" />
    <category term="keystore" />
    <category term="jks" />
    <category term="pfx" />
    <category term="programacion" />
    <category term="p12" />
    <category term="java-se" />
    <category term="exceptions" />
    <category term="pkcs12" />
    <author>
      <name>admin</name>
    </author>
    <updated>2014-03-06T23:52:58Z</updated>
    <published>2012-08-20T16:36:13Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;El d&amp;iacute;a de hoy comienzo una nueva categor&amp;iacute;a llamada “&lt;strong&gt;exceptions&lt;/strong&gt;“, donde compartir&amp;eacute; (en medida de lo posible) como resolver o evitar que en nuestras aplicaciones salten excepciones o al menos indicar la raz&amp;oacute;n por la cual es arrojada. En esta oportunidad les traigo la siguiente exception:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Caused by: java.io.IOException: DerInputStream.getLength(): lengthTag=109, too big.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Esta excepci&amp;oacute;n, se obtiene en Java 6 al haber discrepancias entre el tipo de instancia del keystore y el tipo de almac&amp;eacute;n de claves, al intentar cargar el almac&amp;eacute;n de claves. Por ejemplo&amp;nbsp; si intent&amp;aacute;semos cargar el almac&amp;eacute;n de claves desde un fichero .jks (jks es una implementaci&amp;oacute;n por defecto de Java&amp;nbsp; para el almacenamiento de claves, que por ejemplo puede ser creado con el comando &lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdejose/2012/08/caused-by-java-io-ioexception-derinputstream-getlength-lengthtag-1-9-too-big"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2012-08-20T16:36:13Z</dc:date>
  </entry>
  <entry>
    <title>Componente AjaxSpinner para Tapestry 5</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2011/09/componente-ajaxspinner-para-tapestry-5" />
    <category term="programacion" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-03-06T08:46:40Z</updated>
    <published>2011-09-09T19:09:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt; 
 &lt;img alt="Apache Tapestry" src="http://4.bp.blogspot.com/-OGvCbjBk0zU/TOq7Y6w6wfI/AAAAAAAAAiU/Pfuzt5kkDBQ/s320/tapestry.png" height="133" title="Apache Tapestry" width="320" /&gt; 
&lt;/div&gt;Hoy en d&amp;iacute;a las aplicaciones web que hace peticiones de forma as&amp;iacute;ncrona con AJAX son la mayor&amp;iacute;a ya que es una t&amp;eacute;cnica que permite obtener &amp;uacute;nicamente los datos que se necesitan sin tener que hacer una cargar entera de la p&amp;aacute;gina web en el navegador. Esta t&amp;eacute;cnica hace que las peticiones al devolver &amp;uacute;nicamente los datos necesarios (y no toda la p&amp;aacute;gina) y los recursos para procesar la petici&amp;oacute;n sean menos, tambi&amp;eacute;n hace que el resultado de las peticiones sean m&amp;aacute;s peque&amp;ntilde;os con lo que el tiempo de carga tambi&amp;eacute;n se reduce al generar menos tŕafico de red, asi mismo el usuario nota un aumento de tiempo de respuesta. Tambi&amp;eacute;n hace que en ciertos casos las aplicaciones sean m&amp;aacute;s f&amp;aacute;ciles de desarrollar por no tener que tratar en el servidor en cada petici&amp;oacute;n el estado concreto de cada cliente.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2011/09/componente-ajaxspinner-para-tapestry-5"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2011-09-09T19:09:00Z</dc:date>
  </entry>
  <entry>
    <title>Música para programar</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/02/musica-para-programar" />
    <category term="programacion" />
    <category term="musica" />
    <category term="music" />
    <category term="programming" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-02-27T17:02:39Z</updated>
    <published>2014-02-27T16:42:43Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;&lt;a href="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/02/mfp.jpg"&gt;&lt;img alt="mfp" src="http://www.ochobitshacenunbyte.com/wp-content/uploads/2014/02/mfp.jpg" width="144" height="144" /&gt;&lt;/a&gt;Muchas veces necesitamos aislarnos del mundo exterior, o simplemente desconectar de las conversaciones de nuestros compa&amp;ntilde;eros de departamento.&lt;/p&gt; 
&lt;p&gt;Os recomiendo la web:&lt;/p&gt; 
&lt;p&gt;&lt;a title="Music for programming" href="http://musicforprogramming.net/"&gt;musicForProgramming();&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Recopilatarios muy completos. Echadle un vistazo.&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;a href="http://twitter.com/share?url=http://www.ochobitshacenunbyte.com/2014/02/27/musica-para-programar/&amp;amp;text=M&amp;uacute;sica para programar" title="Click here if you like this article."&gt; &lt;img src="http://www.ochobitshacenunbyte.com/wp-content/plugins/twitter-plugin/images/twitt.gif" alt="Twitt" /&gt; &lt;/a&gt; 
&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/02/musica-para-programar"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-02-27T16:42:43Z</dc:date>
  </entry>
  <entry>
    <title>Generar y convertir claves y certificados con OpenSSL</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl" />
    <category term="programacion" />
    <category term="software" />
    <category term="planeta-arch-linux" />
    <category term="planeta-linux" />
    <category term="software-libre" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-02-21T16:36:21Z</updated>
    <published>2014-02-21T16:36:21Z</published>
    <content type="html">&lt;p&gt;&lt;div style="float: right;"&gt; 
 &lt;img src="http://picodotdev.github.io/blog-bitix/images/custom/logotipos/openssl.png" alt="OpenSSL" title="OpenSSL" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Para un uso personal como enviar correos o archivos cifrados o firmados digitalmente usar &lt;a href="http://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html"&gt;GnuPG&lt;/a&gt; es una buena opci&amp;oacute;n. En Internet los servidores tambi&amp;eacute;n se aprovechan del uso de criptograf&amp;iacute;a para realizar comunicaciones seguras entre el usuario y el servidor.&lt;/p&gt; 
&lt;p&gt;Para hacer uso en un servidor de una comunicaci&amp;oacute;n https donde los datos viajan cifrados y sin que otras partes salvo el usuario y el servidor puedan acceder a los datos necesitamos un certificado digital. Un certificado es un archivo que contiene la clave p&amp;uacute;blica sirvi&amp;eacute;ndonos para verificar su autenticidad. Un certificado autofirmado es un certificado firmado con la misma clave privada asociada a la clave p&amp;uacute;blica que contiene el certificado. Un certificado autofirmado es suficiente para un entorno de pruebas pero en un servidor para proporcionar confianza a los usuarios deberemos solicitar que una autoridad de certificados que nos firme con su clave nuestro certificado, si el usuario conf&amp;iacute;a en esa autoridad de certificado puede de esta manera confiar en nuestro certificado y clave p&amp;uacute;blica.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-02-21T16:36:21Z</dc:date>
  </entry>
  <entry>
    <title>Plugins WordPress para la ley de cookies española</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdejose/2014/02/plugins-wordpress-para-la-ley-de-cookies-espanola" />
    <category term="programacion" />
    <category term="wordpress" />
    <category term="ley" />
    <category term="cookie" />
    <category term="herramientas" />
    <author>
      <name>admin</name>
    </author>
    <updated>2014-02-17T20:32:13Z</updated>
    <published>2014-02-17T20:32:13Z</published>
    <content type="html">&lt;p&gt;&lt;p&gt;Transcurr&amp;iacute;a el mes de agosto del a&amp;ntilde;o pasado cuando por un tuit me entere de que exist&amp;iacute;a una “ley de cookies”, el tuit hacia referencia a una publicaci&amp;oacute;n donde indicaban que ya exist&amp;iacute;a una demanda en contra de una empresa “grande” en Espa&amp;ntilde;a y todo porque alguien (entiendo que un astuto) hab&amp;iacute;a introducido la demanda ya que el sitio Web de la empresa no indicaba que introduc&amp;iacute;a cookies en las computadoras de los usuarios que visitaban dicho sitio. Recuerdo tambi&amp;eacute;n que dicho articulo comentaba que el ente jur&amp;iacute;dico espa&amp;ntilde;ol no multar&amp;iacute;a (seg&amp;uacute;n sus fuentes) con una cifra escandalosa a la empresa para la compensaci&amp;oacute;n del o los usuarios pero si estaban tomando ese caso para elaborar una especie de borrador para que a su vez bloggers y empresas tuviesen una referencia al momento de adaptar sus sitios Web as&amp;iacute; como tambi&amp;eacute;n ellos tener una referencia a la cual apegarse a la hora de determinar si un sitio cumpl&amp;iacute;a con la ley o no.&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdejose/2014/02/plugins-wordpress-para-la-ley-de-cookies-espanola"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2014-02-17T20:32:13Z</dc:date>
  </entry>
  <entry>
    <title>Documentación sobre Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdepicodev/2010/05/documentacion-sobre-apache-tapestry" />
    <category term="planeta-codigo" />
    <category term="programacion" />
    <category term="tapestry" />
    <category term="java" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-02-14T23:34:46Z</updated>
    <published>2010-05-24T18:46:00Z</published>
    <content type="html">&lt;p&gt;&lt;div style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em; text-align: center;"&gt; 
 &lt;img alt="Apache Tapestry" src="http://1.bp.blogspot.com/_9zOwWD_PYL8/TOq7Y6w6wfI/AAAAAAAAAiU/DPBnmc4-2Sw/s320/tapestry.png" height="132" title="Apache Tapestry" width="320" /&gt; 
&lt;/div&gt; 
&lt;a href="http://tapestry.apache.org/"&gt;Apache Tapestry&lt;/a&gt; ha sido para mi, con diferencia sobre el resto &amp;nbsp;(JSF, Struts 1 y &amp;uacute;ltimamente Grails), el mejor framework para desarrollar aplicaciones web en Java que he probado, adem&amp;aacute;s de ser un placer programar con &amp;eacute;l siempre que he podido. Tambi&amp;eacute;n he le&amp;iacute;do bastantes buenas cr&amp;iacute;ticas y argumentos en varios blogs y art&amp;iacute;culos destacando varios de sus aspectos y compar&amp;aacute;ndolo con otros frameworks similares ( 
&lt;a href="http://wicket.apache.org/"&gt;Wicket&lt;/a&gt;, 
&lt;a href="http://struts.apache.org/"&gt;Struts&lt;/a&gt;, JSF y alg&amp;uacute;n otro). En esta entrada quiero ir recogiendo todos los enlaces de documentaci&amp;oacute;n que vaya encontrando sobre este framework ya que a pesar de que el framework es excelente la documentaci&amp;oacute;n a d&amp;iacute;a de hoy no es tan abundante&amp;nbsp;no toda est&amp;aacute; centralizada en la web del proyecto, lo que puede ser un problema para alguien que este empezando. Por fortuna, la documentaci&amp;oacute;n es suficiente para llegar a comprender como funciona y hay algunos buenos libros publicados. Este framework le hace la vida m&amp;aacute;s f&amp;aacute;cil al programador en varias de las tareas m&amp;aacute;s comunes de toda aplicaci&amp;oacute;n web. As&amp;iacute; que si estas cansado de JSF, de Struts o de el framework [pon aqu&amp;iacute; el que uses] que no te permite disfrutar mientras desarrollas o te complica las cosas m&amp;aacute;s de lo necesario te animo a que pruebes Tapestry quiz&amp;aacute; sea lo que est&amp;aacute;s buscando. Puedes empezar por el&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdepicodev/2010/05/documentacion-sobre-apache-tapestry"&gt;continuar leyendo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2010-05-24T18:46:00Z</dc:date>
  </entry>
</feed>

