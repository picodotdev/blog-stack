<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-10-11T19:03:09Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-10-11T19:03:09Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>JavaFX Scene Builder, editor para crear archivos FXML</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/10/javafx-scene-builder-editor-para-crear-archivos-fxml" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-10-11T18:00:00Z</updated>
    <published>2015-10-08T22:00:00Z</published>
    <content type="html">&lt;p&gt;Con la aplicación JavaFX Scene Builder podemos construir la interfaz gráfica de una aplicación de escritorio Java de forma más sencilla. JavaFX Scene Builder genera archivos descriptores FXML que podemos cargar en la aplicación evitando la tediosa y no sencilla tarea de construir la interfaz gráfica mediante código. En el artículo comento la aplicación JavaFX Scene Builder, como usar los archivos FXML en una aplicación de escritorio, como asociar manejadores de eventos y como cambiar las propiedades de los controles. Por lo poco que he visto JavaFX es una gran evolución sobre AWT y Swing para desarrollar aplicaciones de escritorio en Java aportando varias mejoras. En el artículo Introducción a JavaFX comentaba que una de las cosas que me parecía más complicada usando tanto AWT y más tarde usando[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/10/javafx-scene-builder-editor-para-crear-archivos-fxml"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-10-08T22:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Introducción a JavaFX, aplicaciones de escritorio en Java</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/10/introduccion-a-javafx-aplicaciones-de-escritorio-en-java" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-10-11T10:00:00Z</updated>
    <published>2015-10-02T17:00:00Z</published>
    <content type="html">&lt;p&gt;Java tiene una fuerte presencia en el ámbito de desarrollo para aplicaciones web, más recientemente ha sido empleado por la plataforma Android. En la misma medida que han crecido las aplicaciones web y móviles nativas las aplicaciones de escritorio han perdido presencia, sin embargo, para ciertos casos son la opción adecuada. Con la aparición de JavaFX aportando varias mejoras sobre Swing o AWT en la plataforma Java se pueden desarrollar aplicaciones de escritorio multiplataforma «ricas». Podemos empezar por el ejemplo Hola Mundo de JavaFX de este artículo. El lenguaje de programación Java es ampliamente usado en el ámbito empresarial destacando la programación de aplicaciones web. Las aplicaciones web se han extendido tanto por su fácil despliegue a los clientes (un navegador basta), un desarrollo[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/10/introduccion-a-javafx-aplicaciones-de-escritorio-en-java"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-10-02T17:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo de multiproyecto con Gradle</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/09/ejemplo-de-multiproyecto-con-gradle" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="tapestry" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-10-04T17:30:00Z</updated>
    <published>2015-09-15T17:00:00Z</published>
    <content type="html">&lt;p&gt;En un proyecto grande podemos tener necesidad de dividir el monolito al menos en varios módulos y yendo un paso más lejos en microservicios. La herramienta de construcción que usemos deberá de facilitarnos automatizar la tarea de construcción del código fuente de cada módulo individual, de todos a la vez o de los microservicios si tienen alguna dependencia compartida. En el artículo y ejemplo explicaré cómo usando Gradle podemos dividir el proyecto en varios módulos. No deja de ser un ejemplo pero es bastante completo y está formado por dos aplicaciones web, una librería de componentes y otra librería con el modelo de persistencia, usa Spring, jOOQ, Tapestry, PostgreSQL, Docker, Liquibase, … Cuando una aplicación o proyecto crece en algún momento podemos tener necesidad de partir el monolito[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/09/ejemplo-de-multiproyecto-con-gradle"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-09-15T17:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Ejemplo del patrón de diseño Builder</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/09/ejemplo-del-patron-de-diseno-builder" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-09-27T14:00:00Z</updated>
    <published>2015-09-27T10:00:00Z</published>
    <content type="html">&lt;p&gt;Construir objetos es una tarea básica en los lenguajes orientados a objetos. En Java, las instancias de una clase se crean con la palabra clave reservada new y un método especial llamado constructor. Al diseñar una clase debemos tener algunas cuestiones para evitar varios constructores telescópicos, evitar constructores que son combinación de varios argumentos opcionales y permitir obtener instancias de objetos con estado válido. Si se nos presentan estas situaciones podemos usar el patrón de diseño Builder que consiste en básicamente en una clase especializada en construir instancias de otra clase que podemos hacer usable con una API fluida y alguna cosa más deseable que explico en el artículo. Al escribir los métodos constructores de instancias de una clase puede ocurrirnos que algunos de[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/09/ejemplo-del-patron-de-diseno-builder"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-09-27T10:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Generar recursos estáticos con wro4j</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/09/generar-recursos-estaticos-con-wro4j" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-09-25T15:00:00Z</updated>
    <published>2015-09-25T15:00:00Z</published>
    <content type="html">&lt;p&gt;Con nuevas tecnologías como less, Sass o CoffeeScript el desarrollo y mantenimiento de una página web medianamente compleja mejora notablemente. Con la librería wro4j en una aplicación Java podemos procesar este tipo de recursos y convertirlos a los equivalentes que saben interpretar los navegadores de forma nativa CSS y JavaScript además de optimizar su tamaño u ofuscarlos. El desarrollo y las tecnologías de las páginas web sigue evolucionando, HTML 5, JavaScript, CSS 3, diseño adaptable (responsive), … Y también surgen nuevas herramientas que hacen el desarrollo más simple o hace que las aplicaciones sean más eficientes. Algunas de estas nuevas tecnologías son less o Sass que permiten producir hojas de estilo CSS utilizando una mejor notación, si la hoja de estilos es grande usar una tecnología[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/09/generar-recursos-estaticos-con-wro4j"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-09-25T15:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Comparativa de acceso rápido y seguro a un elemento de un array unidimensional [PHP]</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/09/comparativa-de-acceso-rapido-y-seguro-a-un-elemento-de-un-array-unidimensional-php" />
    <category term="teoria" />
    <category term="programacion" />
    <category term="php" />
    <category term="codigo" />
    <category term="errores" />
    <category term="time" />
    <category term="error-reporting" />
    <category term="cosas-que-damos-por-hechas" />
    <category term="variable" />
    <category term="graficas" />
    <category term="comparativa" />
    <category term="velocidad" />
    <category term="tiempos" />
    <category term="valor" />
    <category term="acceso" />
    <category term="hash" />
    <category term="tabla" />
    <category term="general" />
    <category term="array" />
    <category term="practica" />
    <category term="ignorar" />
    <category term="indice" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-09-21T08:46:51Z</updated>
    <published>2015-09-21T08:46:51Z</published>
    <content type="html">&lt;p&gt;Nota: Si usas algún Framework PHP, lo más seguro que estas funciones no te sirvan, ya que muchos Frameworks suelen tener cosas parecidas, más o menos completas que hacen lo mismo. Si eres de los que trabajan “a pelo”, estás creándote tu propio framework, tal vez te interese todo esto. Acceso simple a un elemento de un array Esto es una tarea sencilla en PHP, sólo tenemos que poner entre corchetes la clave a la que queremos acceder y podremos acceder a su valor: 1 2 3 &lt;?php $miArray['precio']=12.34; echo $miArray['precio']; Aunque, el problema viene cuando dicha clave no existe, veremos una notificación de PHP indicando que el índice especificado no existe: PHP Notice: Undefined index: precio in /home/pruebas/test.php on line 3 PHP Stack trace: ….. No pasa nada, aquí podemos hacer varias cosas,[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/09/comparativa-de-acceso-rapido-y-seguro-a-un-elemento-de-un-array-unidimensional-php"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-09-21T08:46:51Z</dc:date>
  </entry>
  <entry>
    <title>Aptana Studio, un gran IDE para desarrollo</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/09/aptana-studio-un-gran-ide-para-desarrollo" />
    <category term="html" />
    <category term="blog-stack" />
    <category term="aptana-studio" />
    <category term="programacion" />
    <category term="php" />
    <category term="linux" />
    <category term="gnu" />
    <category term="eclipse" />
    <category term="gpl" />
    <category term="ajax" />
    <category term="programas" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-09-14T13:11:07Z</updated>
    <published>2015-09-14T13:11:07Z</published>
    <content type="html">&lt;p&gt;El artículo de hoy va dedicado a los desarrolladores ya que hablaré de Aptana Studio, una potente IDE, multiplataforma, que es capaz de dar soporte a lenguajes como PHP, Python, Ruby, Ajax y un... La entrada Aptana Studio, un gran IDE para desarrollo aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/09/aptana-studio-un-gran-ide-para-desarrollo"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-09-14T13:11:07Z</dc:date>
  </entry>
</feed>

