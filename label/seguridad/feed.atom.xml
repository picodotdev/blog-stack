<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2016-04-25T09:02:18Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2016-04-25T09:02:18Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Hosting compartido adaptado a los tiempos actuales, moderno y seguro</title>
    <link rel="alternate" href="http://totaki.com/poesiabinaria/2016/04/hosting-compartido-adaptado-a-los-tiempos-actuales-moderno-y-seguro/" />
    <category term="empresas" />
    <category term="container" />
    <category term="php" />
    <category term="historia" />
    <category term="servicios" />
    <category term="seguro" />
    <category term="hhvm" />
    <category term="recomendacion" />
    <category term="seguridad" />
    <category term="docker" />
    <category term="siteground" />
    <category term="web" />
    <category term="maquina" />
    <category term="virtual" />
    <category term="patrocinado" />
    <category term="hosting" />
    <category term="hospedaje" />
    <category term="servidores" />
    <category term="linux" />
    <category term="wordpress" />
    <category term="herramientas" />
    <category term="vps" />
    <category term="evolucion" />
    <category term="general" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2016-04-25T07:50:04Z</updated>
    <published>2016-04-25T07:50:04Z</published>
    <content type="html">&lt;p&gt;Desde que empecé con Internet a mediados de la década de los 90 y mi proveedor de Internet me regaló 5Mb de hospedaje para alojar mi web siempre me ha gustado tener un rinconcito de Internet que fuera mío, para expresarme y compartir mi visión del mundo (me veo ya un poco viejete). Por aquel entonces, el hospedaje, era sólo de archivos HTML con algunas imágenes. Con el paso del tiempo, terminé contratando mi dominio y un hospedaje mejor, con soporte de bases de datos, lenguajes de servidor y muchas cosas más, para hacer tanto mi experiencia como webmaster como la experiencia de mis usuarios un poco mejor. Aunque en todos estos años me he encontrado de todo, y es normal, ya prácticamente he visto evolucionar el mercado del hospedaje web. ¿Mucha lectura? ¡Ve al grano! Este post contiene mucho[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://totaki.com/poesiabinaria/2016/04/hosting-compartido-adaptado-a-los-tiempos-actuales-moderno-y-seguro/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2016-04-25T07:50:04Z</dc:date>
  </entry>
  <entry>
    <title>Cómo hacer un chat punto a punto seguro con openSSL</title>
    <link rel="alternate" href="http://totaki.com/poesiabinaria/2016/04/como-hacer-un-chat-seguro-con-openssl/" />
    <category term="clave" />
    <category term="emisor" />
    <category term="local" />
    <category term="certificado" />
    <category term="seguro" />
    <category term="cliente" />
    <category term="chat" />
    <category term="seguridad" />
    <category term="servidor" />
    <category term="conexion" />
    <category term="servidores" />
    <category term="linux" />
    <category term="receptor" />
    <category term="remota" />
    <category term="mensaje" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2016-04-06T08:24:15Z</updated>
    <published>2016-04-06T08:24:15Z</published>
    <content type="html">&lt;p&gt;¡ Vamos al lío ! Lo que haremos hoy, será iniciar un chat cifrado vía openssl. Para hacer que el chat sea seguro, utilizaremos un certificado openSSL y los componentes s_client y s_server que vienen con la aplicación. Iniciando el servidor Dicho chat será entre un cliente y un servidor. Para ello, primero, tenemos que crear un certificado para el servidor. Por si no queréis leer el otro post, dejo aquí unas pequeñas instrucciones: 1 $ openssl req -x509 -newkey rsa:2048 -keyout clave.pem -out certificado.pem -days 3650 -nodes Nos preguntará una serie de cosas, país, estado, organización, e-mail, y cosas así que debemos rellenar. Tendremos la clave de nuestro certificado en clave.pem y el certificado en sí en certificado.pem. Este certificado será autofirmado, por lo que si lo utilizamos en cualquier[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://totaki.com/poesiabinaria/2016/04/como-hacer-un-chat-seguro-con-openssl/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2016-04-06T08:24:15Z</dc:date>
  </entry>
  <entry>
    <title>Cómo hacer pequeñas operaciones matemáticas al reemplazar texto en Emacs</title>
    <link rel="alternate" href="http://totaki.com/poesiabinaria/2016/03/como-hacer-pequenas-operaciones-matematicas-al-reemplazar-texto-en-emacs/" />
    <category term="programacion" />
    <category term="multiplicaciones" />
    <category term="php" />
    <category term="restas" />
    <category term="seguridad" />
    <category term="expresiones-regulares" />
    <category term="backup" />
    <category term="dump" />
    <category term="lisp" />
    <category term="cuentas" />
    <category term="copia" />
    <category term="sustituciones" />
    <category term="wordpress" />
    <category term="mayusculas" />
    <category term="facil" />
    <category term="general" />
    <category term="texto" />
    <category term="divisiones" />
    <category term="reemplazo" />
    <category term="regulares" />
    <category term="expresiones" />
    <category term="numeros" />
    <category term="migracion" />
    <category term="mysql" />
    <category term="aritmetica" />
    <category term="siguiente" />
    <category term="emacs" />
    <category term="sumas" />
    <category term="ejemplo" />
    <category term="editor" />
    <category term="minusculas" />
    <category term="regexp" />
    <category term="practico" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2016-03-23T09:50:42Z</updated>
    <published>2016-03-23T09:50:42Z</published>
    <content type="html">&lt;p&gt;Me encanta Emacs, y como me encanta Emacs, no paro de aprender todos los días cosas nuevas. Una de esas cosas nuevas, que más me ha llamado la atención es, como dice el título, la posibilidad de hacer pequeñas operaciones matemáticas al reemplazar texto en Emacs. En concreto, dentro de las expresiones regulares. Esto, en la práctica serán sumas o restas, o cualquier operación que podemos hacer a los números que encontramos en una expresión regular. Aunque, si nos lo curramos mucho, podremos hacer muchas más cosas (y muy interesantes) Para más información con las expresiones regulares y con cómo utilizarlas en Emacs, pulsar sobre los enlaces que acabo de poner. Lo básico Cuando queremos buscar y reemplazar texto en Emacs, lo hacemos de la siguiente manera: M-x replace-string Escribimos el texto[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://totaki.com/poesiabinaria/2016/03/como-hacer-pequenas-operaciones-matematicas-al-reemplazar-texto-en-emacs/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2016-03-23T09:50:42Z</dc:date>
  </entry>
  <entry>
    <title>Cómo firmar correos electrónicos con GPG y JavaMail</title>
    <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/03/como-firmar-correos-electronicos-con-gpg-y-javamail/" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="seguridad" />
    <category term="java" />
    <category term="planeta-linux" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2016-03-19T09:00:00Z</updated>
    <published>2016-03-19T09:00:00Z</published>
    <content type="html">&lt;p&gt;El correo electrónico es un medio muy utilizado para realizar ataques de phising, algunos son muy burdos pero seguramente algunos usuarios sin muchos conocimientos caen víctimas de ellos y aún los usuarios con conocimientos también pueden serlo si están bien realizados y muestran un correo electrónico exactamente igual que el que intentan suplantar. Los usuarios son las víctimas pero si los sitios web que envían los correos electrónicos legítimos los firmasen digitalmente sería una garantía más para proteger a sus usuarios, pudiendo detectar de otra forma el spam y phising. En este artículo muestro a modo de ejemplo como firmar un correo electrónico con GPG y JavaMail e igualmente podría utilizarse para cifrarlo, aunque usar DKIM sería lo más apropiado. Los sitios de comercio electrónico y[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://picodotdev.github.io/blog-bitix/2016/03/como-firmar-correos-electronicos-con-gpg-y-javamail/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2016-03-19T09:00:00Z</dc:date>
  </entry>
  <entry>
    <title>Cifrar y descifrar un archivo fácilmente con openSSL</title>
    <link rel="alternate" href="http://totaki.com/poesiabinaria/2016/03/cifrar-y-descifrar-un-archivo-facilmente-con-openssl/" />
    <category term="desencriptar" />
    <category term="argumentos" />
    <category term="codificar" />
    <category term="bits" />
    <category term="openssl" />
    <category term="cifrar" />
    <category term="seguridad" />
    <category term="algoritmos" />
    <category term="servidores" />
    <category term="des" />
    <category term="aes" />
    <category term="encriptar" />
    <category term="howto" />
    <category term="ejemplos" />
    <category term="base64" />
    <category term="decodificar" />
    <category term="descifrar" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2016-03-16T09:59:31Z</updated>
    <published>2016-03-16T09:59:31Z</published>
    <content type="html">&lt;p&gt;Queremos cifrar (o como queráis, codificar, encriptar…) un documento rápidamente desde la consola, con la posibilidad de que pueda ser descifrado. Por ejemplo, nos puede servir para transmitir por e-mail (o un chat) un archivo confidencial, para almacenar elementos privados en la nube, o para que alguien no se entere del contenido de un archivo. Guía rápida Para codificar un archivo: 1 $ openssl aes-256-cbc -in mi_archivo -pass pass:passw0rd -out mi_archivo.enc y para decodificar: 1 $ openssl aes-256-cbc -d -in mi_archivo.enc -pass pass:passw0rd -out mi_archivo Explicación El primer argumento es el algoritmo de cifrado/descifrado, podéis encontrar algoritmos como aes, des, base64 y muchos más. Ejecutando “openssl help” podemos ver los algoritmos de cifrado (cypher commands) disponibles. El[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://totaki.com/poesiabinaria/2016/03/cifrar-y-descifrar-un-archivo-facilmente-con-openssl/"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2016-03-16T09:59:31Z</dc:date>
  </entry>
  <entry>
    <title>Pequeños pingüinos: Permisos y umask</title>
    <link rel="alternate" href="https://www.etccrond.es/2016/02/pequenos-pinguinos-permisos-y-umask.html" />
    <category term="utilidades" />
    <category term="linux" />
    <category term="pequenos-pinguinos" />
    <category term="tutoriales" />
    <category term="seguridad" />
    <category term="novatos" />
    <category term="entradas" />
    <author>
      <name>Eugenio M. Vigo</name>
    </author>
    <updated>2016-03-10T11:04:05Z</updated>
    <published>2016-02-22T10:00:41Z</published>
    <content type="html">&lt;p&gt;Hace un tiempo, publiqué una entrada en la que explicaba cómo se utilizan los permisos UNIX en el sistema de archivos de cualquier distribución Linux. Ahora bien, allí explicaba que la forma de asignar los permisos usando la terminal es… Continuar leyendo →[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.etccrond.es/2016/02/pequenos-pinguinos-permisos-y-umask.html"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Eugenio M. Vigo</dc:creator>
    <dc:date>2016-02-22T10:00:41Z</dc:date>
  </entry>
  <entry>
    <title>Fallo aquí, fallo allá, maquíllate, maquíllate</title>
    <link rel="alternate" href="https://www.etccrond.es/2016/01/fallo-aqui-fallo-alla-maquillate_22.html" />
    <category term="noticias" />
    <category term="linux" />
    <category term="seguridad" />
    <category term="entradas" />
    <author>
      <name>Eugenio M. Vigo</name>
    </author>
    <updated>2016-03-10T11:04:05Z</updated>
    <published>2016-01-22T10:00:00Z</published>
    <content type="html">&lt;p&gt;Seamos honestos: llevamos una semana con noticias de vulnerabilidades de seguridad que nos han obligado a salir corriendo a actualizar nuestros sistemas en todas las distribuciones Linux y algunos hemos sufrido un poco de los nervios cada vez que a… Continuar leyendo →[...]&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.etccrond.es/2016/01/fallo-aqui-fallo-alla-maquillate_22.html"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Eugenio M. Vigo</dc:creator>
    <dc:date>2016-01-22T10:00:00Z</dc:date>
  </entry>
</feed>

