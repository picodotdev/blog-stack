<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-07-28T18:02:29Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-07-28T18:02:29Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Cheat Sheets de Análisis Forense en la Terminal</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/cheat-sheets-de-analisis-forense-en-la-terminal" />
    <category term="forense" />
    <category term="cheats" />
    <category term="seguridad" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-28T17:21:06Z</updated>
    <published>2015-07-28T17:21:06Z</published>
    <content type="html">&lt;p&gt;Como había comentado hace un tiempo en un Post similar, no hay manera de que recordemos todos los comandos, opciones y demás de muchas herramientas que usamos en la terminal. Así que siempre es bueno tener algo donde consultar rápidamente para refrescar la memoria. Pues hace unos días , para ampliar los conocimientos, entré en el mundo del análisis Forense y realmente me ha gustado mucho y me he dado cuenta que son muchas las herramientas y demás que debemos conocer. Muchos conocen el proyecto de Snifer de los CheatSheet de Seguridad en la terminal y del que hablé aquí en el Blog, Pues de la misma manera he iniciado un proyecto similar para el área de Análisis Forense, donde pretendo recopilar un listado de cheatsheets de herramientas y procedimientos para que nos asistan cuando llevemos a[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/cheat-sheets-de-analisis-forense-en-la-terminal"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-28T17:21:06Z</dc:date>
  </entry>
  <entry>
    <title>Seguridad en Aplicaciones #DevTalks #ITTalks</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/seguridad-en-aplicaciones-devtalks-ittalks" />
    <category term="web" />
    <category term="devtalks" />
    <category term="ittalks" />
    <category term="generales" />
    <category term="seguridad" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T20:23:03Z</updated>
    <published>2015-07-22T20:23:03Z</published>
    <content type="html">&lt;p&gt;Como antes habíamos hablado, no importa los controles perimetrales que coloquemos, si tenemos una aplicación vulnerable publicada, es como si dejáramos la puerta abierta a un malintencionado. Es de suma importancia que le pongamos mucha atención a la Seguridad en nuestras aplicaciones y que se fomente eldesarrollo seguro en las organizaciones. Acompáñanos a este Hangout donde Mi Persona @Jsitech y Jose Moruno Cadima @SniferL4bs, estaremos junto a Eugenia Bahit @eugeniabahit, hablando sobre Seguridad en Aplicaciones. Hablaremos sobre los puntos importantes que debemos tener en cuenta y algunas recomendaciones. La cita es el Viernes 14 de Agosto 2015, a las 8:00PM (GMT-04) Pueden Visitar la Página del Evento No se lo pierdan, Links de Interés Canal IT-Talks Site IT-Talks[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/seguridad-en-aplicaciones-devtalks-ittalks"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T20:23:03Z</dc:date>
  </entry>
  <entry>
    <title>Comprometiendo Sistemas en Otros Segmento de Red Mediante Pivoting con Metasploit</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/comprometiendo-sistemas-en-otros-segmento-de-red-mediante-pivoting-con-metasploit" />
    <category term="metasploit" />
    <category term="ethical-hacking" />
    <category term="seguridad" />
    <category term="pivoting" />
    <category term="meterpreter" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T16:09:22Z</updated>
    <published>2015-07-22T16:09:22Z</published>
    <content type="html">&lt;p&gt;En una prueba de penetración es posible que nos encontremos con más de un segmento de red y a los cuales no tenemos acceso por cualquier razón, aún cuando comprometemos un sistemas de nuestro lado es imposible llegar a esos segmentos y es en estos casos que el Pivoting nos ayuda. Pivoting es un método que podemos usar en Meterpreter que nos permite atacar otros sistemas en la misma red o en un segmento diferente, en los casos que el sistema tenga acceso a ella, a través de la consola de Meterpreter. Para que entendamos mejor la idea, si durante una prueba de penetración logramos comprometer un sistema, y necesitamos adentrarnos más en la red, podríamos usar ese sistema o equipo para acceder a otros equipos de la red o llevar a cabo a ataques a múltiples sistemas. Vamos a verlo en la práctica[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/comprometiendo-sistemas-en-otros-segmento-de-red-mediante-pivoting-con-metasploit"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T16:09:22Z</dc:date>
  </entry>
  <entry>
    <title>Recogida de Información con Snitch usando Dorks</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/recogida-de-informacion-con-snitch-usando-dorks" />
    <category term="ethical-hacking" />
    <category term="infogathering" />
    <category term="snitch" />
    <category term="seguridad" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T15:57:01Z</updated>
    <published>2015-07-22T15:57:01Z</published>
    <content type="html">&lt;p&gt;Hoy me he topado con un proyecto muy reciente que creo nos puede ser útil en una labor de Penetration Testing. Como sabemos una de las fases que ejecutamos es la de recogida de información y unas de las herramientas que usamos en los casos de estar auditando un Dominio es el mismo buscador de Google por ejemplo, haciendo uso de los Dorks. Pues el proyecto que les menciono es una herramienta en Python que automatiza un poco este proceso y se llama Snitch. Snitch es una herramienta que automatiza el proceso de recogida de información de un dominio. Usa categorías de Dork ya integrada en la herramienta y son utilizadas para recoger información de un dominio que usualmente lo encontraríamos usando los motores de búsqueda. Para obtener la herramienta solo tenemos que clonar el repo $ git clone https://github.com/Smaash/snitch[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/recogida-de-informacion-con-snitch-usando-dorks"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T15:57:01Z</dc:date>
  </entry>
  <entry>
    <title>Evadiendo Antivirus con Shellter en Kali Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/evadiendo-antivirus-con-shellter-en-kali-linux" />
    <category term="evasion" />
    <category term="metasploit" />
    <category term="shellter" />
    <category term="ethical-hacking" />
    <category term="seguridad" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T15:51:52Z</updated>
    <published>2015-07-22T15:51:52Z</published>
    <content type="html">&lt;p&gt;Casi en todos los casos cuando estamos en Labores de Pentesting, uno de nuestros dolores de cabeza son esos antivirus. Nos valemos de muchas herramientas para crear los payloads ejecutables, como veil, msfvenom y otros, cruzando los dedos para que el Antivirus no nos recoja en el proceso. Aunque es posible evadirlos, siempre lleva tiempo lograrlo. Pues el día de hoy he conocido una herramienta que nos asiste con esto, y debo decir que es bastante efectiva, estoy hablando de Shellter. Shellter es una herramienta de inyección de código dinámico. Puede ser utilizado para inyectar código en aplicaciones de Windows, actualmente solo para aplicaciones de 32 bits. Este usa un acercamiento dinámico único basada en el flujo de ejecución de la aplicación que vamos a inyectar. Características Compatible[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/evadiendo-antivirus-con-shellter-en-kali-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T15:51:52Z</dc:date>
  </entry>
  <entry>
    <title>Obteniendo Contraseñas de un Equipo Windows con Veil y Metasploit</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/obteniendo-contrasenas-de-un-equipo-windows-con-veil-y-metasploit" />
    <category term="metasploit" />
    <category term="ethical-hacking" />
    <category term="seguridad" />
    <category term="veil" />
    <category term="meterpreter" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T15:41:19Z</updated>
    <published>2015-07-22T15:41:19Z</published>
    <content type="html">&lt;p&gt;Hace un tiempo que no publicaba artículos de Hacking, pero arrancamos nuevamente con ellos. Hoy vamos a ver como podemos obtener contraseñas de Login de un equipo Windows, y las demás utilizadas en el equipo. Para esto vamos vamos a utilizar Veil-Evasion y Metasploit. Ambiente: PC con Windows 10.0.0.8 Kali Linux 10.0.0.9 Lo primero es que vamos a crear un pequeño script PowerShell que son bastante efectivos ya que no disparan el antivirus y lo vamos a crear con Veil-Evasion En Caso de que no cuente con Veil-Evasion, lo pueden clonar. $ git clone https://github.com/Veil-Framework/Veil-Evasion Acceden a la carpeta y ejecutan Veil-Evasion.py $ ./Veil-Evasion.py Ejecutamos list y tendremos una lista de Payloads. [menu&gt;&gt;]: list Vamos a Elejir el 20 20) powershell/meterpreter/rev_http En la Próxima[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/obteniendo-contrasenas-de-un-equipo-windows-con-veil-y-metasploit"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T15:41:19Z</dc:date>
  </entry>
  <entry>
    <title>JackTheStripper y sus nuevas Mejoras</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/07/jackthestripper-y-sus-nuevas-mejoras" />
    <category term="linux" />
    <category term="seguridad" />
    <category term="software-libre" />
    <category term="jackthestripper" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-07-22T15:23:11Z</updated>
    <published>2015-07-22T15:23:11Z</published>
    <content type="html">&lt;p&gt;Tenía un tiempo que no trabajaba con el viejo Jack, por trabajo y demás. Lo que si es que en este mundo de la Seguridad y Administración de Sistemas, tenemos muchas experiencias, vemos y nos topamos con debilidades de seguridad, esto me lleva siempre a ir anotando las mejoras y las ideas que van llegando a mi cabeza para reducir lo más posible la superficie de exposición de un servidor de Linux. Pues pude sacar un tiempo y ahora les voy a comentar lo que hemos agregado a la herramienta y algunas cosas que debemos tener pendientes. Si no conoces el proyecto de JackTheStripper, date un vuelta por aquí. Por el momento los cambios están para las versiones de Ubuntu Server 14.04LTS y 15.04LTS, pero iré actualizando las otras versiones y de la misma manera el post para que estén informados. Hablemos[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/07/jackthestripper-y-sus-nuevas-mejoras"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-07-22T15:23:11Z</dc:date>
  </entry>
</feed>

