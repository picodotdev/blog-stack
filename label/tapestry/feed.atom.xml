<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-03-30T18:00:41Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-03-30T18:00:41Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Productividad y errores de compilación con Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2015/03/productividad-y-errores-de-compilacion-con-apache-tapestry" />
    <category term="programacion" />
    <category term="blog-stack" />
    <category term="tapestry" />
    <category term="java" />
    <category term="planeta-codigo" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2015-03-28T21:30:00Z</updated>
    <published>2015-03-27T18:13:12Z</published>
    <content type="html">&lt;p&gt;Hace ya unos años comentaba varios motivos para elegir Apache Tapestry como framework para desarrollar una aplicación o página web. Entre las varias razones comentaba la productividad como característica destacada. Uno de los motivos es esta productividad era por la alta reutilización de código que se puede conseguir al usar los componentes múltiples veces en un mismo proyecto o en diferentes proyectos creando una librería de componentes como comento más detalladamente en el libro PugIn Tapestry. Otra parte de la productividad que comentaba más ligeramente era poder detectar de forma rápida errores de compilación no solo en el código Java a través del IDE sino porque con Tapestry es posible detectar errores de compilación en todas las plantillas tml que generan el html fácil y rápidamente con[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2015/03/productividad-y-errores-de-compilacion-con-apache-tapestry"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2015-03-27T18:13:12Z</dc:date>
  </entry>
  <entry>
    <title>Actualización del libro PlugIn Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/08/actualizacion-del-libro-plugin-tapestry" />
    <category term="blog-stack" />
    <category term="programacion" />
    <category term="java" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="tapestry" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-08-29T22:16:10Z</updated>
    <published>2014-08-29T22:16:10Z</published>
    <content type="html">&lt;p&gt;Hace un poco más de una año publiqué el libro PlugIn Tapestry que como su nombre ya adelanta versa sobre el framework Apache Tapestry para el desarrollo de aplicaciones y páginas web con Java. Casi 300 páginas de documentación que describen este framework, como usarlo y va más allá explicando como realizar algunas de las tareas comunes que es necesario hacer en casi todas las aplicaciones web independientemente del framework que elijamos pero en este caso visto desde el punto de vista de Tapestry. En esta actualización he revisado capítulos como el Inicio rápido para empezar a desarrollar en unos pocos minutos, la sección que trata sobre Plantillas para dar a las páginas un aspecto común, la sección que trata sobre unas Convenciones para los archivos de literales, ampliada la sección de Principios[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/08/actualizacion-del-libro-plugin-tapestry"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-08-29T22:16:10Z</dc:date>
  </entry>
  <entry>
    <title>Doble barra de botones con Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/08/doble-barra-de-botones-con-apache-tapestry" />
    <category term="blog-stack" />
    <category term="programacion" />
    <category term="java" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="tapestry" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-08-29T11:04:52Z</updated>
    <published>2014-08-29T11:04:52Z</published>
    <content type="html">&lt;p&gt;Por motivos de usabiliad en algunas páginas se incluyen dos barra de botones, una antes de una larga sección y otra después. El motivo de la doble barra de botones inicial es que no sea necesario hacer «scroll» hasta el final de la página para acceder a los botones y realizar la acción que permitan. Por el contrario, inlcuir la barra de botones al final de la página permite que una vez seleccionados los elementos o revisado el contenido de la sección hacer disponibles las acciones que es probable que se quieran realizar. Dependiendo del framework web que utilicemos podremos hacerlo de una o varias formas pero de lo que estamos seguros es que copiar y pegar haciendo que el código esté duplicado no es una buena idea por los problemas de mantenimiento que puede suponer. Pero crear una pequeña[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/08/doble-barra-de-botones-con-apache-tapestry"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-08-29T11:04:52Z</dc:date>
  </entry>
  <entry>
    <title>Forzar el uso del protocolo https en Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/08/forzar-el-uso-del-protocolo-https-en-apache-tapestry" />
    <category term="blog-stack" />
    <category term="programacion" />
    <category term="java" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="tapestry" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-08-22T09:09:23Z</updated>
    <published>2014-08-22T09:09:23Z</published>
    <content type="html">&lt;p&gt;El protocolo seguro https hace que los datos que viajan entre el servidor y el cliente a través de internet estén cifrados de modo que nadie más pueda saber cual es es la información intercambiada ni se pueda alterar sin el conocimiento entre las dos partes. Estas propiedades nos son de interés para ciertas partes de una aplicación o en algunos casos la aplicación entera. ¿Cuales son estos casos? Son aquellos en los que queramos garantizar una mayor seguridad, estos pueden ser para proteger usuarios y contraseñas de autenticación para iniciar sesión, ciertos datos sensibles como datos personales, datos de tarjetas de crédito, … evitando que una tercera parte los obtenga y los utilice para su provecho propio y supongan un problema de seguridad en la aplicación. Es casi obligatorio forzar a que[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/08/forzar-el-uso-del-protocolo-https-en-apache-tapestry"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-08-22T09:09:23Z</dc:date>
  </entry>
  <entry>
    <title>Usar Apache Tapestry en una aplicación «standalone»</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/07/usar-apache-tapestry-en-una-aplicacion-standalone" />
    <category term="blog-stack" />
    <category term="programacion" />
    <category term="java" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="tapestry" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-07-31T11:06:58Z</updated>
    <published>2014-07-31T11:06:58Z</published>
    <content type="html">&lt;p&gt;Apache Tapestry es un framework de desarrollo para aplicaciones o páginas web en el que habitualmente se emplea el lenguaje Java y se despliega en un servidor de aplicaciones como entorno de ejecución. Pero Tapestry es una pieza de software que se compone de diferentes partes algunas de las cuales pueden ser utilizadas fuera del contexto de una aplicación web. Este es el caso del contenedor de dependencias que proporciona IoC (IoC, «Inversion of Control») en Tapestry, podemos usarlo en una aplicación «standalone», es decir, en un programa que se inicia con el típico «public static void main(String[] args)» de las aplicaciones Java. El contenedor de dependencias de Tapestry tiene algunas propiedades interesantes como que dos servicios pueden ser mutuamente dependientes y que se puede contribuir[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/07/usar-apache-tapestry-en-una-aplicacion-standalone"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-07-31T11:06:58Z</dc:date>
  </entry>
  <entry>
    <title>Servir recursos estáticos desde un CDN en Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry" />
    <category term="blog-stack" />
    <category term="programacion" />
    <category term="java" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="tapestry" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-07-26T19:00:00Z</updated>
    <published>2014-07-26T10:35:50Z</published>
    <content type="html">&lt;p&gt;Un Content Delivery Network (CDN) no es más que un servidor, servidores o servicio dedicado a servir el contenido estático o actuar de cache para los clientes. Alguno de los motivos por los que podríamos querer usar un CDN en una aplicación son: Algunos servicios CDN están repartidos geográficamente por el mundo de modo que el contenido sea servido de un lugar más cercano al usuario esto hace que el tiempo que tarda en cargar un página o servirse el contenido sea menor. Descargar la tarea de servir al menos parte del contenido de la aplicación al CDN hará que no nos tengamos que preocupar de tener la capacidad para servirlo. Cuando se cargar una página se hacen varias peticiones al servidor para obtener el contenido como el html, imágenes, estilos, … haciendo que los contenidos estáticos sean[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-07-26T10:35:50Z</dc:date>
  </entry>
  <entry>
    <title>Anotación Cached de Apache Tapestry</title>
    <link rel="alternate" href="http://www.blogstack.info/post/blogbitix/2014/07/anotacion-cached-de-apache-tapestry" />
    <category term="blog-stack" />
    <category term="programacion" />
    <category term="java" />
    <category term="planeta-codigo" />
    <category term="software" />
    <category term="tapestry" />
    <author>
      <name>pico.dev</name>
    </author>
    <updated>2014-07-19T19:00:00Z</updated>
    <published>2014-07-18T19:30:20Z</published>
    <content type="html">&lt;p&gt;Como he comentado en un artículo anterior sobre los modelos push y pull empleados en los motores de plantillas donde comentaba algunas diferencias entre ellos, en el modelo pull es la vista la que pide los datos al controlador y no el controlador el que proporciona los datos a la vista como se hace en el modelo push. Un problema que puede plantear el que la vista pida los datos al controlador es que si la devolución de los datos solicitados son costosos en tiempo del cálculo, carga para el sistema en CPU o memoria, o intensivos en entrada/salida de disco o red y se piden varias veces puede suponer como resultado que el tiempo empleado para generar la página sea elevado o la aplicación consuma recursos innecesarios. Apache Tapestry que emplea el modelo pull dispone de la anotación Cached que[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/blogbitix/2014/07/anotacion-cached-de-apache-tapestry"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>pico.dev</dc:creator>
    <dc:date>2014-07-18T19:30:20Z</dc:date>
  </entry>
</feed>

