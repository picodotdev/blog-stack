<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2015-06-17T02:02:15Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2015-06-17T02:02:15Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Jugando con la API de OpenWeatherMaps</title>
    <link rel="alternate" href="http://www.blogstack.info/post/elblogdeabr4xas/2015/06/jugando-con-la-api-de-openweathermaps" />
    <category term="php" />
    <category term="api" />
    <category term="json" />
    <author>
      <name>abr4xas</name>
    </author>
    <updated>2015-06-15T15:50:00Z</updated>
    <published>2015-06-15T15:50:00Z</published>
    <content type="html">&lt;p&gt;OpenWeatherMap service provides open weather data for more than 200,000 cities and any geo location that is available on our web-site and through API. Ideology of our service is inspired by OpenStreetMap and Wikipedia that make information free and available for everybody. OpenWeatherMap provides wide range of weather data including current weather, forecast, precipitations, wind, clouds, data from weather stations, lots of maps, analytics and many others. We have own model of weather calculation that involves global meteorological broadcast data, own WRF calculation for regions and real-time data from more than 40,000 weather stations. http://openweathermap.org/ Entonces, que necesitamos para obtener info sobre el clima en la ciudad? URL del API de OWM Saber un poquito de PHP Juguemos ᕕ( ᐛ[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/elblogdeabr4xas/2015/06/jugando-con-la-api-de-openweathermaps"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>abr4xas</dc:creator>
    <dc:date>2015-06-15T15:50:00Z</dc:date>
  </entry>
  <entry>
    <title>Instalar WordPress en Debian Jessie</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/05/instalar-wordpress-en-debian-jessie" />
    <category term="lemp" />
    <category term="web" />
    <category term="sistemas" />
    <category term="blog-stack" />
    <category term="php" />
    <category term="mariadb" />
    <category term="wordpress" />
    <category term="mysql" />
    <category term="nginx" />
    <category term="lamp" />
    <category term="programas" />
    <author>
      <name>davidochobits</name>
    </author>
    <updated>2015-05-19T13:55:42Z</updated>
    <published>2015-05-19T13:55:42Z</published>
    <content type="html">&lt;p&gt;A nadie se le escapa que WordPress es el CMS más utilizado, con permiso de otros como Drupal o Joomla. En el artículo de hoy veremos como instalarlo en un sistema operativo GNU Linux,... La entrada Instalar WordPress en Debian Jessie aparece primero en ochobitshacenunbyte.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2015/05/instalar-wordpress-en-debian-jessie"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>davidochobits</dc:creator>
    <dc:date>2015-05-19T13:55:42Z</dc:date>
  </entry>
  <entry>
    <title>Debilidad Comparación de Hash – PHP</title>
    <link rel="alternate" href="http://www.blogstack.info/post/jsitech/2015/05/debilidad-comparacion-de-hash-php" />
    <category term="noticias" />
    <category term="php" />
    <category term="seguridad" />
    <category term="software-libre" />
    <author>
      <name>Jason Soto</name>
    </author>
    <updated>2015-05-09T19:11:36Z</updated>
    <published>2015-05-09T19:11:36Z</published>
    <content type="html">&lt;p&gt;Como siempre, todos los días dedico un tiempo para actualizarme sobre diferentes temas en el área de la Seguridad informática. Pues hoy me he topado con un artículo bastante interesante en uno de los sites que visito a diario y es referente a una debilidad en la forma en que PHP compara los Hashes. La debilidad reside en la manera en que PHP maneja los Strings hasheados en ciertas condiciones, esto le da a un atacante la oportunidad de intentar comprometer sistemas de autenticación, Contraseñas, o cualquier otra función que involucre una comparación de hash en PHP. La falla mayormente afecta las autenticaciones, pero puede afectar, flujos de olvido de contraseñas, chequeo binario, cookies, entre otras cosas, Según Robert Hansen, vice presidente de WhiteHat Security, dependerá totalmente del[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/jsitech/2015/05/debilidad-comparacion-de-hash-php"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Jason Soto</dc:creator>
    <dc:date>2015-05-09T19:11:36Z</dc:date>
  </entry>
  <entry>
    <title>Creando un modelo sencillo en Magento (paso a paso y con ejemplos)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/04/creando-un-modelo-sencillo-en-magento-paso-a-paso-y-con-ejemplos" />
    <category term="upgrade" />
    <category term="install" />
    <category term="php" />
    <category term="utilizacion" />
    <category term="recursos" />
    <category term="mysql" />
    <category term="datos" />
    <category term="sql" />
    <category term="sistema" />
    <category term="conexion" />
    <category term="creacion" />
    <category term="mvc" />
    <category term="base" />
    <category term="colecciones" />
    <category term="instalacion" />
    <category term="orm" />
    <category term="actualizacion" />
    <category term="general" />
    <category term="modelo" />
    <category term="magento" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-04-21T08:51:50Z</updated>
    <published>2015-04-21T08:51:50Z</published>
    <content type="html">&lt;p&gt;Anteriormente vimos cómo crear un plugin para Magento y cómo crear un controlador para Magento. Ahora le toca el turno al modelo. Intentaré poner con todo detalle todo el proceso. Por eso, vamos a editar app/code/local/NuestraEmpresa/nuestroPlugin/etc/config.xml, en nuestro ejemplo app/code/local/Poesia/HolaMundo/etc/config.xml para indicar que vamos a crear modelos y las conexiones de base de datos que se deben utilizar para el acceso. He pegado el archivo entero, pero indico con un comentario las novedades: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!-- Opcionalmente podemos[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/04/creando-un-modelo-sencillo-en-magento-paso-a-paso-y-con-ejemplos"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-04-21T08:51:50Z</dc:date>
  </entry>
  <entry>
    <title>Creando un controlador en Magento (paso a paso)</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/04/creando-un-controlador-en-magento-paso-a-paso" />
    <category term="vista" />
    <category term="crear" />
    <category term="php" />
    <category term="acciones" />
    <category term="online" />
    <category term="plantilla" />
    <category term="xml" />
    <category term="empresa" />
    <category term="mvc" />
    <category term="action" />
    <category term="controller" />
    <category term="general" />
    <category term="modelo" />
    <category term="tienda" />
    <category term="renderlayout" />
    <category term="disposicion" />
    <category term="layout" />
    <category term="opciones" />
    <category term="configurar" />
    <category term="loadlayout" />
    <category term="controlador" />
    <category term="modulo" />
    <category term="camelcase" />
    <category term="nombres" />
    <category term="frontend" />
    <category term="minusculas" />
    <category term="magento" />
    <category term="plugin" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-04-13T08:05:40Z</updated>
    <published>2015-04-13T08:05:40Z</published>
    <content type="html">&lt;p&gt;Hace un tiempo comentábamos cómo crear un plugin para Magento. Ahora, vamos a completar ese plugin creando un controlador (y nos metermos ligeramente con las plantillas) para crear algo funcional dentro de nuestra instalación de Magento. Antes de nada, advertir que el tema de las mayúsculas y minúsculas tanto en nombres de archivos como nombres de módulos es un poco delicado, por lo que si queremos curarnos en salud, debemos elegir un nombre lo más sencillo posible. Y, sobre todo, mientras estés trabajando desactiva cachés o, al menos, bórralos a menudo. Vamos a estar haciendo cambios constantemente y tal vez no aparezcan por eso. Creando un controlador Esta es la parte más sencilla. Sólo tenemos que crear en el directorio de nuestro plugin el directorio “controllers” en minúscula. Si en el[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/04/creando-un-controlador-en-magento-paso-a-paso"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-04-13T08:05:40Z</dc:date>
  </entry>
  <entry>
    <title>Borrar la caché de Magento desde la línea de comandos</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/03/borrar-la-cache-de-magento-desde-la-linea-de-comandos" />
    <category term="linea" />
    <category term="borrar" />
    <category term="comandos" />
    <category term="consola" />
    <category term="php" />
    <category term="programar" />
    <category term="productos" />
    <category term="actualizar" />
    <category term="cron" />
    <category term="script" />
    <category term="terminal" />
    <category term="magento" />
    <category term="cache" />
    <category term="cli" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-03-20T09:19:18Z</updated>
    <published>2015-03-20T09:19:18Z</published>
    <content type="html">&lt;p&gt;Foto: Steve Jurvetson (Flickr CC) Cuando estás haciendo muchos cambios en una instalación de Magento, debes borrar la caché a menudo. Un caso especial es si utilizas scripts periódicos para actualizar listas de precios o stock, en ese caso debes programar también el borrado de cachés. Este pequeño script ha sido visto en muchas webs por lo que no me extenderé mucho y mencionaré dos fuentes donde podéis consultarlo (os invito a visitar estas páginas porque amplían la información que veis aquí). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 &lt;?php echo "Start Cleaning all caches at ... " . date("Y-m-d H:i:s") . "\n\n"; ini_set("display_errors", 1); require '../app/Mage.php'; Mage::app('admin')-&gt;setUseSessionInUrl(false); Mage::getConfig()-&gt;init(); $types = Mage::app()-&gt;getCacheInstance()-&gt;getTypes();[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/03/borrar-la-cache-de-magento-desde-la-linea-de-comandos"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-03-20T09:19:18Z</dc:date>
  </entry>
  <entry>
    <title>Cómo encontrar la ruta de un elemento dentro de una jerarquía en PHP</title>
    <link rel="alternate" href="http://www.blogstack.info/post/poesiabinaria/2015/03/como-encontrar-la-ruta-de-un-elemento-dentro-de-una-jerarquia-en-php" />
    <category term="ruta" />
    <category term="php" />
    <category term="nusqueda" />
    <category term="arriba" />
    <category term="padre" />
    <category term="buscar" />
    <category term="linares" />
    <category term="breadcrumb" />
    <category term="jerarquia" />
    <category term="findpath" />
    <category term="hijo" />
    <category term="provincias" />
    <category term="malaga" />
    <category term="encontrar" />
    <category term="jaen" />
    <category term="pagina" />
    <category term="buildtree" />
    <category term="camino" />
    <category term="arbol" />
    <author>
      <name>Gaspar Fernández</name>
    </author>
    <updated>2015-03-16T09:31:53Z</updated>
    <published>2015-03-16T09:31:53Z</published>
    <content type="html">&lt;p&gt;Hace poco, hablábamos de cómo generar un array que contuviera una jerarquía de elementos, vimos cómo podíamos generarlo de forma muy rápida una vez tenemos todos los elementos en una lista en la que previamente indicamos el padre de cada uno de ellos. El problema hoy es algo distinto, tenemos esa jerarquía o árbol, y queremos encontrar la ruta hacia arriba, es decir, todos los elementos por los que tenemos que pasar para llegar hasta un elemento dado. Puede ser útil cuando estén visitando nuestra página y accedan a algún elemento interior tras el cual queremos mostrar unas migas de pan o breadcrumbs (para ello tenemos que saber todo lo que hay por encima de la categoría actual). Como ejemplo, vamos a hacer una jerarquía con paises / comunidades autónomas / provincias / ciudades y vamos a buscar[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/poesiabinaria/2015/03/como-encontrar-la-ruta-de-un-elemento-dentro-de-una-jerarquia-en-php"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>Gaspar Fernández</dc:creator>
    <dc:date>2015-03-16T09:31:53Z</dc:date>
  </entry>
</feed>

