<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title>Blog Stack</title>
  <link rel="alternate" href="http://www.blogstack.info" />
  <subtitle>Un poco más que un agregador/planeta de bitácoras sobre programación, desarrollo, software libre, gnu/linux, tecnología, ...</subtitle>
  <updated>2016-02-09T12:03:37Z</updated>
  <dc:creator>Blog Stack</dc:creator>
  <dc:date>2016-02-09T12:03:37Z</dc:date>
  <dc:language>es</dc:language>
  <entry>
    <title>Primeros pasos con Docker</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2016/02/primeros-pasos-con-docker" />
    <category term="virtualizacion" />
    <category term="general" />
    <category term="docker" />
    <author>
      <name>admin</name>
    </author>
    <updated>2016-02-09T11:38:31Z</updated>
    <published>2016-02-09T11:38:31Z</published>
    <content type="html">&lt;p&gt;En una entrada anterior, veíamos los fundamentos de docker, y repasábamos los principales componentes de la arquitectura de docker: El cliente de Docker es la principal interfaz de usuario para docker, acepta los comandos del usuario y se comunica con el daemon de docker. Imágenes de Docker (Docker Images): Las imágenes de Docker son plantillas de solo lectura, es decir, una imagen puede contener el sistema de archivo de un sistema operativo como Debian, pero esto solo nos permitirá crear los contenedores basados en esta configuración. Si hacemos cambios en el contenedor ya lanzado, al detenerlo esto no se verá reflejado en la imagen. Registros de Docker (Docker Registries): Los registros de Docker guardan las imágenes, estos son repositorios públicos o privados donde podemos subir o descargar[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2016/02/primeros-pasos-con-docker"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2016-02-09T11:38:31Z</dc:date>
  </entry>
  <entry>
    <title>Introducción a docker</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2015/12/introduccion-a-docker" />
    <category term="virtualizacion" />
    <category term="general" />
    <category term="docker" />
    <author>
      <name>admin</name>
    </author>
    <updated>2015-12-22T08:11:44Z</updated>
    <published>2015-12-22T08:11:44Z</published>
    <content type="html">&lt;p&gt;Últimamente Docker está de moda. Si haces una búsqueda por intenet verás que existen multitud de páginas hablando del tema. Podría preguntarme, qué necesidad tengo de escribir otra entrada en mi blog sobre un tema tan estudiado. Y la respuesta sería que si lo escribo lo aprendo, y además he llegado a la conclusión de que tengo que aprenderlo. Empezamos con una definición: Docker es un proyecto de software libre que permite automatizar el despliegue de aplicaciones dentro de contenedores.  ¿Automatizar el despliegue de aplicaciones?, ¡esto me interesa!: este año estoy impartiendo un módulo del CFGS de Administración de Sistemas Informáticos, que se titula: “Implantación de aplicaciones web”. Parece razonable que mis alumnos deban conocer esta nueva tecnología, que en los últimos años (realmente[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2015/12/introduccion-a-docker"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2015-12-22T08:11:44Z</dc:date>
  </entry>
  <entry>
    <title>Configuración de red en KVM en modo public bridge</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/09/configuracion-de-red-en-kvm-en-modo-public-bridge" />
    <category term="opensuse" />
    <category term="bridge" />
    <category term="blog-stack" />
    <category term="virtualizacion" />
    <category term="kvm" />
    <category term="redhat" />
    <category term="debian" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-09-30T09:28:52Z</updated>
    <published>2014-09-30T09:26:13Z</published>
    <content type="html">&lt;p&gt;KVM es una fantástica alternativa libre si deseamos crear una infraestructura de virtualización con software no privativo. Hace ya un tiempo hablamos de su funcionamiento y de cómo crear una máquina virtual. Hoy trataremos la configuración de la red en KVM. Por defecto al instalar KVM en nuestro sistema nos creará una tarjeta de red virtual que usarán nuestras máquinas virtuales, usando un NAT para comunicarse con el exterior, con una red propia, diferente de nuestra red local. En la mayoría de los casos he necesitado configurar un public bridge para que las máquinas virtuales usen los rangos de IP de mi red local, ya sea para uso interno o DMZ. No es excesivamente compliado, supongamos que tenemos dos tarjetas de red (interfaces) instaladas en nuestro servidor de infraestructura (host), en[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/09/configuracion-de-red-en-kvm-en-modo-public-bridge"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-09-30T09:26:13Z</dc:date>
  </entry>
  <entry>
    <title>Virtualizando con KVM</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/05/virtualizando-con-kvm" />
    <category term="xen" />
    <category term="blog-stack" />
    <category term="virtualizacion" />
    <category term="kvm" />
    <category term="comandos" />
    <category term="virsh" />
    <category term="vmware" />
    <category term="virtualbox" />
    <category term="gnu" />
    <category term="debian" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-09-26T12:19:12Z</updated>
    <published>2014-05-15T14:41:31Z</published>
    <content type="html">&lt;p&gt;Virtualizar servidores está al orden del día, ya sea con vmWare, Xen o VirtualBox. Hoy hablaramos de la virtualización completa para Linux KVM o “Kernel-based Virtual Machine”, que usa sólo software libre. KVM está basada en dos partes, una formadada por un módulo de núcleo, llamado “kvm.ko” y las herramientas del espacio del usuario. Está disponible a partir de la versión del kernel 2.6.20. Contiene las extensiones de virtualización Intel VT o AMD-V. Instalación Hemos realizado las pruebas en un máquina con procesador I7 y un sistema operativo GNU/Linux Debian 7 Wheezy. Como primer paso tenemos que comprobar que nuestro ordenador o computadora da soporte a KVM. Por ello visualizaremos el archivo /proc/cpuinfo, para que nos de la información, aplicando el filtro más conveniente. Si tenemos[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/05/virtualizando-con-kvm"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-05-15T14:41:31Z</dc:date>
  </entry>
  <entry>
    <title>Instalar VMware-Tools en servidor virtual GNU Linux</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/09/instalar-vmware-tools-en-servidor-virtual-gnu-linux" />
    <category term="blog-stack" />
    <category term="virtualizacion" />
    <category term="kvm" />
    <category term="comandos" />
    <category term="sistemas-operativos" />
    <category term="ubuntu" />
    <category term="vmware" />
    <category term="vmware-tools" />
    <category term="vmware-workstation" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-09-26T07:10:59Z</updated>
    <published>2014-09-18T15:00:19Z</published>
    <content type="html">&lt;p&gt;Lo primero que nos damos cuenta cuando instalamos un servidor GNU Linux virtualizado, utilizando cualquiera de las plataformas VMware, es que debemos de instalar las herramietas VMware-tools. Hoy veremos como hacerlo. En otros artículo hemos tratado de sistemas libres como KVM, creo que también es interesante que se traten otros sistemas que de una u otra manera tiene relación con GNU/Linux, aunque en parte o totalmente sean privativos. Para el artículo he utilizado el sistema operativo virtual Ubuntu 14.04 LTS sobre VMware Workstation. Cómo podéis ver en la imagen: Al seleccionar “Install VMware Tools” nos dirá que se instalará desde un CD en el sistema operativo virtualizado, le diremos que sí. Si tenemos algún medio utilizandose en la misma unidad de CD se desconectará. Nos aparecerá el[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/09/instalar-vmware-tools-en-servidor-virtual-gnu-linux"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-09-18T15:00:19Z</dc:date>
  </entry>
  <entry>
    <title>Virtualización con KVM y Trisquel</title>
    <link rel="alternate" href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/08/virtualizacion-con-kvm-y-trisquel" />
    <category term="trisquel" />
    <category term="blog-stack" />
    <category term="virtualizacion" />
    <category term="kvm" />
    <category term="gnu" />
    <category term="linux" />
    <author>
      <name>ochobitshacenunbyte</name>
    </author>
    <updated>2014-08-18T13:16:00Z</updated>
    <published>2014-08-18T13:16:00Z</published>
    <content type="html">&lt;p&gt;Hace ya algún tiempo hablamos de como instalar el conjunto de herramientas en nuestro GNU/Linux, para poder crear y gestionar máquinas virtuales con KVM. Hoy avanzaremos más en el proceso, y crearemos una máquina virtual. Usaremos el sistema libre Trisquel, en su versión 6. Primero de todo tenemos que comprobar que nuestro procesador soporta la virtualización además de instalar los paquetes necesarios, podemos seguir las instrucciones de éste enlace: Virtualizando con KVM Si todo ha ido bien, ya podemos empezar a virtualizar. Como he comentado al principio del artículo me he descargado la imagen ISO del sistema operativo totalmente libre GNU/Linux Trisquel, en su versión 6. Se me olvidaba, el host o máquina donde correrá la máquina virtual es un sistema ElementaryOS, en su versión de 64 bits.[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/ochobitshacenunbyte/2014/08/virtualizacion-con-kvm-y-trisquel"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>ochobitshacenunbyte</dc:creator>
    <dc:date>2014-08-18T13:16:00Z</dc:date>
  </entry>
  <entry>
    <title>Instalando OpenStack en mi portátil (2ª parte): DevStack</title>
    <link rel="alternate" href="http://www.blogstack.info/post/pledin/2014/03/instalando-openstack-en-mi-portatil-2-parte-devstack" />
    <category term="virtualizacion" />
    <category term="vagrant" />
    <category term="ansible" />
    <category term="cloud-computing" />
    <category term="open-stack" />
    <category term="devstack" />
    <category term="general" />
    <author>
      <name>admin</name>
    </author>
    <updated>2014-03-29T20:23:35Z</updated>
    <published>2014-03-29T20:23:35Z</published>
    <content type="html">&lt;p&gt;DevStack es un conjunto de script bash que nos permiten instalar OpenStack de forma automática. Tenemos varias formas de realizar la instalación: En una máquina física En este caso partimos de un ordenador instalado con Ubuntu 12.04, y como vemos en la página principal los pasos son muy sencillos: clonamos el repositorio git y elegimos la rama estable de la versión havana. git clone https://github.com/openstack-dev/devstack.git
cd devstack
git checkout stable/havana
Branch stable/havana set up to track remote branch stable/havana from origin.
Switched to a new branch 'stable/havana'
./stack.sh Antes de ejecutar el script podemos configurar distintas opciones de configuración. En una máquina virtual Aunque la opción que nos ofrece más rendimiento es la que hemos visto anteriormente, ya que la[...]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.blogstack.info/post/pledin/2014/03/instalando-openstack-en-mi-portatil-2-parte-devstack"&gt;Leer artículo completo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</content>
    <dc:creator>admin</dc:creator>
    <dc:date>2014-03-29T20:23:35Z</dc:date>
  </entry>
</feed>

